{"version":3,"sources":["Helper.js","components/NavMenu.js","icons/hard-disk.svg","stores/DataSourceDispatcher.js","stores/DataSourceActions.js","stores/DataSourceStore.js","icons/Disks-Icon.svg","icons/w3top-3.svg","icons/process-list.svg","components/MaterialNav.js","components/Layout.js","NextUniqueId.js","components/SingleAxisChart.js","components/Poc1Chart.js","components/AnotherChart2.js","components/Poc2Chart.js","components/LimitFinder.js","components/NetDevChart.js","components/NetDevChartHeader.js","components/NetChartContainer.js","components/NetBenchmark/NetBenchmarkV1.js","components/NetChartContainer_V2.js","components/BlockStatChart.js","components/BlockStatSecondChart.js","components/BlockStatChartHeader.js","components/BlockStatChartContainer_V2.js","components/MountsList.js","stores/DataSourceListener.js","components/DiskBenchmark/BenchmarkStepStatusIcon.js","components/DiskBenchmark/BenchmarkProgressTable.js","components/DiskBenchmark/DiskAvatarContent.js","icons/copy2cloud-v2.svg","icons/Share-Icon.svg","icons/Share-Outlined-Icon.svg","SharedDiskBenchmarkFlow.js","components/DiskBenchmark/DiskBenchmarkResult.js","components/DiskBenchmark/DiskBenchmarkHistory.js","icons/Wizard-Icon.svg","components/DiskBenchmark/DiskBenchmarkDialog.js","components/Popper-Lab.js","components/ProcessList/Store/ProcessListDispatcher.js","components/ProcessList/ProcessColumnsDefinition.js","components/ProcessList/ProcessRowsFilters.js","components/ProcessList/Store/ProcessListLocalStore.js","components/ProcessList/Store/ProcessListActions.js","components/ProcessList/Store/ProcessListStore.js","components/ProcessList/ColumnChooserComponent.js","components/ProcessList/RowsFiltersComponent.js","components/ProcessList/Store/ProcessListTransformations.js","components/ProcessList/ProcessListTable.js","components/ProcessList/ProcessListContainerV1.js","App.js","registerServiceWorker.js","index.js"],"names":["toConsole","caption","obj","arguments","length","undefined","force","c1","console","log","concat","runInBackground","callBack","warn","window","requestIdleCallback","isDocumentHidden","isHidden","document","visibilityState","global","ApplicationLevelTriggers","notifyTrigger","triggerName","start","LoadingStartedAt","current","performance","now","Date","prev","first","last","process","Chart","Object","_transient_builds_publish_KernelManagementLab_Universe_W3Top_ClientApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_transient_builds_publish_KernelManagementLab_Universe_W3Top_ClientApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","secondsPer","x","index","mo","MomentFormat","add","format","Numbers","arg","minNumber","maxNumber","v","Number","parseFloat","isNaN","filterInt","test","NaN","Common","propertyName","keys","str","replace","number","fractionCount","unit","units","scale","i","num","Math","round","toLocaleString","useGrouping","spacer","structured","formatStructured","formatAnything","totalSeconds","styleNormal","styleZero","comHours","seconds","minutes","floor","hours","sSeconds","sMinutes","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","style","Fragment","text","split","map","trim","join","System","message","hostname","system","_unused","Disks","globalDataSource","_Common$tryGetPropert","tryGetProperty","_Common$tryGetPropert2","_transient_builds_publish_KernelManagementLab_Universe_W3Top_ClientApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","hasMounts","mounts","NetDev","_Common$tryGetPropert3","_Common$tryGetPropert4","hasNet","net","_Common$tryGetPropert5","_Common$tryGetPropert6","hasInterfaces","interfaces","interfaceName","interfaceTotals","isInactive","getActiveInterfaceListByActiveStatus","activeStatus","getOptionalInterfacesProperty","Enumerable","Where","hasOwnProperty","isInterfaceActive","Select","ToArray","Error","NavMenu","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","setState","react_default","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","_extends","assign","target","source","prototype","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","hard_disk_ref2","d","hard_disk_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","hard_disk_SvgHardDisk","_ref","svgRef","height","viewBox","width","ref","forwardRef","__webpack_require__","p","DataSourceDispatcher","Dispatcher","BRIEF_UPDATED_ACTION","DATA_SOURCE_UPDATED_ACTION","CONNECTION_STATUS_UPDATED_ACTION","ConnectionStatusUpdated","connectionStatus","dispatcher","dispatch","type","dataSourceStore","DataSourceStore","activeDataSource","kind","briefInfo","action","DataSourceActions","emit","EventEmitter","register","handleActions","Disks_Icon_extends","Disks_Icon_objectWithoutProperties","Disks_Icon_objectWithoutPropertiesLoose","Disks_Icon_ref2","fillRule","Disks_Icon_SvgDisksIcon","Disks_Icon_ForwardRef","w3top_3_extends","w3top_3_objectWithoutProperties","w3top_3_objectWithoutPropertiesLoose","w3top_3_ref2","id","w3top_3_SvgW3Top3","w3top_3_ForwardRef","process_list_extends","process_list_objectWithoutProperties","process_list_objectWithoutPropertiesLoose","process_list_ref2","process_list_SvgProcessList","process_list_ForwardRef","MainIcon","_ref$size","size","_ref$color","color","fill","strokeWidth","stroke","ProcessListIcon","_ref2","_ref2$size","_ref2$color","PersistentDrawerLeft","open","handleDrawerOpen","handleDrawerClose","sis","def","textAlign","paddingRight","paddingBottom","verticalAlign","borderBottom","val","fontWeight","notReady","display","ready","updateBrief","updateGlobalDataSource","on","removeListener","Helper","getDataSource","objectIsNotEmpty","getBriefInfo","_this2","_this$props","classes","theme","infoAsComponent","info","raw","formatInfoHeader","dangerouslySetInnerHTML","__html","SysValueNotReady","sysInfoValueId","SysRow","idMainLink","MainMenuLink","icon","routeTo","subText","ListItem_default","button","component","ListItemIcon_default","ListItemText_default","primary","secondary","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","menuButton","hide","MaterialNav_MainIcon","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","border","cellPadding","cellSpacing","List_default","InfoOutlined_default","AppGitInfo","Version","direction","ChevronLeft_default","ChevronRight_default","Divider_default","InsertChartOutlined_default","DisksIcon","Score_default","MaterialNav_ProcessListIcon","content","contentShift","os","processor","memory","paragraph","Flare_default","React","withStyles","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","drawerVer","flexGrow","spacing","withTheme","Layout","MaterialNav","fluid","children","_uniqueDomIdCounter","nextUniqueId","prefix","c3","require","SingleAxisChart","domId","chart","jsonData","pointCurrent","random","pointLimit","updateInterval","timerId","arrx","arr1","arr2","n","y1","sin","PI","y2","cos","push","microSD","eMMC","currentCount","calcNextSceneDataSource","_initChart","setInterval","_","_updateChart","_this3","clearInterval","c","destroy","generate","bindto","data","json","axis","label","tick","count","y","max","point","r","select","focus","expand","grid","lines","class","load","Poc1Chart","SingleAxisChart_SingleAxisChart","AnotherChart2","arr1Busy","arr2Busy","arr1Transfer","arr2Transfer","y1Busy","y2Busy","y1Transfer","y2Transfer","microSD_Busy","eMMC_Busy","microSD_Transfer","eMMC_Transfer","axes","names","min","show","Poc2Chart","AnotherChart2_AnotherChart2","thresholds","findLimit","base","ret","j","buildLimits","__EmptyJsonChart","txBytes","rxBytes","txPackets","rxPackets","NetDevChart","jsonChart","isInitCompleted","prevLimits","limitBytes","limitPackets","refChart","createRef","buildLocalJsonChart","DomClass","localDataSource","getLocalDataSource","_this$computeAxisLimi","computeAxisLimits","tooltip","title","tooltipTitleFormat","ChartSize","left","Padding","right","numArray","_Helper$Common$tryGet","_Helper$Common$tryGet2","slicedToArray","messageId","_this$computeAxisLimi2","ygrids","done","maxBytes","getMaxOfArray","maxPackets","iconSent","faArrowUp","iconReceived","faArrowDown","NetDevChartHeader","dd","container","marginBottom","marginTop","center","paddingTop","fontSize","top","paddingLeft","forceUpdate","totals","formatBytes","react_fontawesome_index_es","toUpperCase","NetChartContainer","hasProperty","getEns33","getLo","getNone","ds","ens33","err","lo","NetDevChartHeader_NetDevChartHeader","NetDevChart_NetDevChart","__","description","suggestions","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","other","objectWithoutProperties","TextField_default","fullWidth","InputProps","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","match","parts","parse","MenuItem_default","selected","part","highlight","String","getSuggestions","inputValue","deburr","toLowerCase","inputLength","filter","keep","slice","getSuggestionValue","IntegrationAutosuggest","single","popper","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","apiUrl","fetch","then","response","status","ok","error","details","suggestionsRecieved","suggestionsDataSource","catch","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","dist_default","placeholder","onChange","suggestionsContainerOpen","suggestionsList","renderSuggestionsContainer","options","Paper_default","containerProps","square","divider","popperNode","InputLabelProps","shrink","Popper_default","anchorEl","Boolean","clientWidth","zIndex","margin","listStyleType","NetChartContainer_V2","tryInitNetChartList","tryBuildNetChartList","visibleInterfaceNames","netChartList","waiterTick","activeInterfaceNames","getActiveInterfaceList","OrderByDescending","t","getTotals","ThenBy","glo","_unused2","chartCounter","netChart","renderLoading","renderNormal","BlockStatChart","_React$Component","hasBlock","block","blocks","readSectors","writeSectors","readOperations","writeOperations","_Helper$Common$tryGet3","_Helper$Common$tryGet4","tempStyle","queue","busy","__customColors","BlockStatSecondChart","limitQueue","limitBusy","inFlightRequests","ioMilliseconds","colors","BlockStatDevChartHeader","container2","whiteSpace","overflow","textOverflow","getOptionalMountsProperty","deviceCopy","mountInfo","find","mountEntry","device","mountPath","fileSystem","totalSize","isReadonly","freeSpace","componentMountPath","componentTotalSize","componentReadOnly","componentFileSystem","totalsRaw","blockTotals","FirstOrDefault","diskVolKey","stat","renderMountPathHeader","BlockChartContainer_V2","tryInitBlockChartList","tryBuildBlockChartList","visibleDeviceNames","blockChartList","blockNames","BlockStatChartHeader_BlockStatDevChartHeader","BlockStatChart_BlockStatChart","BlockStatSecondChart_BlockStatSecondChart","iconStyle","minWidth","iconUnknown","iconBlock","faServer","iconRam","faMemory","iconNet","faNetworkWired","iconSwap","faFile","MountsList","getTrProps","rowInfo","instance","suffix","original","isTmpFs","isBlockDevice","isNetworkShare","isSwap","tryInitMountsSource","tryBuildMountsSource","_React$createElement","pageSize","sizeCell","row","rightAlign","rows","getColumnWidth","accessor","headerText","cellLength","toConsumableArray","getValue","es","noDataText","showPagination","defaultPageSize","pageSizeOptions","getNoDataProps","columns","Header","Cell","mountPathCell","defaultSorted","desc","dataSourceListener","DataSourceListener","watchdogTick","markConnectionState","tryToConnect","applyDocumentTitle","isConnected","needConnection","isConnecting","hub","signalR","withUrl","connection","build","dataSource","toLocaleTimeString","onclose","body","getHostName","stop","newIsConencted","toString","iconPending","iconInProgress","faArrowAltCircleRight","iconComplete","faCheck","iconError","ErrorOutlineOutlined_default","iconSkipped","BenchmarkStepStatusIcon","Pending","InProgress","Completed","Skipped","LinearProgress2","animationDuration","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","BenchmarkProgressTable","progress","pro","isCompleted","steps","progressValue","step","perCents","hasMetrics","avgBytesPerSecond","canHaveMetrics","stepIndex","colSpan","formatSpeed","chipStyle","chipIcons","Unknown","Block","Ram","Net","Swap","DiskAvatarContent","disk","copy2cloud_v2_extends","copy2cloud_v2_objectWithoutProperties","copy2cloud_v2_objectWithoutPropertiesLoose","copy2cloud_v2_ref2","copy2cloud_v2_SvgCopy2CloudV2","copy2cloud_v2_ForwardRef","Share_Icon_extends","Share_Icon_objectWithoutProperties","Share_Icon_objectWithoutPropertiesLoose","Share_Icon_ref2","Share_Icon_SvgShareIcon","Share_Outlined_Icon_extends","Share_Outlined_Icon_objectWithoutProperties","Share_Outlined_Icon_objectWithoutPropertiesLoose","Share_Outlined_Icon_ref2","Share_Outlined_Icon_SvgShareOutlinedIcon","Share_Outlined_Icon_ForwardRef","queryString","SharedDiskBenchmarkFlow","loc","location","queryParameters","search","version","base32encoded","bytes","base32Decode","jsonString","utf8Decode","JSON","e","selectedRow","stringify","uint8array","utf8Encode","safeUrlEncoded","base32Encode","argBytesArray","view","Uint8Array","bytesString","len","byteLength","fromCharCode","UTF8","argString","charCodeAt","CopyToCloudIcon","ShareIcon","copyTextToClipboard","navigator","clipboard","writeText","textArea","appendChild","msg","execCommand","removeChild","fallbackCopyTextToClipboard","widths","iops","spaceIops","iopsScale","bandwidth","spaceBandwidth","bandwidthUnits","operation","panel","values","reduce","sum","panelSpace","parameters","heights","metrics","share","isSharedBenchmarkResult","styles","main","copyToCloud","shareIcon","ShareIconSize","shareBar","cursor","poweredByBar","verticalAction","transform","lineHeight","letterSpacing","verticalParameters","Details","allowShare","full","protocol","canAccessClipboard","buildLink","DiskBenchmarkResult_CopyToCloudIcon","opacity","engine","engineVersion","workingSetSize","o_Direct","ParametersPanel","yPosition","panelStyles","Metrics","align","ActionPanel","xPosition","blockSize","cpuUsage","metricsStyle","unitsStyle","iopsRaw","iopsUnits","iops2","tens","bw","cpu","user","kernel","CpuUsagePanel","DiskBenchmarkResult","opened","handleClose","prevProps","prevState","snapshot","isOpenedChanged","isRowChanged","token","link","forced","randomAccessBlockSize","textBlockSize","Dialog_default","onClose","aria-labelledby","maxWidth","DialogContent_default","DiskBenchmarkResult_ShareIcon","allocate","allocateCpuUsage","seqRead","seqReadCpuUsage","seqWrite","seqWriteCpuUsage","randRead1T","randRead1TCpuUsage","randWrite1T","randWrite1TCpuUsage","randReadNT","randReadNTCpuUsage","randWriteNT","randWriteNTCpuUsage","threadsNumber","containerid","selection","range","createTextRange","moveToElementText","getElementById","getSelection","createRange","selectNode","removeAllRanges","addRange","selectNodeText","href","DiskBenchmarkHistory","prevTrigger","tryBuildDiskHistorySource","history","fetchDiskHistorySource","forEach","bechmark","createdAt","createdDate","method","historyProjection","emptyRow","nextProps","nextState","nextContext","trigger","speedCell","defaultGreyCell","centerAlign","column","onBenchmarkSelected","background","aggregate","faCheckDouble","DiskBenchmarkResult_DiskBenchmarkResult","Wizard_Icon_extends","Wizard_Icon_objectWithoutProperties","Wizard_Icon_objectWithoutPropertiesLoose","Wizard_Icon_ref2","Wizard_Icon_SvgWizardIcon","Wizard_Icon_ForwardRef","WizardIcon","Color","PROGRESS_TICK_INTERVAL","EMPTY_PROGRESS_STEP","repeat","EMPTY_PROGRESS_STEP2","EMPTY_PROGRESS","themeReadWrite","createMuiTheme","palette","desaturate","lighten","hex","themeReadWriteSelected","themeReadOnly","themeReadOnlySelected","wizardButton","wizardReset","instructions","debug","green","red","actions","actionButtons","diskChips","optionStyles","flexWrap","textField","engineField","dense","menu","defaultOptions","workingSet","randomAccessDuration","disableODirect","threads","errors","isValid","validateOptions","errorText","isInt","greaterOrEqual","timer","getNeedHideDialog","needHideDialog","queryParams","DiskBenchmarkDialog","_React$useState","useState","_React$useState2","setOpen","_React$useState3","_React$useState4","historySelectedToken","setHistorySelectedToken","_React$useState5","_React$useState6","activeStep","setActiveStep","_React$useState7","_React$useState8","disks","setDisks","_React$useState9","_React$useState10","engines","setEngines","_React$useState11","_React$useState12","selectedDisk","setSelectedDisk","_React$useState13","_React$useState14","setOptions","_React$useState15","_React$useState16","setProgress","_React$useState17","_React$useState18","errorAnchor","_React$useState19","_React$useState20","_React$useState21","_React$useState22","historyTrigger","setHistoryTrigger","errorElement","useRef","getStepContent","isReadOnly","getTheme","diskIndex","core_styles","Chip_default","avatar","Avatar_default","clickable","handleSelectDisk","renderStepSelectDisk","safeEngines","spanEngine","idEngine","noValidate","autoComplete","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","handleChangeOption","Input_default","engineIndex","FormHelperText_default","helperText","renderStepTuneOptions","DiskBenchmark_BenchmarkProgressTable","useEffect","disksAndEngines","initDisksSource","tempOptions","progressTick","benchInfo","isBackAllowed","isNextDisabled","areNextBackButtonsVisible","errorOpened","errorId","setTimeout","Button_default","DiskBenchmarkHistory_DiskBenchmarkHistory","selectedObject","placement","DialogTitle_default","minHeight","Stepper_default","alternativeLabel","Step_default","StepLabel_default","DialogActions_default","disabled","payload","post","headers","Accept","Content-Type","startBenchmark","notifyCancelDiskBenchmark","PopperLab","src","aria-describedby","ProcessListDispatcher","ProcessColumnsDefinition","columnKey","AllColumnKeys","Headers","field","DefaultColumnKeys","header","all","Any","validateDefaultColumnKeys","ProcessRowsFilters","TopFilter","NeedNoFilter","NeedKernelThreads","NeedServices","NeedContainers","storages","localStorage","sessionStorage","cookieStorage","plugins","defaultPlugin","expiredPlugin","eventsPlugin","store","createStore","GenericStore","getDefault","set","properties","ver","get","stored","SelectedColumns","RowsFilters","defaultSorting","Sorting","SELECTED_COLUMNS_UPDATED_ACTION","PROCESS_LIST_UPDATED_ACTION","ROWS_FILTERS_UPDATED_ACTION","processListStore","ProcessListStore","selectedColumns","ProcessListLocalStore","rowsFilters","processList","ProcessListActions","FixedSpan","IoTransferLayout","CpUsageLayout","ABS","ABS3","firstRender","ColumnChooserComponent","getSelectedColumns","chbox","nowrap","space","checkOnChange","checked","isChecked","copy","filtered","borderRight","ColumnChooserComponent_FixedSpan","colProcess","NoWrap","RowsFiltersComponent","getRowsFilters","topValue","customTop","getCustomTopError","rawCustomTop","customTopError","asyncRaiseUpdate","onChangeTop","newTopValue","st","parseInt","isTopChecked","onChangedKind","property","RowsFiltersComponent_NoWrap","Radio_default","core_index_es","newCustomTop","onFocus","ProcessListTable","updatedProcessList","sorting","getProcessList","processListRaw","isIt","ProcessListTransformations","cellPercents","cellCurrent","cellKbTotal","cellMemory","cellDuration","formatDuration","cellCounter","cells","priority","rss","shared","swapped","userCpuUsage_PerCents","kernelCpuUsage_PerCents","totalCpuUsage_PerCents","childrenUserCpuUsage_PerCents","childrenKernelCpuUsage_PerCents","childrenTotalCpuUsage_PerCents","uptime","userCpuUsage","kernelCpuUsage","totalCpuUsage","childrenUserCpuUsage","childrenKernelCpuUsage","childrenTotalCpuUsage","ioTime","ioTime_PerCents","readBytes","writeBytes","readBlockBackedBytes","writeBlockBackedBytes","readBlockBackedBytes_Current","writeBlockBackedBytes_Current","readSysCalls_Current","writeSysCalls_Current","readSysCalls","writeSysCalls","readBytes_Current","writeBytes_Current","minorPageFaults_Current","majorPageFaults_Current","childrenMinorPageFaults_Current","childrenMajorPageFaults_Current","minorPageFaults","majorPageFaults","childrenMinorPageFaults","childrenMajorPageFaults","stylePercents","cellStyles","tableHeaders","tableHeader","cell","cellStyle","endsWith","tableColumn","getProps","sorted","onSortedChange","newSorted","shiftKey","newSorting","ProcessListContainerV1","isRunning","active","updatedSelectedColumns","refreshProcessList","requestProcessListUpdate","openedColumnsChooser","openedRowsFilters","processes","kinds","mixedPriority","needUpdate","needForce","handleCloseColumnsChooser","handleCloseRowsFilters","faCog","numberOfColumns","ProcessListTable_ProcessListTable","textAlign_ignore","ColumnChooserComponent_ColumnChooserComponent","RowsFiltersComponent_RowsFiltersComponent","polyfill","App","logVersionInfo","$","CommitAt","CommitDate","BuildAt","BuildDate","benchmarkResult","tryParse","Layout_Layout","react_router","exact","path","MNav","NetBenchmarkV1","_404","GetMenuComponents","isLocalhost","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","getElementsByTagName","getAttribute","rootElement","ReactDOM","render","react_router_dom","basename","App_App","URL","origin","addEventListener","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5cb6b50f.chunk.js","sourcesContent":["import React from 'react';\nimport * as Enumerable from \"linq-es2015\"\nimport MomentFormat from 'moment';\n\nexport const toConsole = function(caption, obj, {force} = {force:false}) {\n    if (process.env.NODE_ENV !== 'production' || force) {\n        // console.log(`≡≡≡✵✵✵ ${caption} ✵✵✵≡≡≡`);\n        // console.log(obj);\n        // console.log('\\r\\n');\n        const c1='color:#440B0B';\n        const c2='color:#440B0B;font-weight: '; // bold?\n        const c3='color:#440B0B;font-weight:';\n        const c4='color:;font-weight:';\n\n        const hasObj = arguments.length >= 2;\n        if (hasObj)\n            console.log(`%c┈🛈┈ ${caption}\\r\\n%o`, c1, obj);\n        else\n            // console.log(`%c≡≡≡✵✵✵ %c${caption}%c ✵✵✵≡≡≡`, color);\n            console.log(`%c┈🛈┈ ${caption}`, c1);\n    }\n}\n\n\n\nexport const runInBackground = callBack => {\n    if (typeof callBack !== \"function\") console.warn(`callback is not a function. it's a ${typeof callBack}`);\n    \n    if (window && window.requestIdleCallback)\n        window.requestIdleCallback(callBack);\n    else\n        callBack();\n}\n\nexport const isDocumentHidden = () => {\n    // https://www.w3.org/TR/page-visibility-2/#idl-def-document-visibilitystate\n    let isHidden = false;\n    if (document && document.visibilityState && document.visibilityState !== 'visible') { isHidden = true; }\n    return isHidden;\n}\n\nglobal.ApplicationLevelTriggers = {};\nexport const notifyTrigger = (triggerName) => {\n    const start = window.LoadingStartedAt || 0;\n    const current = (window.performance && window.performance.now) ? window.performance.now() : +new Date();\n    if (window.ApplicationLevelTriggers === undefined) window.ApplicationLevelTriggers = {};\n    let prev = window.ApplicationLevelTriggers[triggerName];\n    if (prev === undefined) {\n        prev = {first: current - start};\n        window.ApplicationLevelTriggers[triggerName] = prev;\n    }\n    \n    prev.last = current - start;\n};\n\nexport const log = function(caption) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.log(`${caption}`);\n    }\n}\n\nexport class Chart {\n    static tooltipTitleFormat(secondsPer) {\n        if (!secondsPer) secondsPer = 1;\n        return (x,index) => {\n            let mo = MomentFormat();\n            mo.add((x-60) * secondsPer, 'seconds');\n            return mo.format(\"LTS\");\n        }\n    }\n}\n\nexport class Numbers\n{\n    static isInRange(arg, minNumber, maxNumber)\n    {\n        const v = Number.parseFloat(arg);\n        return v >= minNumber && v <= maxNumber;\n    }\n\n    static greaterOrEqual(arg, minNumber)\n    {\n        const v = Number.parseFloat(arg);\n        return v >= minNumber;\n    }\n    \n    static isInt(value)\n    {\n        return !isNaN(Numbers.filterInt(value));\n    }\n\n    static filterInt (value) {\n        if (/^(\\-|\\+)?([0-9]+|Infinity)$/.test(value)) {\n            return Number(value);\n        }\n        \n        return NaN;\n    }\n\n}\n\nexport class Common {\n    \n    static tryGetProperty(obj, propertyName) {\n        if (typeof obj == \"object\" && (propertyName in obj))\n            return [true, obj[propertyName]];\n\n        return [false, null];\n    }\n\n    // object has at least one property\n    static objectIsNotEmpty(obj) {\n        return typeof obj === \"object\" && Object.keys(obj).length > 0;\n    }\n\n    static htmlEncode(str) {\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    \n    static formatStructured(number, fractionCount = 2, unit = \"B\") {\n        if (number === null || number === undefined)\n            return {value: null, units: null};\n\n        let scale = 1;\n        if (fractionCount === 1) scale = 10.0;\n        else if (fractionCount === 2) scale = 100.0;\n        else if (fractionCount === 3) scale = 1000.0;\n        else if (fractionCount > 0) for(let i=0; i<fractionCount; i++) scale=scale*10.0;\n\n        let format = num => (Math.round(num * scale) / scale).toLocaleString(undefined, {useGrouping: true});\n        if (number === 0)\n            return {value: \"0\", units: null};\n\n        if (number < 1499)\n            // return `${}${spacer}${unit}`;\n            return {value: format(number), units: `${unit}`};\n\n        if (number < 1499999)\n            // return `${format(number / 1024.0)}${spacer}K${unit}`;\n            return {value: format(number / 1024.0), units: `K${unit}`};\n\n        if (number < 1499999999)\n            // return `${format(number / 1024.0 / 1024.0)}${spacer}M${unit}`;\n            return {value: format(number / 1024.0 / 1024.0), units: `M${unit}`};\n\n        if (number < 1499999999999)\n            // return `${format(number / 1024.0 / 1024.0 / 1024.0)}${spacer}G${unit}`;\n            return {value: format(number / 1024.0 / 1024.0 / 1024.0), units: `G${unit}`};\n\n        return {value: format(number / 1024.0 / 1024.0 / 1024.0 / 1024.0), units: `T${unit}`};\n        \n    }\n\n    static formatAnything(number, fractionCount = 2, spacer = ' ', unit = \"B\") {\n        const structured = Common.formatStructured(number, fractionCount, unit);\n        if (structured.units)\n            return `${structured.value}${spacer}${structured.units}`;\n        else \n            return structured.value;\n    }\n    \n    static formatBytes(number, fractionCount) {\n        if (typeof fractionCount !== \"number\") fractionCount = 2; \n            return Common.formatAnything(number, fractionCount, ' ', \"B\");\n    }\n    \n    static formatDuration(totalSeconds, styleNormal, styleZero) {\n        const seconds = totalSeconds % 60;\n        const minutes = Math.floor(totalSeconds / 60) % 60;\n        const hours = Math.floor(totalSeconds / 3600);\n        // return (<>{hours}<span style={styleZero}>:</span>{minutes}<span style={styleZero}>:</span>{seconds}</>)\n\n        const sSeconds = seconds > 9 ? seconds : (\"0\" + seconds);\n        const sMinutes = minutes > 9 ? minutes : (\"0\" + minutes);\n\n        let comHours;\n        if (hours > 0) \n            comHours = (<span style={styleNormal}>{hours}</span>);\n        else\n            comHours = (<span style={styleZero}>0</span>);\n        \n        return (<>{comHours}<span style={styleZero}>:</span>{sMinutes}<span style={styleZero}>:</span>{sSeconds}</>)\n    }\n    \n    static formatInfoHeader(text) {\n        if (text === undefined || text === null) return null;\n        \n        // OK for Android 5, Safari 9.1.3 and Chrome 41 \n        var arr = text.split(/[,]/g);\n        var ret = arr\n            .map(x => `<span style='white-space: nowrap'>${x.trim()}</span>`)\n            .join(', ');\n        \n        return ret;\n    }\n}\n\nexport class System\n{\n    static getHostName(message)\n    {\n        try {\n            let hostname = message.system.hostname;\n            if (hostname.length >= 0) {\n                return hostname; \n            }\n        }catch{}\n        \n        return null;\n    }\n}\n\nexport class Disks\n{\n    static getOptionalMountsProperty(globalDataSource)\n    {\n        let [hasMounts, mounts] = Common.tryGetProperty(globalDataSource, \"mounts\");\n        return hasMounts ? mounts : null;\n    }\n}\n\nexport class NetDev\n{\n    // returns either [null] or [object]\n    static getOptionalInterfacesProperty(globalDataSource)\n    {\n        let [hasNet, net] = Common.tryGetProperty(globalDataSource, \"net\");\n        if (hasNet)\n        {\n            let [hasInterfaces, interfaces] = Common.tryGetProperty(net, \"interfaces\");\n            return hasInterfaces ? interfaces : null;\n        }\n        \n        return null;\n    }\n    \n    // metadata check is skipped for performance - should not be used outside of \n    // Helper.NetDev class\n    static isInterfaceActive(globalDataSource, interfaceName)\n    {\n        let isInactive = globalDataSource.net.interfaceTotals[interfaceName].isInactive;\n        return !isInactive;\n    }\n\n    static getActiveInterfaceList(globalDataSource)\n    {\n        return NetDev.getActiveInterfaceListByActiveStatus(globalDataSource, true);\n    }\n\n    static getInActiveInterfaceList(globalDataSource)\n    {\n        return NetDev.getActiveInterfaceListByActiveStatus(globalDataSource, false);\n    }\n\n    // activeStatus is true|false\n    static getActiveInterfaceListByActiveStatus(globalDataSource, activeStatus)\n    {\n        // interfaces - object: key is interfaceName\n        let interfaces = NetDev.getOptionalInterfacesProperty(globalDataSource);\n        if (interfaces !== null) {\n            return Enumerable.AsEnumerable(Object.keys(interfaces))\n                .Where(interfaceName => interfaces.hasOwnProperty(interfaceName))\n                .Where(interfaceName => NetDev.isInterfaceActive(globalDataSource, interfaceName) === activeStatus)\n                .Select(interfaceName => interfaceName)\n                .ToArray();\n        }\n\n        throw Error(\"interface property is expected for globalDataSource\");\n    }\n\n}\n","import React, { Component } from 'react';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './NavMenu.css';\n\nexport class NavMenu extends Component {\n  static displayName = NavMenu.name;\n\n  constructor (props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar () {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render () {\n    return (\n      <header>\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\n          <Container>\n            <NavbarBrand tag={Link} to=\"/\"></NavbarBrand>\n            React Graph Lab\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\n              <ul className=\"navbar-nav flex-grow\">\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/disk-v1\">Disk</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/net-v2\">Network-V2</NavLink>\n                </NavItem>\n                \n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/net-v1\">Network</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/1-axis\">Single Y-axis chart</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/2-axis\">Double Y-axis chart</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/material-nav\">Alt-NAV</NavLink>\n                </NavItem>\n\n              </ul>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </header>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m351.425781 0h-314.679687c-19.878906 0-36.046875 16.160156-36.046875 36.027344v175.46875c0 5.5625 4.507812 10.070312 10.070312 10.070312 5.558594 0 10.070313-4.507812 10.070313-10.070312v-175.46875c0-8.757813 7.136718-15.886719 15.90625-15.886719h314.679687c8.785157 0 15.933594 7.128906 15.933594 15.886719v439.914062c0 8.777344-7.148437 15.917969-15.933594 15.917969h-314.679687c-8.773438 0-15.90625-7.140625-15.90625-15.925781l-.199219-174.675782c-.007813-5.558593-4.511719-10.058593-10.070313-10.058593-.003906 0-.007812 0-.011718 0-5.5625.003906-10.066406 4.519531-10.058594 10.082031l.199219 174.660156c0 19.882813 16.171875 36.058594 36.046875 36.058594h314.679687c19.890625 0 36.074219-16.175781 36.074219-36.058594v-439.914062c0-19.867188-16.183594-36.027344-36.074219-36.027344zm0 0\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m142.863281 223.339844c0 28.226562 22.980469 51.191406 51.222657 51.191406 28.242187 0 51.21875-22.964844 51.21875-51.191406 0-28.226563-22.976563-51.1875-51.21875-51.1875-28.242188 0-51.222657 22.960937-51.222657 51.1875zm82.300781 0c0 17.121094-13.941406 31.046875-31.078124 31.046875-17.140626 0-31.082032-13.925781-31.082032-31.046875 0-17.117188 13.941406-31.046875 31.082032-31.046875 17.136718 0 31.078124 13.929687 31.078124 31.046875zm0 0\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m135.292969 420.769531v28.339844c0 10.675781 8.675781 19.363281 19.34375 19.363281h169.929687c10.683594 0 19.375-8.6875 19.375-19.363281v-28.339844c0-10.660156-8.691406-19.335937-19.375-19.335937h-169.929687c-10.664063 0-19.34375 8.671875-19.34375 19.335937zm20.140625.804688h168.367187v26.757812h-168.367187zm0 0\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m193.941406 213.269531c-5.558594 0-10.070312 4.507813-10.070312 10.070313s4.511718 10.070312 10.070312 10.070312h.144532c5.558593 0 10.070312-4.507812 10.070312-10.070312s-4.511719-10.070313-10.070312-10.070313zm0 0\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m62.011719 223.339844c0 28.832031 9.378906 56.636718 26.59375 79.445312-2.921875 2.265625-5.792969 4.753906-8.527344 7.484375-.15625.160157-.3125.324219-.457031.492188-15.789063 18.035156-10.679688 38.664062.75 50.199219 6.84375 6.90625 16.59375 11.402343 26.917968 11.402343 8.152344 0 16.664063-2.804687 24.390626-9.441406.1875-.164063.371093-.332031.546874-.511719 5.171876-5.160156 9.464844-10.808594 13.023438-16.398437 15.476562 6.191406 31.859375 9.339843 48.835938 9.339843 26.023437 0 51.207031-7.554687 72.820312-21.847656 4.640625-3.066406 5.914062-9.316406 2.847656-13.953125-3.066406-4.640625-9.316406-5.914062-13.953125-2.847656-18.3125 12.109375-39.652343 18.507813-61.714843 18.507813-13.691407 0-26.917969-2.40625-39.453126-7.152344 1.453126-3.445313 2.578126-6.527344 3.417969-9.035156 6.019531-18.015626 6.339844-29.921876.945313-35.390626-.03125-.039062-.066406-.074218-.105469-.109374-5.46875-5.382813-17.375-5.0625-35.386719.953124-4.496094 1.5-10.839844 3.929688-17.804687 7.515626-15.234375-19.570313-23.550781-43.65625-23.550781-68.648438 0-61.667969 50.214843-111.839844 111.933593-111.839844 61.738281 0 111.964844 50.171875 111.964844 111.839844 0 9.25-1.148437 18.5-3.414063 27.496094-1.355468 5.390625 1.917969 10.863281 7.308594 12.222656 5.398438 1.359375 10.867188-1.914062 12.222656-7.308594 2.667969-10.597656 4.019532-21.503906 4.019532-32.410156 0-72.773438-59.261719-131.980469-132.101563-131.980469-72.820312-.003906-132.070312 59.203125-132.070312 131.976563zm80.128906 77.046875c-1.148437 6.527343-4.121094 16.886719-9.5625 27.398437-.199219.320313-.390625.652344-.558594 1-.058593.117188-.101562.238282-.152343.359375-3.515626 6.539063-7.992188 13.074219-13.585938 18.726563-8.519531 7.101562-17.96875 4.597656-23.601562-1.089844-5.042969-5.089844-7.6875-13.652344-.117188-22.511719 4.152344-4.101562 8.773438-7.601562 13.523438-10.5625.34375-.183593.675781-.386719 1-.613281 12.335937-7.464844 25.359374-11.351562 33.054687-12.707031zm0 0\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m75.058594 39.671875c-19.203125 0-34.828125 15.617187-34.828125 34.8125 0 19.191406 15.625 34.808594 34.828125 34.808594 19.207031 0 34.828125-15.617188 34.828125-34.808594 0-19.195313-15.621094-34.8125-34.828125-34.8125zm0 49.480469c-8.097656 0-14.6875-6.582032-14.6875-14.667969 0-8.089844 6.589844-14.667969 14.6875-14.667969 8.101562 0 14.6875 6.578125 14.6875 14.667969 0 8.085937-6.589844 14.667969-14.6875 14.667969zm0 0\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m312.796875 39.671875c-19.203125 0-34.828125 15.617187-34.828125 34.8125 0 19.191406 15.625 34.808594 34.828125 34.808594 19.222656 0 34.855469-15.617188 34.855469-34.808594.003906-19.195313-15.632813-34.8125-34.855469-34.8125zm0 49.480469c-8.097656 0-14.6875-6.582032-14.6875-14.667969 0-8.089844 6.589844-14.667969 14.6875-14.667969 8.117187 0 14.71875 6.578125 14.71875 14.667969 0 8.085937-6.601563 14.667969-14.71875 14.667969zm0 0\"\n});\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m75.203125 402.707031c-19.207031 0-34.828125 15.617188-34.828125 34.8125 0 19.191407 15.621094 34.808594 34.828125 34.808594 19.203125 0 34.828125-15.617187 34.828125-34.808594 0-19.195312-15.625-34.8125-34.828125-34.8125zm0 49.480469c-8.101563 0-14.6875-6.582031-14.6875-14.667969 0-8.089843 6.585937-14.667969 14.6875-14.667969 8.097656 0 14.6875 6.578126 14.6875 14.667969 0 8.085938-6.589844 14.667969-14.6875 14.667969zm0 0\"\n});\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m293.707031 303.832031c2.886719 0 5.75-1.234375 7.742188-3.625l.140625-.171875c3.5625-4.269531 2.984375-10.621094-1.289063-14.183594-4.273437-3.5625-10.621093-2.984374-14.183593 1.289063l-.140626.171875c-3.5625 4.273438-2.984374 10.621094 1.289063 14.183594 1.882813 1.570312 4.167969 2.335937 6.441406 2.335937zm0 0\"\n});\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m10.570312 266.566406c5.5625 0 10.070313-4.507812 10.070313-10.070312v-.199219c0-5.5625-4.507813-10.070313-10.070313-10.070313s-10.070312 4.507813-10.070312 10.070313v.199219c0 5.5625 4.507812 10.070312 10.070312 10.070312zm0 0\"\n});\n\nvar SvgHardDisk = function SvgHardDisk(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    height: \"512pt\",\n    viewBox: \"-62 0 511 512\",\n    width: \"512pt\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgHardDisk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/hard-disk.4d9423f6.svg\";\nexport { ForwardRef as ReactComponent };","import {Dispatcher} from \"flux\";\n\nexport default new Dispatcher();\n","// Separate file per kind of message\nimport dispatcher from \"./DataSourceDispatcher\";\n\nexport const BRIEF_UPDATED_ACTION = \"BRIEF_UPDATED_ACTION\";\nexport const DATA_SOURCE_UPDATED_ACTION = \"DATA_SOURCE_UPDATED_ACTION\";\nexport const CONNECTION_STATUS_UPDATED_ACTION = \"CONNECTION_STATUS_UPDATED_ACTION\";\n\n\nexport function DataSourceUpdated(dataSource) {\n    dispatcher.dispatch({\n        type: DATA_SOURCE_UPDATED_ACTION,\n        value: dataSource\n    })\n}\n\nexport function BriefUpdated(briefInfo) {\n    dispatcher.dispatch({\n        type: BRIEF_UPDATED_ACTION,\n        value: briefInfo\n    })\n}\n\nexport function ConnectionStatusUpdated(connectionStatus) {\n    dispatcher.dispatch({\n        type: CONNECTION_STATUS_UPDATED_ACTION,\n        value: connectionStatus\n    })\n}\n","import dispatcher from \"./DataSourceDispatcher\";\nimport {EventEmitter} from \"events\";\nimport * as DataSourceActions from \"./DataSourceActions\";\n\nclass DataSourceStore extends EventEmitter {\n\n    constructor() {\n        super();\n        // local copy per message\n        this.activeDataSource = {kind: 'empty'};\n        this.connectionStatus = false;\n        this.briefInfo = null;\n    }\n\n    // single handler for the app for each kind of message\n    handleActions(action) {\n        switch (action.type) {\n            // a cast per message\n            case DataSourceActions.DATA_SOURCE_UPDATED_ACTION: {\n                this.activeDataSource = action.value;\n                this.emit(\"storeUpdated\");\n                break;\n            }\n            case DataSourceActions.CONNECTION_STATUS_UPDATED_ACTION: {\n                this.connectionStatus = action.value;\n                this.emit(\"storeUpdated\");\n                break;\n            }\n            case DataSourceActions.BRIEF_UPDATED_ACTION: {\n                this.briefInfo = action.value;\n                this.emit(\"briefUpdated\");\n                break;\n            }\n            default: {\n            }\n        }\n    }\n\n    // a method per message\n    getDataSource() {\n        return this.activeDataSource;\n    }\n\n    getBriefInfo() {\n        return this.briefInfo;\n    }\n}\n\nconst dataSourceStore = new DataSourceStore();\ndispatcher.register(dataSourceStore.handleActions.bind(dataSourceStore));\nexport default dataSourceStore;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M60.292 44.361 C 53.062 46.380,46.731 51.994,43.968 58.835 L 42.464 62.561 42.464 99.223 L 42.464 135.885 44.851 140.714 C 46.164 143.370,48.120 146.388,49.199 147.420 L 51.159 149.297 48.529 152.282 C 42.154 159.518,42.155 159.509,42.155 199.676 C 42.155 239.842,42.154 239.834,48.529 247.069 L 51.159 250.054 49.199 251.931 C 48.120 252.964,46.164 255.982,44.851 258.638 L 42.464 263.467 42.464 300.129 L 42.464 336.791 43.968 340.516 C 45.813 345.087,51.011 350.926,55.046 352.962 C 61.225 356.080,56.975 355.999,202.917 355.789 L 340.681 355.592 344.571 354.052 C 348.936 352.325,354.897 346.840,357.098 342.526 C 359.686 337.452,359.894 333.842,359.683 297.569 L 359.481 262.885 357.017 258.274 C 355.661 255.738,353.705 252.851,352.669 251.859 L 350.785 250.054 353.441 247.069 C 354.902 245.428,356.859 242.480,357.789 240.519 L 359.481 236.953 359.481 199.676 L 359.481 162.399 357.789 158.833 C 356.859 156.872,354.902 153.924,353.441 152.282 L 350.785 149.297 352.669 147.493 C 353.705 146.500,355.661 143.614,357.017 141.078 L 359.481 136.467 359.683 101.783 C 359.894 65.510,359.686 61.899,357.098 56.825 C 354.897 52.512,348.936 47.027,344.571 45.299 L 340.681 43.760 201.945 43.653 C 92.271 43.568,62.598 43.717,60.292 44.361 M343.376 56.784 C 344.746 57.886,346.596 60.074,347.488 61.646 L 349.109 64.506 349.109 98.865 L 349.109 133.225 347.586 136.318 C 346.599 138.323,345.003 140.146,343.048 141.504 L 340.032 143.598 200.972 143.598 L 61.912 143.598 59.193 141.830 C 57.693 140.854,55.658 138.674,54.655 136.967 L 52.836 133.874 52.836 99.190 C 52.836 60.814,52.709 62.034,57.149 57.904 C 61.137 54.194,50.049 54.446,201.723 54.621 L 340.885 54.781 343.376 56.784 M90.023 76.661 C 65.018 85.432,71.138 122.600,97.588 122.600 C 118.516 122.600,129.144 97.940,114.767 82.738 C 108.355 75.959,98.750 73.599,90.023 76.661 M219.680 86.543 C 216.765 88.153,216.052 92.782,218.393 94.900 C 223.237 99.284,230.426 92.753,226.094 87.905 C 224.245 85.836,221.873 85.332,219.680 86.543 M241.398 86.218 C 240.634 86.527,239.540 87.448,238.967 88.266 C 235.450 93.288,242.500 99.049,247.085 94.900 C 251.100 91.267,246.457 84.177,241.398 86.218 M263.209 86.040 C 258.362 87.779,257.937 94.033,262.536 95.938 C 266.196 97.454,269.692 95.001,269.692 90.917 C 269.692 88.011,265.824 85.101,263.209 86.040 M283.213 86.543 C 280.298 88.153,279.585 92.782,281.926 94.900 C 286.770 99.284,293.959 92.753,289.627 87.905 C 287.778 85.836,285.407 85.332,283.213 86.543 M304.932 86.218 C 304.167 86.527,303.073 87.448,302.500 88.266 C 298.983 93.288,306.033 99.049,310.618 94.900 C 314.633 91.267,309.990 84.177,304.932 86.218 M105.474 88.549 C 114.830 95.993,110.917 110.882,99.311 111.997 C 88.256 113.060,80.824 101.624,86.555 92.370 C 90.533 85.948,99.841 84.068,105.474 88.549 M229.144 103.374 C 225.928 106.590,228.207 112.156,232.739 112.156 C 235.404 112.156,237.925 109.634,237.925 106.969 C 237.925 104.304,235.404 101.783,232.739 101.783 C 231.476 101.783,230.147 102.371,229.144 103.374 M250.565 103.241 C 247.091 106.229,249.228 112.156,253.778 112.156 C 258.016 112.156,260.364 108.277,258.412 104.502 C 256.793 101.372,253.376 100.823,250.565 103.241 M272.434 102.217 C 270.960 102.810,269.583 106.295,270.026 108.312 C 271.323 114.214,280.375 112.888,280.203 106.822 C 280.102 103.261,275.952 100.801,272.434 102.217 M292.677 103.374 C 289.461 106.590,291.740 112.156,296.272 112.156 C 298.938 112.156,301.459 109.634,301.459 106.969 C 301.459 104.304,298.938 101.783,296.272 101.783 C 295.009 101.783,293.680 102.371,292.677 103.374 M314.098 103.241 C 310.625 106.229,312.761 112.156,317.311 112.156 C 321.549 112.156,323.897 108.277,321.945 104.502 C 320.327 101.372,316.909 100.823,314.098 103.241 M340.855 155.947 C 349.173 159.422,349.109 159.082,349.109 199.676 C 349.109 240.269,349.173 239.930,340.855 243.405 C 337.194 244.935,64.751 244.935,61.090 243.405 C 52.772 239.930,52.836 240.269,52.836 199.676 C 52.836 159.173,52.772 159.520,60.945 155.976 C 64.430 154.465,337.240 154.436,340.855 155.947 M92.382 176.564 C 67.174 183.107,68.383 218.603,93.967 223.110 C 116.874 227.145,130.755 197.527,113.309 181.842 C 107.883 176.964,99.241 174.784,92.382 176.564 M105.474 189.036 C 115.576 197.073,110.447 212.642,97.697 212.642 C 84.198 212.642,79.541 194.511,91.410 188.169 C 95.703 185.875,101.988 186.262,105.474 189.036 M218.476 188.006 C 215.392 191.091,217.802 197.083,222.128 197.083 C 224.303 197.083,227.553 193.794,227.553 191.593 C 227.553 187.513,221.401 185.082,218.476 188.006 M239.517 188.301 C 237.376 190.442,237.482 192.849,239.820 195.188 C 243.717 199.084,248.758 196.284,248.373 190.438 C 248.135 186.819,242.386 185.432,239.517 188.301 M260.729 188.210 C 257.683 191.453,260.080 197.083,264.506 197.083 C 269.004 197.083,271.436 191.168,268.192 188.119 C 266.135 186.188,262.588 186.231,260.729 188.210 M282.010 188.006 C 278.925 191.091,281.335 197.083,285.661 197.083 C 287.837 197.083,291.086 193.794,291.086 191.593 C 291.086 187.513,284.934 185.082,282.010 188.006 M303.050 188.301 C 300.909 190.442,301.015 192.849,303.354 195.188 C 307.250 199.084,312.291 196.284,311.906 190.438 C 311.668 186.819,305.919 185.432,303.050 188.301 M229.144 203.860 C 225.747 207.257,228.007 212.642,232.830 212.642 C 235.739 212.642,237.925 210.456,237.925 207.546 C 237.925 204.787,235.450 202.269,232.739 202.269 C 231.476 202.269,230.147 202.857,229.144 203.860 M250.639 203.728 C 246.952 207.045,248.961 212.642,253.838 212.642 C 258.793 212.642,260.906 207.646,257.424 204.164 C 255.142 201.881,252.855 201.734,250.639 203.728 M271.587 204.164 C 269.249 206.503,269.142 208.910,271.283 211.051 C 274.152 213.919,279.901 212.532,280.139 208.914 C 280.524 203.067,275.484 200.268,271.587 204.164 M292.677 203.860 C 289.280 207.257,291.541 212.642,296.363 212.642 C 299.272 212.642,301.459 210.456,301.459 207.546 C 301.459 204.787,298.984 202.269,296.272 202.269 C 295.009 202.269,293.680 202.857,292.677 203.860 M314.172 203.728 C 310.486 207.045,312.494 212.642,317.371 212.642 C 322.326 212.642,324.440 207.646,320.957 204.164 C 318.675 201.881,316.388 201.734,314.172 203.728 M343.048 257.848 C 345.003 259.205,346.599 261.029,347.586 263.034 L 349.109 266.126 349.109 300.486 L 349.109 334.846 347.488 337.705 C 346.596 339.278,344.746 341.466,343.376 342.568 L 340.885 344.571 200.972 344.571 L 61.060 344.571 58.569 342.568 C 57.199 341.466,55.348 339.278,54.457 337.705 L 52.836 334.846 52.836 300.162 L 52.836 265.478 54.655 262.384 C 56.386 259.439,59.864 256.598,62.596 255.899 C 63.290 255.721,125.997 255.616,201.945 255.665 L 340.032 255.754 343.048 257.848 M94.151 276.901 C 79.106 278.805,69.567 296.251,76.006 310.087 C 83.186 325.514,103.510 328.746,115.039 316.294 C 130.153 299.969,116.427 274.082,94.151 276.901 M103.788 288.705 C 116.012 295.158,111.428 313.128,97.558 313.128 C 88.749 313.128,82.683 305.312,84.935 296.862 C 85.792 293.644,90.881 288.152,93.460 287.661 C 97.495 286.893,101.034 287.251,103.788 288.705 M218.490 288.802 C 214.605 292.938,219.210 299.237,224.606 297.166 C 226.267 296.529,227.691 293.190,227.218 291.039 C 226.366 287.157,221.264 285.849,218.490 288.802 M240.066 288.169 C 238.155 289.508,237.606 292.478,238.833 294.850 C 240.451 297.980,243.869 298.529,246.680 296.110 C 251.596 291.881,245.395 284.437,240.066 288.169 M260.911 288.787 C 259.907 289.790,259.319 291.119,259.319 292.382 C 259.319 293.646,259.907 294.975,260.911 295.978 C 261.914 296.981,263.243 297.569,264.506 297.569 C 265.769 297.569,267.098 296.981,268.101 295.978 C 269.104 294.975,269.692 293.646,269.692 292.382 C 269.692 291.119,269.104 289.790,268.101 288.787 C 267.098 287.784,265.769 287.196,264.506 287.196 C 263.243 287.196,261.914 287.784,260.911 288.787 M282.024 288.802 C 278.138 292.938,282.743 299.237,288.140 297.166 C 289.800 296.529,291.224 293.190,290.752 291.039 C 289.899 287.157,284.797 285.849,282.024 288.802 M303.599 288.169 C 301.688 289.508,301.140 292.478,302.366 294.850 C 303.985 297.980,307.402 298.529,310.213 296.110 C 315.129 291.881,308.928 284.437,303.599 288.169 M230.470 303.504 C 225.624 306.154,227.282 313.344,232.739 313.344 C 238.032 313.344,239.943 306.112,235.286 303.704 C 233.122 302.585,232.219 302.547,230.470 303.504 M251.841 303.372 C 247.908 304.967,247.722 310.830,251.544 312.806 C 256.971 315.612,261.754 308.980,257.424 304.650 C 255.493 302.719,254.190 302.420,251.841 303.372 M271.663 304.574 C 269.370 306.868,269.152 309.025,270.978 311.347 C 274.462 315.775,281.130 312.547,280.216 306.875 C 279.597 303.032,274.560 301.677,271.663 304.574 M294.003 303.504 C 289.158 306.154,290.816 313.344,296.272 313.344 C 301.565 313.344,303.476 306.112,298.819 303.704 C 296.656 302.585,295.752 302.547,294.003 303.504 M315.375 303.372 C 311.441 304.967,311.256 310.830,315.077 312.806 C 320.504 315.612,325.287 308.980,320.957 304.650 C 319.026 302.719,317.723 302.420,315.375 303.372 \",\n  fillRule: \"evenodd\"\n}));\n\nvar SvgDisksIcon = function SvgDisksIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 400,\n    height: 406.48298217179905,\n    viewBox: \"0, 0, 400,406.48298217179905\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDisksIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Disks-Icon.99d2badf.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"svgg\"\n}, React.createElement(\"path\", {\n  id: \"path0\",\n  d: \"M166.600 7.233 C 164.400 7.637,161.682 8.425,160.560 8.984 C 159.438 9.543,158.415 10.000,158.287 10.000 C 156.752 10.000,149.557 15.882,147.125 19.124 C 145.604 21.151,144.551 23.120,140.050 32.353 C 137.744 37.082,135.801 37.663,124.400 37.032 C 117.057 36.625,112.019 37.162,109.203 38.650 C 108.215 39.173,107.219 39.600,106.990 39.600 C 106.495 39.600,103.463 41.550,100.384 43.847 C 98.068 45.576,94.322 49.885,92.776 52.600 C 91.450 54.929,90.400 57.107,90.400 57.530 C 90.400 57.732,90.020 58.758,89.555 59.808 C 88.457 62.291,88.104 69.604,88.752 76.468 C 89.476 84.144,87.293 87.997,81.200 89.800 C 71.236 92.748,62.760 101.562,59.082 112.800 C 58.473 114.661,58.475 127.344,59.084 129.200 C 60.235 132.707,61.885 136.059,63.955 139.094 C 65.190 140.906,66.966 143.516,67.903 144.894 C 71.221 149.776,70.990 154.133,67.197 158.200 C 64.776 160.796,60.254 169.010,59.159 172.800 C 58.339 175.637,58.474 187.305,59.354 189.600 C 59.733 190.590,60.371 192.300,60.770 193.400 C 62.477 198.098,66.715 203.645,70.999 206.790 C 73.681 208.759,83.149 213.600,84.318 213.600 C 84.491 213.600,85.413 214.395,86.366 215.366 C 88.859 217.906,89.269 219.794,88.735 226.298 C 87.841 237.205,89.177 244.048,93.458 250.487 C 101.204 262.139,113.591 267.334,128.000 264.975 C 133.964 263.998,136.963 265.015,139.571 268.899 C 140.467 270.233,141.200 271.484,141.200 271.679 C 141.200 272.098,143.363 276.965,144.187 278.400 C 144.503 278.950,145.134 280.076,145.590 280.902 C 153.937 296.033,177.357 300.015,192.453 288.872 C 200.533 282.908,203.774 282.221,208.302 285.514 C 219.504 293.661,223.906 295.414,233.000 295.347 C 245.685 295.253,258.580 287.008,262.253 276.644 C 262.556 275.788,263.143 274.528,263.556 273.844 C 263.970 273.160,264.440 272.150,264.600 271.600 C 266.171 266.197,270.765 263.855,277.600 264.975 C 292.660 267.441,305.304 261.737,313.010 249.000 C 316.554 243.142,317.639 236.807,316.860 226.530 C 316.166 217.373,316.869 215.937,323.600 212.768 C 333.909 207.915,339.852 203.409,342.289 198.600 C 342.623 197.940,343.122 197.130,343.398 196.800 C 343.673 196.470,344.129 195.480,344.411 194.600 C 344.693 193.720,345.259 192.353,345.669 191.563 C 347.477 188.081,347.540 174.900,345.769 170.888 C 343.396 165.515,340.704 160.891,338.532 158.462 C 334.718 154.195,334.262 149.808,337.200 145.658 C 338.190 144.260,339.354 142.550,339.786 141.858 C 340.218 141.166,340.809 140.356,341.099 140.058 C 341.389 139.760,341.978 138.828,342.407 137.985 C 342.837 137.143,343.357 136.350,343.564 136.222 C 343.770 136.095,344.250 135.048,344.631 133.895 C 345.011 132.743,345.556 131.440,345.840 131.000 C 347.660 128.184,347.386 114.597,345.424 110.382 C 344.865 109.182,344.406 107.909,344.404 107.554 C 344.402 107.199,344.065 106.479,343.655 105.954 C 343.245 105.429,342.515 104.222,342.032 103.270 C 340.402 100.060,333.324 93.746,329.600 92.180 C 329.050 91.949,327.610 91.302,326.400 90.743 C 316.549 86.190,316.106 85.450,316.865 74.799 C 317.342 68.104,316.958 60.965,316.062 59.866 C 315.853 59.610,315.412 58.500,315.083 57.400 C 313.886 53.399,308.774 46.440,305.000 43.673 C 301.926 41.419,299.072 39.600,298.610 39.600 C 298.381 39.600,297.385 39.173,296.397 38.650 C 293.566 37.154,288.554 36.626,281.000 37.029 C 271.653 37.527,270.615 37.458,268.830 36.221 C 267.457 35.269,264.798 31.787,264.801 30.944 C 264.813 27.367,255.379 14.443,251.000 12.037 C 244.118 8.256,243.437 7.982,238.956 7.192 C 232.293 6.018,224.680 6.767,220.462 9.012 C 219.441 9.556,218.445 10.000,218.248 10.000 C 217.880 10.000,213.837 12.656,211.000 14.762 C 204.218 19.797,201.471 19.910,195.608 15.400 C 192.456 12.976,187.952 10.017,187.397 10.007 C 187.175 10.003,186.159 9.556,185.138 9.012 C 180.936 6.775,173.162 6.029,166.600 7.233 M179.320 20.793 C 182.268 21.974,185.100 23.681,188.200 26.147 C 197.301 33.388,207.826 33.340,217.800 26.014 C 221.469 23.319,224.669 21.200,225.070 21.200 C 225.305 21.200,226.355 20.821,227.403 20.358 C 229.796 19.299,236.968 19.406,239.000 20.531 C 239.660 20.896,240.405 21.196,240.655 21.198 C 241.307 21.201,245.162 23.882,246.731 25.422 C 248.160 26.825,249.132 28.339,250.443 31.200 C 254.443 39.930,259.156 46.800,261.147 46.800 C 261.365 46.800,261.843 47.100,262.209 47.466 C 262.978 48.235,267.289 49.879,270.190 50.509 C 271.697 50.837,273.204 50.807,276.390 50.387 C 288.280 48.821,293.966 50.332,299.400 56.500 C 303.862 61.566,303.968 62.145,303.595 79.400 L 303.448 86.200 305.024 89.043 C 308.977 96.173,312.809 99.617,319.000 101.603 C 319.880 101.885,321.029 102.450,321.554 102.858 C 322.079 103.266,322.715 103.600,322.967 103.600 C 324.889 103.600,329.828 108.165,331.673 111.647 C 335.918 119.655,334.905 126.665,328.198 135.689 C 320.886 145.528,320.121 154.356,325.836 162.954 C 326.696 164.248,327.832 165.958,328.360 166.754 C 328.889 167.549,329.440 168.290,329.585 168.400 C 331.312 169.709,334.400 177.917,334.400 181.200 C 334.400 187.260,329.865 195.016,324.816 197.592 C 323.957 198.030,323.150 198.557,323.023 198.764 C 322.895 198.970,322.208 199.260,321.495 199.408 C 320.783 199.557,319.782 199.943,319.272 200.267 C 318.761 200.591,317.677 201.091,316.862 201.378 C 312.457 202.932,307.403 207.903,305.030 213.016 C 303.301 216.739,303.047 219.429,303.637 227.744 C 304.372 238.099,303.318 241.819,298.195 246.942 C 293.505 251.632,289.251 252.774,279.334 252.007 C 263.665 250.795,255.057 256.397,250.628 270.690 C 247.023 282.326,230.174 285.935,219.400 277.380 C 207.316 267.783,196.639 268.092,184.600 278.385 C 175.675 286.016,158.322 281.568,155.004 270.800 C 153.406 265.611,148.923 258.695,145.469 256.087 C 140.023 251.976,136.458 251.218,126.258 252.007 C 116.510 252.762,112.121 251.602,107.520 247.059 C 102.225 241.830,101.183 238.215,101.926 227.633 C 102.539 218.883,102.329 217.075,100.173 212.577 C 97.586 207.180,93.522 203.154,88.939 201.451 C 85.721 200.255,82.954 198.968,81.738 198.100 C 81.044 197.605,80.290 197.200,80.062 197.200 C 78.571 197.200,73.225 190.277,72.438 187.328 C 70.375 179.592,71.206 175.323,76.161 168.200 C 82.355 159.297,83.300 157.088,83.351 151.400 C 83.404 145.452,81.979 141.797,76.958 135.000 C 66.670 121.074,70.918 107.145,87.205 101.398 C 88.111 101.078,89.364 100.453,89.988 100.008 C 90.613 99.564,91.311 99.200,91.541 99.200 C 92.275 99.200,96.681 95.295,97.953 93.517 C 102.081 87.749,102.570 85.100,101.848 72.400 C 101.316 63.047,102.122 60.652,107.634 55.200 C 110.992 51.879,111.354 51.657,115.471 50.397 C 118.638 49.428,122.746 49.428,128.200 50.398 C 139.300 52.373,148.074 46.791,153.737 34.154 C 157.156 26.521,160.884 22.357,165.368 21.158 C 166.266 20.918,167.180 20.579,167.400 20.404 C 169.014 19.121,175.689 19.339,179.320 20.793 M197.600 54.668 C 196.830 54.745,193.357 55.088,189.881 55.429 C 186.406 55.770,182.806 56.316,181.881 56.643 C 180.957 56.970,178.760 57.575,177.000 57.988 C 173.580 58.791,168.220 60.635,166.120 61.731 C 165.416 62.099,164.647 62.400,164.412 62.400 C 163.637 62.400,154.928 66.885,152.905 68.326 C 152.229 68.807,151.513 69.200,151.314 69.200 C 151.114 69.200,150.602 69.520,150.175 69.910 C 149.749 70.301,148.740 71.006,147.933 71.477 C 147.126 71.949,146.136 72.625,145.733 72.980 C 145.330 73.335,143.200 75.098,141.000 76.896 C 136.354 80.695,132.242 84.798,128.240 89.630 C 124.053 94.686,122.045 97.576,119.370 102.400 C 118.334 104.270,117.304 106.031,117.083 106.313 C 116.608 106.919,114.191 112.311,113.369 114.600 C 113.053 115.480,112.618 116.560,112.402 117.000 C 106.899 128.216,104.585 155.690,107.970 169.600 C 108.372 171.250,108.930 173.770,109.211 175.200 C 109.491 176.630,109.947 178.255,110.225 178.811 C 110.502 179.367,111.001 180.807,111.334 182.011 C 112.565 186.465,117.329 196.650,120.403 201.400 C 121.257 202.720,122.255 204.323,122.621 204.963 C 124.199 207.723,132.353 217.487,135.685 220.605 C 139.645 224.312,148.779 231.600,149.464 231.600 C 149.607 231.600,150.281 232.023,150.962 232.540 C 152.437 233.659,160.413 238.018,162.400 238.790 C 163.170 239.089,163.999 239.485,164.243 239.669 C 164.487 239.853,165.657 240.339,166.843 240.749 C 168.029 241.159,169.810 241.779,170.800 242.126 C 185.963 247.448,204.800 249.066,219.000 246.267 C 222.080 245.660,225.050 245.080,225.600 244.978 C 228.144 244.505,238.056 241.125,241.400 239.591 C 246.843 237.093,250.812 235.002,253.800 233.060 C 266.311 224.927,274.987 216.526,283.398 204.400 C 285.072 201.986,289.373 194.156,289.826 192.698 C 289.980 192.204,290.423 191.348,290.811 190.796 C 291.200 190.244,291.732 188.984,291.995 187.996 C 292.258 187.008,292.793 185.660,293.183 185.000 C 293.573 184.340,294.105 182.900,294.364 181.800 C 294.623 180.700,295.083 179.260,295.386 178.600 C 295.689 177.940,296.219 175.903,296.565 174.072 C 296.911 172.242,297.461 169.812,297.787 168.672 C 301.236 156.617,298.410 127.203,292.731 116.065 C 292.329 115.276,292.000 114.414,292.000 114.148 C 292.000 113.882,291.370 112.351,290.600 110.744 C 289.830 109.137,289.200 107.615,289.200 107.360 C 289.200 107.106,288.928 106.672,288.595 106.396 C 288.263 106.120,287.637 105.153,287.205 104.247 C 286.772 103.341,285.919 101.777,285.309 100.771 C 284.699 99.766,283.840 98.350,283.400 97.625 C 282.960 96.900,282.060 95.629,281.400 94.800 C 280.740 93.972,279.840 92.782,279.400 92.157 C 276.250 87.679,270.728 82.017,264.400 76.774 C 262.310 75.043,260.270 73.335,259.867 72.980 C 259.464 72.625,258.474 71.959,257.667 71.500 C 256.860 71.041,255.840 70.380,255.400 70.032 C 254.455 69.285,254.078 69.065,247.716 65.534 C 245.030 64.043,242.330 62.702,241.716 62.554 C 241.102 62.407,239.790 61.890,238.800 61.406 C 237.810 60.922,236.100 60.287,235.000 59.994 C 233.900 59.700,232.640 59.239,232.200 58.967 C 231.760 58.696,229.981 58.187,228.247 57.835 C 226.513 57.483,224.310 56.929,223.350 56.604 C 219.803 55.399,202.948 54.133,197.600 54.668 M214.596 68.384 C 216.578 68.784,219.280 69.239,220.600 69.395 C 221.920 69.551,223.630 69.941,224.400 70.262 C 225.170 70.583,226.970 71.179,228.400 71.585 C 231.777 72.545,239.001 75.507,241.200 76.832 C 241.530 77.031,242.790 77.741,244.000 78.409 C 245.210 79.078,246.937 80.114,247.837 80.712 C 248.738 81.311,250.088 82.199,250.837 82.687 C 255.223 85.541,260.343 90.262,266.800 97.408 C 268.742 99.557,268.831 99.678,271.750 104.067 C 272.822 105.680,274.045 107.498,274.467 108.107 C 274.889 108.716,275.591 109.976,276.027 110.907 C 276.463 111.838,277.072 113.050,277.380 113.600 C 278.121 114.924,280.085 119.256,281.188 122.000 C 284.968 131.407,287.220 148.104,286.018 157.800 C 285.827 159.340,285.461 162.384,285.206 164.565 C 284.951 166.746,284.493 169.176,284.188 169.965 C 283.884 170.754,283.354 172.570,283.010 174.000 C 281.964 178.346,280.221 182.713,276.624 190.000 C 275.554 192.166,272.975 196.267,269.329 201.600 C 267.275 204.603,258.183 214.036,255.915 215.516 C 255.339 215.892,253.817 217.015,252.534 218.012 C 251.250 219.008,249.390 220.328,248.400 220.945 C 247.410 221.562,245.616 222.682,244.413 223.434 C 243.211 224.185,242.020 224.800,241.767 224.800 C 241.515 224.800,240.864 225.149,240.321 225.576 C 238.453 227.046,228.892 230.623,222.600 232.206 C 205.195 236.586,180.678 233.954,166.400 226.174 C 165.850 225.874,164.500 225.175,163.400 224.620 C 159.585 222.694,155.553 220.104,152.342 217.517 C 151.164 216.568,149.750 215.496,149.200 215.135 C 146.848 213.591,138.468 204.720,135.848 201.000 C 131.497 194.822,125.219 183.586,125.191 181.927 C 125.186 181.637,124.810 180.590,124.355 179.600 C 123.900 178.610,123.173 176.450,122.739 174.800 C 122.305 173.150,121.710 171.080,121.416 170.200 C 118.691 162.036,118.906 137.656,121.763 130.734 C 122.066 130.000,122.534 128.320,122.803 127.000 C 123.072 125.680,123.632 123.932,124.046 123.116 C 124.461 122.300,124.800 121.389,124.800 121.093 C 124.800 120.797,125.429 119.304,126.199 117.777 C 126.968 116.250,127.598 114.879,127.599 114.731 C 127.600 114.505,130.010 110.025,131.400 107.664 C 131.743 107.081,134.450 103.079,136.402 100.267 C 139.540 95.749,149.828 85.898,154.763 82.687 C 155.512 82.199,156.862 81.311,157.763 80.712 C 158.663 80.114,160.390 79.078,161.600 78.409 C 162.810 77.741,164.070 77.027,164.400 76.824 C 165.419 76.196,170.145 74.092,171.200 73.797 C 171.750 73.643,172.592 73.270,173.071 72.968 C 173.550 72.666,175.332 72.047,177.031 71.592 C 178.730 71.136,180.460 70.582,180.876 70.359 C 181.715 69.910,191.731 68.130,196.400 67.599 C 200.680 67.114,210.367 67.531,214.596 68.384 M194.000 118.548 C 186.141 121.223,182.033 126.255,181.090 134.362 C 180.529 139.185,180.526 170.896,181.087 175.667 C 183.440 195.704,215.844 198.955,222.285 179.800 L 223.361 176.600 223.374 155.000 C 223.391 128.830,223.160 127.554,217.511 122.581 C 212.157 117.869,201.413 116.026,194.000 118.548 M136.267 119.067 C 136.120 119.213,136.000 122.344,136.000 126.024 C 136.000 133.881,135.451 133.200,141.784 133.200 C 145.079 133.200,146.423 133.346,146.748 133.738 C 147.065 134.119,147.224 142.443,147.297 162.438 L 147.400 190.600 156.372 190.708 C 163.282 190.791,165.417 190.699,165.665 190.308 C 165.843 190.029,165.991 177.350,165.994 162.133 C 165.997 146.916,166.109 134.181,166.243 133.833 C 166.447 133.301,167.309 133.200,171.643 133.200 L 176.800 133.200 176.800 126.000 L 176.800 118.800 156.667 118.800 C 145.593 118.800,136.413 118.920,136.267 119.067 M230.667 119.067 C 230.282 119.451,230.349 189.701,230.735 190.308 C 230.983 190.699,233.118 190.791,240.028 190.708 L 249.000 190.600 249.105 176.835 C 249.169 168.550,249.368 162.880,249.605 162.594 C 249.847 162.302,251.971 162.016,255.127 161.849 C 268.548 161.140,270.539 158.316,270.322 140.296 C 270.126 124.094,268.306 121.229,257.055 119.419 C 253.102 118.783,231.242 118.491,230.667 119.067 M203.916 130.573 C 205.198 131.784,205.777 174.118,204.560 177.732 C 203.598 180.588,200.421 180.580,199.626 177.720 C 199.056 175.666,199.048 134.362,199.618 132.312 C 200.293 129.879,202.315 129.061,203.916 130.573 M253.596 132.345 C 255.478 133.735,255.881 145.562,254.126 147.912 C 253.162 149.203,250.685 149.935,249.791 149.193 C 248.993 148.530,248.909 132.455,249.700 131.653 C 250.330 131.015,252.258 131.357,253.596 132.345 M109.300 277.805 C 108.805 278.157,108.400 278.601,108.400 278.791 C 108.400 278.981,107.389 281.266,106.153 283.868 C 104.917 286.471,103.489 289.500,102.980 290.600 C 102.472 291.700,101.126 294.580,99.989 297.000 C 98.852 299.420,97.378 302.570,96.713 304.000 C 93.944 309.954,93.142 311.660,90.633 316.922 C 89.185 319.959,88.000 322.513,88.000 322.598 C 88.000 322.773,84.850 329.518,80.207 339.284 C 75.080 350.071,86.308 359.801,97.336 354.127 C 98.413 353.573,100.224 352.904,106.900 350.598 C 108.495 350.047,110.160 349.417,110.600 349.198 C 111.040 348.979,112.480 348.425,113.800 347.967 C 115.120 347.508,117.460 346.697,119.000 346.163 C 120.540 345.630,122.340 344.941,123.000 344.633 C 123.660 344.324,125.009 343.857,125.998 343.594 C 126.987 343.331,128.427 342.797,129.198 342.407 C 129.969 342.017,131.230 341.572,132.000 341.418 C 132.770 341.265,134.334 340.679,135.475 340.117 C 138.962 338.399,139.573 339.226,143.212 350.600 C 143.635 351.920,144.165 353.360,144.391 353.800 C 144.617 354.240,145.275 355.950,145.852 357.600 C 146.429 359.250,147.427 362.040,148.070 363.800 C 148.712 365.560,149.659 368.170,150.174 369.600 C 150.688 371.030,151.771 374.000,152.578 376.200 C 153.386 378.400,154.331 381.100,154.679 382.200 C 157.633 391.555,167.969 394.478,174.068 387.683 C 175.314 386.296,176.443 384.207,179.251 378.100 C 181.162 373.943,182.621 370.819,184.809 366.200 C 185.956 363.780,187.413 360.675,188.047 359.300 C 190.786 353.361,192.410 349.880,196.446 341.300 C 197.352 339.375,198.719 336.450,199.484 334.800 C 201.666 330.095,202.962 327.333,205.160 322.704 C 206.282 320.342,207.200 318.285,207.200 318.134 C 207.200 317.983,207.815 316.586,208.567 315.030 C 214.037 303.711,214.043 304.259,208.400 301.000 C 207.257 300.340,205.784 299.366,205.126 298.835 C 204.153 298.050,203.734 297.939,202.877 298.240 C 201.806 298.617,201.602 298.926,199.871 302.800 C 197.929 307.146,196.321 310.648,195.005 313.400 C 193.156 317.266,190.778 322.326,188.803 326.600 C 186.754 331.033,184.650 335.553,183.404 338.200 C 182.886 339.300,181.928 341.370,181.274 342.800 C 180.620 344.230,179.097 347.470,177.889 350.000 C 176.682 352.530,175.204 355.680,174.607 357.000 C 173.403 359.659,171.225 364.328,169.757 367.400 C 169.231 368.500,168.558 370.120,168.263 371.000 C 167.222 374.095,164.000 372.857,164.000 369.363 C 164.000 368.998,163.567 367.688,163.037 366.450 C 162.508 365.213,161.803 363.390,161.472 362.400 C 160.040 358.117,158.350 353.445,158.086 353.039 C 157.759 352.536,155.842 347.079,155.053 344.400 C 154.761 343.410,154.157 341.880,153.710 341.000 C 153.263 340.120,152.763 338.779,152.600 338.020 C 150.527 328.428,143.765 323.195,136.800 325.792 C 135.810 326.161,133.740 326.887,132.200 327.406 C 130.660 327.925,127.690 329.002,125.600 329.799 C 121.069 331.529,117.209 332.934,113.400 334.242 C 111.860 334.771,110.240 335.382,109.800 335.600 C 109.058 335.968,106.582 336.839,100.600 338.838 C 99.280 339.279,98.029 339.811,97.820 340.020 C 95.697 342.143,94.495 339.256,96.169 336.054 C 96.703 335.034,97.715 332.940,98.420 331.400 C 101.782 324.053,102.534 322.431,103.616 320.200 C 104.766 317.828,107.929 311.068,109.885 306.800 C 110.439 305.590,111.483 303.340,112.205 301.800 C 112.926 300.260,114.097 297.740,114.806 296.200 C 116.840 291.789,118.581 288.092,120.452 284.216 C 121.930 281.155,122.410 279.111,121.801 278.474 C 121.735 278.404,119.907 278.185,117.740 277.986 C 115.573 277.787,112.990 277.521,112.000 277.395 C 110.699 277.229,109.950 277.343,109.300 277.805 M287.136 277.897 C 282.473 278.076,281.402 279.694,283.699 283.091 C 284.261 283.921,284.849 285.050,285.006 285.600 C 285.163 286.150,285.610 287.230,285.998 288.000 C 286.654 289.301,287.205 290.477,290.400 297.400 C 292.703 302.390,293.938 305.031,296.012 309.400 C 298.285 314.191,300.225 318.349,302.077 322.400 C 302.730 323.830,303.772 326.080,304.391 327.400 C 305.010 328.720,306.189 331.240,307.012 333.000 C 307.836 334.760,308.934 337.034,309.454 338.054 C 311.905 342.860,310.587 343.304,303.200 340.158 C 301.990 339.643,300.208 339.022,299.239 338.779 C 298.271 338.536,296.834 337.991,296.045 337.568 C 295.257 337.146,294.279 336.800,293.873 336.800 C 293.467 336.800,291.904 336.260,290.400 335.600 C 288.896 334.940,287.374 334.400,287.017 334.400 C 286.660 334.400,285.649 334.033,284.769 333.584 C 283.890 333.136,282.142 332.430,280.885 332.016 C 276.593 330.602,271.802 328.878,270.200 328.170 C 267.323 326.898,261.738 327.119,259.617 328.589 C 257.708 329.911,255.200 332.963,255.200 333.963 C 255.200 334.320,254.851 335.262,254.425 336.058 C 253.999 336.853,253.386 338.470,253.062 339.652 C 252.739 340.833,252.098 342.745,251.637 343.900 C 251.177 345.055,250.424 346.945,249.963 348.100 C 249.503 349.255,248.881 351.088,248.580 352.173 C 248.280 353.258,247.676 354.878,247.239 355.773 C 246.801 356.668,246.145 358.300,245.781 359.400 C 244.462 363.386,243.215 366.850,242.645 368.111 C 242.325 368.820,241.780 370.411,241.435 371.648 C 240.490 375.034,238.083 376.027,237.420 373.303 C 237.272 372.697,236.549 370.940,235.813 369.400 C 232.379 362.218,230.483 358.091,230.202 357.186 C 230.033 356.644,229.582 355.750,229.200 355.200 C 228.818 354.650,228.370 353.750,228.205 353.200 C 228.041 352.650,227.490 351.390,226.981 350.400 C 226.472 349.410,225.396 347.160,224.590 345.400 C 221.414 338.466,220.697 336.933,219.818 335.200 C 219.316 334.210,218.790 332.910,218.648 332.312 C 218.127 330.107,215.043 329.801,214.562 331.906 C 214.314 332.993,212.258 337.646,210.775 340.479 C 209.501 342.911,209.757 344.836,211.953 349.369 C 213.027 351.586,214.567 354.840,215.374 356.600 C 216.182 358.360,217.262 360.610,217.774 361.600 C 218.287 362.590,218.841 363.850,219.005 364.400 C 219.170 364.950,219.615 365.850,219.994 366.400 C 220.373 366.950,220.809 367.918,220.962 368.551 C 221.116 369.185,221.682 370.352,222.221 371.144 C 222.759 371.937,223.200 372.835,223.200 373.139 C 223.200 373.443,223.625 374.526,224.146 375.546 C 224.666 376.566,225.769 378.840,226.598 380.600 C 230.887 389.706,231.670 390.709,235.950 392.577 C 242.132 395.275,248.185 391.661,251.025 383.576 C 251.561 382.049,252.437 379.556,252.971 378.036 C 253.506 376.515,254.199 374.760,254.513 374.136 C 254.827 373.511,255.301 372.100,255.568 371.000 C 255.834 369.900,256.298 368.620,256.599 368.155 C 256.900 367.690,257.412 366.340,257.736 365.155 C 258.060 363.970,258.702 362.055,259.163 360.900 C 259.623 359.745,260.377 357.855,260.837 356.700 C 261.298 355.545,261.942 353.610,262.268 352.400 C 262.594 351.190,263.105 349.820,263.404 349.355 C 263.702 348.890,264.214 347.487,264.540 346.236 C 265.767 341.539,267.144 340.636,270.643 342.237 C 271.890 342.807,273.740 343.511,274.755 343.800 C 277.141 344.481,284.481 347.204,285.000 347.601 C 285.220 347.770,286.030 348.038,286.800 348.198 C 287.570 348.358,289.150 348.919,290.312 349.445 C 291.473 349.970,292.643 350.408,292.912 350.418 C 293.180 350.427,294.030 350.677,294.800 350.973 C 298.766 352.498,303.198 354.138,304.800 354.673 C 305.790 355.004,307.680 355.749,309.000 356.330 C 316.127 359.465,325.093 356.239,326.240 350.128 C 326.763 347.342,326.199 342.730,325.075 340.600 C 323.580 337.766,321.200 332.534,321.200 332.080 C 321.200 331.870,320.939 331.482,320.620 331.217 C 320.302 330.952,319.829 330.075,319.570 329.268 C 319.311 328.461,318.123 325.730,316.929 323.200 C 313.961 316.911,313.078 315.026,311.678 312.000 C 308.365 304.837,306.419 300.662,302.728 292.800 C 301.850 290.930,300.712 288.500,300.200 287.400 C 295.304 276.893,295.818 277.573,292.838 277.682 C 291.607 277.727,289.041 277.824,287.136 277.897 \",\n  fillRule: \"evenodd\"\n}));\n\nvar SvgW3Top3 = function SvgW3Top3(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    width: 400,\n    height: 400,\n    viewBox: \"0, 0, 400,400\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgW3Top3, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/w3top-3.89a63304.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"svgg\"\n}, React.createElement(\"path\", {\n  id: \"path0\",\n  d: \"M195.621 23.727 C 194.926 23.904,194.137 24.225,193.868 24.440 C 193.599 24.655,192.955 24.962,192.436 25.121 C 187.020 26.786,181.352 34.224,180.292 41.057 C 179.554 45.815,180.207 45.570,168.289 45.570 C 156.901 45.570,157.202 45.521,156.166 47.550 C 154.973 49.889,154.992 79.456,156.188 81.801 C 157.261 83.905,153.926 83.770,201.932 83.651 L 245.149 83.544 246.041 82.221 L 246.933 80.897 246.933 64.654 L 246.933 48.411 246.042 47.088 L 245.150 45.764 234.376 45.570 C 222.009 45.346,222.972 45.696,222.175 41.129 C 220.834 33.448,216.765 28.258,209.321 24.734 C 206.850 23.564,198.635 22.960,195.621 23.727 M205.773 36.995 C 214.215 42.692,209.096 55.142,199.168 53.060 C 191.696 51.492,189.955 41.201,196.467 37.090 C 199.669 35.069,202.871 35.036,205.773 36.995 M115.408 49.488 C 114.082 49.660,112.680 49.966,112.292 50.166 C 111.904 50.366,110.941 50.647,110.152 50.789 C 108.435 51.099,102.683 53.777,100.433 55.314 C 96.611 57.925,91.685 63.039,89.935 66.212 C 89.522 66.962,89.023 67.838,88.826 68.160 C 88.129 69.297,86.758 72.510,86.446 73.734 C 86.272 74.417,85.857 75.940,85.523 77.118 C 84.454 80.895,84.607 306.664,85.681 310.092 C 86.107 311.450,86.458 312.824,86.461 313.145 C 86.471 314.134,89.701 320.221,91.525 322.687 C 95.040 327.442,99.673 331.274,104.771 333.643 C 105.949 334.191,107.352 334.863,107.887 335.137 C 108.423 335.411,109.562 335.757,110.419 335.907 C 111.276 336.056,112.728 336.430,113.646 336.736 C 115.073 337.212,127.751 337.293,201.190 337.293 L 287.066 337.293 290.076 336.463 C 293.100 335.629,297.255 334.075,298.345 333.371 C 298.666 333.164,299.367 332.778,299.903 332.513 C 305.198 329.898,312.219 322.337,314.186 317.133 C 314.450 316.434,314.937 315.475,315.269 315.001 C 315.600 314.528,315.871 313.829,315.871 313.449 C 315.871 313.070,316.266 311.663,316.748 310.323 L 317.624 307.887 317.624 193.574 L 317.624 79.260 316.584 75.671 C 313.224 64.076,302.270 52.778,292.502 50.833 C 291.753 50.684,290.351 50.282,289.387 49.940 C 287.565 49.295,260.999 48.686,258.792 49.240 L 257.838 49.479 257.838 57.644 C 257.838 65.792,257.840 65.808,258.715 66.006 C 259.197 66.116,265.638 66.250,273.028 66.306 C 286.055 66.404,286.521 66.434,288.294 67.283 C 289.300 67.765,290.273 68.160,290.456 68.160 C 292.355 68.160,297.699 73.881,299.522 77.865 L 300.487 79.976 300.487 193.542 L 300.487 307.108 299.243 309.475 C 296.850 314.031,293.299 317.213,288.313 319.268 L 285.686 320.351 201.168 320.351 L 116.650 320.351 113.949 319.238 C 108.808 317.121,105.229 313.753,103.063 308.993 L 101.850 306.329 101.850 193.379 L 101.850 80.428 102.973 77.897 C 105.149 72.991,108.385 69.840,113.729 67.424 C 115.862 66.460,115.933 66.455,130.010 66.308 L 144.148 66.160 144.518 65.187 C 145.023 63.859,144.995 50.781,144.485 49.828 C 144.048 49.012,121.126 48.743,115.408 49.488 M174.049 109.414 C 171.254 112.561,169.319 114.881,167.728 116.993 C 166.902 118.090,166.100 119.075,165.945 119.182 C 165.678 119.367,160.987 125.137,159.179 127.505 C 158.709 128.119,157.833 129.171,157.231 129.842 C 156.629 130.512,154.904 132.579,153.398 134.433 C 150.360 138.175,149.587 138.612,148.228 137.358 C 147.725 136.894,145.770 135.112,143.883 133.398 C 141.995 131.685,140.095 129.932,139.659 129.503 C 137.511 127.391,135.765 126.192,134.822 126.181 C 133.397 126.165,126.212 133.670,126.200 135.187 C 126.192 136.237,128.396 138.418,142.110 150.931 C 143.046 151.785,144.452 153.096,145.236 153.846 C 151.207 159.558,151.315 159.561,155.564 154.201 C 155.973 153.684,156.762 152.723,157.317 152.064 C 157.871 151.405,158.792 150.265,159.363 149.532 C 159.933 148.799,160.786 147.760,161.257 147.225 C 161.729 146.689,163.449 144.586,165.079 142.551 C 166.709 140.516,168.142 138.763,168.262 138.656 C 168.383 138.549,170.107 136.446,172.094 133.982 C 174.081 131.519,175.997 129.153,176.352 128.724 C 188.255 114.360,187.774 115.857,182.030 111.060 C 176.920 106.791,176.462 106.697,174.049 109.414 M192.231 130.930 C 191.176 131.785,190.988 142.300,192.016 142.949 C 192.946 143.537,275.477 143.452,276.066 142.863 C 276.729 142.200,276.712 132.035,276.047 131.138 C 275.299 130.130,193.468 129.927,192.231 130.930 M175.232 170.705 C 174.677 171.180,170.655 175.949,166.295 181.305 C 152.178 198.642,151.024 199.995,150.063 200.334 C 148.993 200.711,149.522 201.098,143.135 195.260 C 140.779 193.106,138.150 190.707,137.293 189.929 C 134.845 187.705,133.826 188.284,127.630 195.425 C 125.238 198.182,125.025 197.833,134.360 206.426 C 136.804 208.676,139.088 210.779,139.437 211.100 C 139.787 211.422,141.112 212.639,142.383 213.806 C 143.654 214.973,145.877 217.032,147.324 218.383 C 151.484 222.266,151.901 221.965,164.081 206.290 C 165.105 204.973,166.724 202.989,167.679 201.882 C 168.634 200.774,170.492 198.496,171.807 196.818 C 173.123 195.141,174.405 193.593,174.658 193.379 C 174.910 193.165,176.504 191.242,178.198 189.107 C 179.893 186.972,181.548 184.935,181.876 184.580 C 182.205 184.225,182.853 183.431,183.316 182.815 C 183.780 182.198,184.530 181.268,184.982 180.746 C 187.029 178.388,186.629 177.368,182.278 173.838 C 176.685 169.301,176.810 169.357,175.232 170.705 M192.016 193.963 C 190.153 195.826,191.070 205.603,193.114 205.668 C 202.634 205.971,275.993 205.506,276.225 205.141 C 276.733 204.341,276.593 194.178,276.066 193.651 C 275.118 192.703,192.971 193.007,192.016 193.963 M175.746 232.775 C 175.313 232.956,167.995 241.802,156.784 255.696 C 152.425 261.099,150.342 263.293,149.578 263.286 C 148.939 263.280,148.260 262.700,141.378 256.280 C 134.706 250.057,134.963 250.102,130.876 254.447 C 124.706 261.008,124.522 259.745,132.784 267.575 C 133.123 267.897,134.627 269.288,136.126 270.668 C 137.625 272.047,140.718 274.907,143.001 277.023 C 152.179 285.531,150.770 285.307,155.840 279.065 C 157.405 277.137,164.871 267.970,172.430 258.693 C 181.312 247.792,186.170 241.523,186.165 240.971 C 186.142 238.719,177.600 231.999,175.746 232.775 M192.015 256.565 C 190.823 258.079,190.960 267.296,192.187 268.192 C 193.220 268.946,275.314 269.029,276.066 268.277 C 276.833 267.510,276.706 256.898,275.922 256.114 C 275.373 255.565,271.042 255.501,234.080 255.501 L 192.851 255.501 192.015 256.565 \",\n  fillRule: \"evenodd\"\n}));\n\nvar SvgProcessList = function SvgProcessList(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    width: 400,\n    height: 389.1402714932127,\n    viewBox: \"0, 0, 400,389.1402714932127\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgProcessList, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/process-list.9b4646bd.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Icon from '@material-ui/core/Icon';\nimport StarIcon from '@material-ui/icons/Star';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport ScoreIcon from '@material-ui/icons/Score';\nimport InsertChartOutlinedIcon from '@material-ui/icons/InsertChartOutlined';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport { faServer } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { ReactComponent as HardDiskIcon } from '../icons/hard-disk.svg';\n\nimport AppGitInfo from \"../AppGitInfo\"\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport * as Helper from \"../Helper\";\n\n// ICONS\nimport { ReactComponent as DisksIconSvg } from '../icons/Disks-Icon.svg';\nimport { ReactComponent as MainIconSvg } from '../icons/w3top-3.svg';\nimport { ReactComponent as ProcessListIconSvg } from '../icons/process-list.svg';\nconst DisksIcon = (size=24,color='#333') => (<DisksIconSvg style={{width: size,height:size,fill:color,strokeWidth:'6px',stroke:color }} />);\n// const MainIcon = (size=24,color='#FFF') => (<MainIconSvg style={{width: size,height:size,fill:color,strokeWidth:'1px',stroke:color }} />);\nconst MainIcon = ({size=40,color='#FFF'}) => (<MainIconSvg style={{width: size,height:size,fill:color,strokeWidth:'1px',stroke:color }} />);\nconst ProcessListIcon = ({size=24,color='#333'}) => (<ProcessListIconSvg style={{width: size,height:size,fill:color,strokeWidth:'2px',stroke:color }} />);\n\n\n\n\n\nconst drawerWidth = 250;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    drawerVer: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        paddingBottom: theme.spacing.unit,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    \n});\n\nclass PersistentDrawerLeft extends React.Component {\n    \n    state = {\n        open: false,\n    };\n    \n    constructor(props) {\n        super(props);\n        \n        this.updateBrief = this.updateBrief.bind(this);\n        this.updateGlobalDataSource = this.updateGlobalDataSource.bind(this);\n    }\n    \n\n    componentDidMount() {\n        let x1 = dataSourceStore.on('storeUpdated', this.updateGlobalDataSource);\n        let x2 = dataSourceStore.on('briefUpdated', this.updateBrief);\n    }\n    \n    // It is never called, but \n    componentWillUnmount() {\n        let x1 = dataSourceStore.removeListener('storeUpdated', this.updateGlobalDataSource);\n        let x2 = dataSourceStore.removeListener('briefUpdated', this.updateBrief);\n    }\n\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n    \n    updateGlobalDataSource()\n    {\n        Helper.toConsole(\"DATASOURCE UPDATED handler AT MaterialNav\", dataSourceStore.getDataSource());\n        let system = dataSourceStore.getDataSource().system;\n        if (Helper.Common.objectIsNotEmpty(system))\n            this.setState({system: system});\n    }\n\n    updateBrief()\n    {\n        console.log(\"BRIEF UPDATED handler AT MaterialNav\");\n        this.setState({system: dataSourceStore.getBriefInfo().system});\n    }\n    \n    sis = {\n      def: {\n          textAlign: \"right\",\n          paddingRight: 12,\n          paddingBottom: 10,\n          verticalAlign: \"top\",\n          color: \"#888\",\n          borderBottom: \"1px dotted white\",\n      },\n      val: {\n          fontWeight: \"normal\",\n          verticalAlign: \"top\",\n          paddingBottom: 10,\n      },\n      notReady: {\n          borderBottom: \"1px dotted grey\",\n          width: 240,\n          display: \"inline-block\", \n          paddingBottom: 0\n      },\n        ready: {\n            borderBottom: \"1px dotted white\",\n            display: \"inline-block\",\n            paddingBottom: 0\n        }\n\n    };\n    \n    \n\n    render() {\n        const { classes, theme } = this.props;\n        const { open } = this.state;\n        \n        const asHtml = (raw) => <span dangerouslySetInnerHTML={{__html: raw}} />;\n        const infoAsComponent = (info) => info ? asHtml(Helper.Common.formatInfoHeader(info)) : null;\n        const SysValueNotReady = () => (<span style={this.sis.notReady}>&nbsp;</span>);\n        let sysInfoValueId = 0;\n        const SysRow = (def,value) => { return (\n            <tr>\n                <td style={this.sis.def}>{def}</td>\n                <td style={this.sis.val}>{ value ? <span style={this.sis.ready} id={`COMMON_INFO_HEADER_` + (++sysInfoValueId)}>{value}</span> : <SysValueNotReady/>}</td>\n            </tr>\n        )};\n\n        let idMainLink = 0;\n        const MainMenuLink = (icon, routeTo, text, subText) => {\n            return (\n                <ListItem id={`THE_MENU_${++idMainLink}`} button component={NavLink} tag={Link} to={routeTo} key={`${text}@MainMenu`} onClick={() => this.handleDrawerClose()}>\n                    <ListItemIcon>{icon}</ListItemIcon>\n                    <ListItemText id={`THE_MENU_LINK_${idMainLink}`} primary={text} secondary={subText} />\n                </ListItem>\n            );\n        };\n\n        let system = this.state.system;\n        if (!Helper.Common.objectIsNotEmpty(system)) system = {};\n        // let hostname = Helper.Common.tryGetProperty(dataSourceStore.getDataSource(), \"hostname\"); \n        // let [hasSystem, system] = Helper.Common.tryGetProperty(dataSourceStore.getDataSource(), \"system\");\n        // if (!hasSystem) system = {};\n        // let hostname = Helper.System.getHostName(dataSourceStore.getDataSource());\n        \n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton id={\"APP_SYSTEM_ICON\"}\n                            color=\"inherit\"\n                            aria-label=\"Show menu\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                                    \n                        >\n                            <MainIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            W3 Top\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <table border=\"0\" cellPadding={0} cellSpacing={0} style={{width: \"100%\"}}><tbody><tr><td style={{textAlign: \"left\"}}>\n\n                            <List>\n                                    <ListItem button={false}>\n                                        <ListItemIcon className={\"version\"}><InfoOutlinedIcon /></ListItemIcon>\n                                        <ListItemText primary={\"v\" + AppGitInfo.Version} className={\"version\"} />\n                                    </ListItem>\n                            </List>\n                            \n                            \n                            {/*<small><InfoOutlinedIcon stye={{width: \"9px\", fontSize: 44}}/> v{AppGitInfo.Version}</small>*/}\n                        </td><td width=\"24px\">\n                        <IconButton onClick={this.handleDrawerClose}>\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                        </td></tr></tbody></table>\n                    </div>\n                    <Divider />\n                    <List>\n                        {MainMenuLink(<InsertChartOutlinedIcon/>,\"/net-v2\", \"Network Live Chart\")}\n                        <Divider />\n                        {/*{MainMenuLink(<FontAwesomeIcon icon={faServer} style={{marginLeft:4, marginRight:5}}/>,\"Live Mounts\", \"/mounts\")}*/}\n                        {/*{MainMenuLink(<HardDiskIcon style={{width:20,height:20,marginLeft:2,marginRight:2,opacity:0.6}}/>,\"Live Mounts\", \"/mounts\")}*/}\n                        {MainMenuLink(DisksIcon(24,'#333'),\"/mounts\", \"Live Mounts\")}\n                        {MainMenuLink(<InsertChartOutlinedIcon/>, \"/disks\", \"Disks Live Chart\")}\n                        {MainMenuLink(<ScoreIcon/>,\"/disk-benchmark\", \"Disk Benchmark\")}\n                        \n                        <Divider />\n                        {MainMenuLink(<ProcessListIcon/>,\"/processes\", \"Top Processes\" /*,\"work in progress\"*/)}\n\n                        {(false) &&\n                            <>\n                            <Divider />\n                            <ListSubheader disableSticky={true} style={{\n                            paddingTop: 32,\n                            paddingBottom: 16,\n                            textAlign: \"center\",\n                            lineHeight: \"1rem\"\n                        }}>SAND-BOX<br/>please ignore</ListSubheader>\n                            {MainMenuLink(<FlareIcon/>, \"/net-v1\", \"Missed network\")}\n                            <Divider />\n                            {MainMenuLink(<FlareIcon/>, \"/1-axis\", \"Single Y-axis chart\")}\n                            {MainMenuLink(<FlareIcon/>, \"/2-axis\", \"Double Y-axis one\")}\n                            </>\n                        }\n                    </List>\n                    <Divider />\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open,\n                    })}\n                >\n                    <div className={classes.drawerHeader} />\n\n                    <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\"><tbody>\n                        {SysRow(\"host\", system.hostname)}\n                        {SysRow(\"os\", infoAsComponent(system.os))}\n                        {SysRow(\"cpu\", infoAsComponent(system.processor))}\n                        {SysRow(\"ram\", system.memory)}\n                    </tbody></table>\n                    \n                    <Typography paragraph className={classes.hide}>\n                        <FlareIcon /> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                        incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent\n                        elementum facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in\n                        hendrerit gravida rutrum quisque non tellus. Convallis convallis tellus id interdum\n                        velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing.\n                        Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod quis\n                        viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo.\n                        Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus\n                        at augue. At augue eget arcu dictum varius duis at consectetur lorem. Velit sed\n                        ullamcorper morbi tincidunt. Lorem donec massa sapien faucibus et molestie ac.\n                    </Typography>\n                </main>\n            </div>\n        );\n    }\n}\n\nPersistentDrawerLeft.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { NavMenu } from './NavMenu';\nimport MaterialNav from './MaterialNav';\n\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render () {\n    return (\n      <div>\n        {/*<NavMenu />*/}\n        <MaterialNav />\n        <Container fluid={true}>\n        {/*<div style={{padding: \"0px 24px\"}}>*/}\n          {this.props.children}\n        </Container>\n        {/*</div>*/}\n      </div>\n    );\n  }\n}\n","const _uniqueDomIdCounter = {};\n\nexport default function nextUniqueId(prefix)\n{\n    prefix = (prefix ? prefix : \"dom\");\n    let prev = _uniqueDomIdCounter[prefix];\n    prev = prev ? (prev+1) : 1;\n    _uniqueDomIdCounter[prefix] = prev;\n    return `${prefix}_${prev}`;\n};\n","import React, { Component } from 'react';\nimport nextUniqueId from \"../NextUniqueId\"\nimport * as Helper from \"../Helper\";\n\n//import c3 from 'c3';\n\nif (process.env.NODE_ENV === 'test') { window.SVGPathElement = function () {}; }\nconst c3 = require('c3');\n\nexport class SingleAxisChart extends Component {\n    static displayName = SingleAxisChart.name;\n    \n    // static domIdCounter = 0;\n    domId = nextUniqueId(\"chart1y\");\n    chart = null;\n    jsonData = {};\n    pointCurrent = Math.round(Math.random()*1000);\n    pointLimit = 60;\n    updateInterval = 1000;\n    timerId = null;\n\n    calcNextSceneDataSource() {\n        this.pointCurrent = (this.pointCurrent + 1) % 2000000000;\n        let arrx = [];\n        let arr1 = [];\n        let arr2 = [];\n        let round = n => Math.round(n * 10) / 10.0;\n        for(let x = 0; x <= 60; x += 1)\n        {\n            let y1 = Math.sin(((this.pointCurrent+x) / this.pointLimit) * Math.PI)*40+50 + Math.sin(20*(this.pointCurrent+x))*2;\n            let y2 = Math.sin(((this.pointCurrent*3+x*1.8+17) / this.pointLimit) * Math.PI)*40+50 + Math.cos(20*(this.pointCurrent+x))*2;\n            // console.log(`x = ${x}, y1 = ${y1}, y2 = ${y2}`);\n            arrx.push(x);\n            arr1.push(round(y1));\n            arr2.push(round(y2));\n        }\n\n        this.jsonData = { microSD: arr2, eMMC: arr1, };\n    }\n\n    constructor (props) {\n        super(props);\n\n        // SingleAxisChart.domIdCounter++;\n        // this.domId = `chart_${SingleAxisChart.domIdCounter}`;\n        \n    }\n\n    incrementCounter () {\n        this.setState({\n            currentCount: this.state.currentCount + 1\n        });\n    }\n    \n    componentDidMount() {\n        \n        this.calcNextSceneDataSource();\n        this._initChart();\n        \n        // return;\n        this.timerId = setInterval(_ => {\n            this.calcNextSceneDataSource();\n            this._updateChart();\n            // this.forceUpdate();\n        }, this.updateInterval);\n    }\n    \n    componentWillUnmount() {\n        if (this.timerId)\n        {\n            clearInterval(this.timerId);\n            this.timerId = 0;\n        }\n        \n        let destroy = () => {\n            let c = this.chart;\n            this.chart = null;\n            c.destroy();\n            console.log(`chart #${this.domId} destroyed`);\n        };\n\n        Helper.runInBackground(destroy);\n    }\n\n\n    _initChart()\n    {\n        var formatX = x => {\n            if (x === 0) return \"60\";\n            if (x === 60) return \"\";\n            return Math.round(60-x);\n        };\n\n        this.chart = c3.generate({\n            bindto: `#${this.domId}`,\n            data: {\n                // columns: columns,\n                json : this.jsonData,\n                type: 'area-spline'\n            },\n            transition: {\n                duration: 1\n            },\n            size: {\n                width: 350,\n                height: 130,\n            },\n            axis: {\n                x: {\n                    padding: 0,\n                    label: {\n                        text: '60 seconds',\n                        position: 'inner-left'\n                    },\n                    tick: {\n                        count: 5,\n                        format: formatX,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y: {\n                    // min: 0,\n                    max: 100,\n                    padding: 0,\n                    label: {\n                        text: 'Busy',\n                        position: 'outer-middle'\n                    },\n                    tick: {\n                        count: 5,\n                        format: val => Math.round(val),\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n\n            },\n            point: {\n                r: 1.5,\n                select: {r:8},\n                focus: {\n                    expand: {\n                        r: 4\n                    }\n                }\n            },\n\n            grid: {\n                y: {\n                    lines: [\n                        {value: 50, text: '50%'},\n                        {value: 100, text: '100%', class: 'label-200', position: 'middle'},\n                    ]\n                },\n                x : {\n                    lines: [\n                        {value: 60, text: ''},\n                    ]\n\n                }\n            },\n\n        });\n        \n        // this.chart.\n\n    }\n\n    _updateChart() {\n        if (Helper.isDocumentHidden()) return;\n        if (this.chart === null) return;\n        this.chart.load({\n            json: this.jsonData,\n            transition: {\n                duration: 1000\n            },\n            size: {\n                width: 350,\n                height: 100,\n            },\n        });\n    }\n    \n    render () {\n        return <div id={this.domId} />\n        \n    }\n}\n","import React, { Component } from 'react';\nimport { SingleAxisChart } from './SingleAxisChart';\n\nexport class Poc1Chart extends Component {\n  static displayName = Poc1Chart.name;\n\n  render () {\n    return (\n      <div>\n          <table><tbody><tr><td style={{paddingRight: 40}}>\n              <SingleAxisChart />\n              <SingleAxisChart />\n              <SingleAxisChart />\n              <SingleAxisChart />\n          </td><td>\n              <SingleAxisChart />\n              <SingleAxisChart />\n              <SingleAxisChart />\n              <SingleAxisChart />\n          </td></tr></tbody>\n          </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport nextUniqueId from \"../NextUniqueId\"\nimport c3 from 'c3';\nimport * as Helper from \"../Helper\";\n\nexport class AnotherChart2 extends Component {\n    static displayName = AnotherChart2.name;\n\n    // static domIdCounter = 0;\n    domId = nextUniqueId(\"cart2y\");\n    chart = null;\n    jsonData = {};\n    pointCurrent = Math.round(Math.random()*1000);\n    pointLimit = 60;\n    updateInterval = 1000;\n    timerId = null;\n\n    calcNextSceneDataSource() {\n        this.pointCurrent = (this.pointCurrent + 1) % 2000000000;\n        let arrx = [];\n        let arr1Busy = [];\n        let arr2Busy = [];\n        let arr1Transfer = [];\n        let arr2Transfer = [];\n        let round = n => Math.round(n * 10) / 10.0;\n        for(let x = 0; x <= 60; x += 1)\n        {\n            let y1Busy = Math.sin(((this.pointCurrent+x) / this.pointLimit) * Math.PI)*40+50 + Math.sin(20*(this.pointCurrent+x))*2;\n            let y2Busy = Math.sin(((this.pointCurrent*3+x*1.8+17) / this.pointLimit) * Math.PI)*40+50 + Math.cos(20*(this.pointCurrent+x))*2;\n            let y1Transfer = ((this.pointCurrent+x) % 30)*((this.pointCurrent+x) % 30) / 30;\n            let y2Transfer = ((this.pointCurrent+x+12) % 30)*((this.pointCurrent+x+12) % 30) / 30;\n            // console.log(`x = ${x}, y1 = ${y1}, y2 = ${y2}`);\n            arrx.push(x);\n            arr1Busy.push(round(y1Busy)*40);\n            arr2Busy.push(round(y2Busy)*40);\n            arr1Transfer.push(y1Transfer*80);\n            arr2Transfer.push(y2Transfer*80);\n        }\n\n        this.jsonData = { \n            microSD_Busy: arr2Busy, \n            eMMC_Busy: arr1Busy,\n            microSD_Transfer: arr1Transfer,\n            eMMC_Transfer: arr2Transfer,\n        };\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    incrementCounter () {\n        this.setState({\n            currentCount: this.state.currentCount + 1\n        });\n    }\n\n    componentDidMount() {\n\n        this.calcNextSceneDataSource();\n        this._initChart();\n\n        // return;\n        this.timerId = setInterval(_ => {\n            this.calcNextSceneDataSource();\n            this._updateChart();\n            // this.forceUpdate();\n        }, this.updateInterval);\n    }\n\n    componentWillUnmount() {\n        if (this.timerId)\n        {\n            clearInterval(this.timerId);\n            this.timerId = 0;\n        }\n\n        let destroy = () => {\n            let c = this.chart;\n            this.chart = null;\n            c.destroy();\n            console.log(`chart #${this.domId} destroyed`);\n        };\n\n        Helper.runInBackground(destroy);\n    }\n\n\n    _initChart()\n    {\n        var formatX = x => {\n            if (x === 0) return \"60\";\n            if (x === 60) return \"\";\n            return Math.round(60-x);\n        };\n\n        this.chart = c3.generate({\n            bindto: `#${this.domId}`,\n            data: {\n                // columns: columns,\n                json : this.jsonData,\n                type: 'area-spline',\n                axes : {\n                    microSD_Transfer : \"y2\",\n                    eMMC_Transfer : \"y2\",\n                },\n                names : {\n                    microSD_Transfer: \"Rd IOPS\",\n                    eMMC_Transfer: \"Wr IOPS\",\n                    microSD_Busy: \"Rd Mb/s\",\n                    eMMC_Busy: \"Wr Mb/s\",\n                }\n            },\n            transition: {\n                duration: 1\n            },\n            size: {\n                width: 450,\n                height: 130,\n            },\n            axis: {\n                x: {\n                    padding: 0,\n                    label: {\n                        text: '60 seconds',\n                        position: 'inner-left'\n                    },\n                    tick: {\n                        count: 5,\n                        format: formatX,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y: {\n                    min: 0,\n                    max: 4000,\n                    padding: 0,\n                    label: {\n                        text: 'Transfer, Mb/s',\n                        position: 'outer-middle'\n                    },\n                    tick: {\n                        count: 5,\n                        format: val => Math.round(val),\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y2 : {\n                    max: 2400,\n                    // min: -42,\n                    padding: 0,\n                    show: true,\n                    tick: {\n                        count: 5,\n                        format: val => Math.round(val),\n                        // values: [1, 2, 4, 8, 16, 32]\n                    },\n                    label: {\n                        text: 'IOPS',\n                        position: 'outer-middle'\n                    },\n\n                }\n\n            },\n            point: {\n                r: 1.5,\n                select: {r:8},\n                focus: {\n                    expand: {\n                        r: 4\n                    }\n                }\n            },\n\n            grid: {\n                y: {\n                    lines: [\n                        {value: 4000/2, text: '50%'},\n                        {value: 4000, text: '100%', class: 'label-200', position: 'middle'},\n                    ]\n                },\n                x : {\n                    lines: [\n                        {value: 60, text: ''},\n                    ]\n\n                }\n            },\n\n        });\n\n    }\n\n    _updateChart() {\n        if (Helper.isDocumentHidden()) return;\n        if (this.chart === null) return;\n        this.chart.load({\n            json: this.jsonData,\n            // transition: {\n            //     duration: 1000\n            // },\n            // size: {\n            //     width: 450,\n            //     height: 100,\n            // },\n        });\n    }\n\n    render () {\n        return <div id={this.domId} />\n\n    }\n}\n","import React, { Component } from 'react';\nimport { AnotherChart2 } from './AnotherChart2';\n\nexport class Poc2Chart extends Component {\n    static displayName = Poc2Chart.name;\n\n    render () {\n        return (\n            <div>\n                <table><tbody><tr><td style={{paddingRight: 40}}>\n                    <AnotherChart2 />\n                    <br/>\n                    <AnotherChart2 />\n                    <br/>\n                    <AnotherChart2 />\n                    <br/>\n                    <AnotherChart2 />\n                </td><td>\n                    <AnotherChart2 />\n                    <br/>\n                    <AnotherChart2 />\n                    <br/>\n                    <AnotherChart2 />\n                    <br/>\n                    <AnotherChart2 />\n                </td></tr></tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","let thresholds = null;\n\nexport function findLimit(num)\n{\n    const buildLimits = () => {\n        let base = [4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 80, 100];\n        let ret = [];\n        for (let i = 0; i < 14; i++) {\n            for (let j = 0; j < base.length; j++) {\n                ret.push(base[j]);\n                base[j] = base[j] * 10;\n            }\n        }\n        return ret;\n    };\n    \n    if (thresholds === null)\n        thresholds = buildLimits();\n    \n    num = num * 1.03;\n    for(let i=0; i < thresholds.length; i++) {\n        if (num > thresholds[i]) continue;\n        return thresholds[i];\n    }\n    \n    return num;\n}\n","import * as DomClass from \"dom-helpers/class\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nextUniqueId from \"../NextUniqueId\"\nimport DataSourceStore from \"../stores/DataSourceStore\";\nimport { findLimit } from './LimitFinder'\nimport * as Helper from \"../Helper\";\nimport {Help} from \"@material-ui/icons\";\n\nimport MomentFormat from 'moment';\n\n\nlet c3 = require(\"c3\");\n\nconst __EmptyJsonChart = {\n    txBytes: [],\n    rxBytes: [],\n    txPackets: [],\n    rxPackets: [],\n};\n\n// This component should never be re-rendered.\n// All the state updates are managed by DataSourceStore.on('storeUpdated') callback\n\nexport class NetDevChart extends Component {\n    static displayName = NetDevChart.name;\n\n    static ChartSize = {\n        width: 500,\n        height: 160,\n    };\n    \n    static Padding = 70;\n\n    domId = nextUniqueId(\"chart_net_dev\");\n    chart = null;\n    jsonChart = {};\n    isInitCompleted = false;\n    pointLimit = 60;\n    updateInterval = 1000;\n    timerId = null;\n    \n    prevLimits = {\n        limitBytes: -1,\n        limitPackets: -1\n    };\n    \n    constructor (props) {\n        super(props);\n        \n        this.refChart = React.createRef();\n        this.updateGlobalDataSource = this.updateGlobalDataSource.bind(this);\n        this._updateChart = this._updateChart.bind(this);\n        this._initChart = this._initChart.bind(this);\n        this.buildLocalJsonChart = this.buildLocalJsonChart.bind(this);\n        let x = DataSourceStore.on('storeUpdated', this.updateGlobalDataSource);\n    }\n\n    updateGlobalDataSource() {\n\n        let inactiveChartClassName = \"inactive-chart\";\n        if (Helper.isDocumentHidden()) {\n            if (this.refChart.current) DomClass.addClass(this.refChart.current, inactiveChartClassName);\n            Helper.log(`chart ${this.domId} is on hidden page. chart update postponed ${new Date()}`)\n            return;\n        }\n        else{\n            // Helper.toConsole(\"this.refChart\", this.refChart);\n            if (this.refChart.current) DomClass.removeClass(this.refChart.current, inactiveChartClassName);\n        }\n        \n        let jsonChart = this.buildLocalJsonChart();\n\n        this.jsonChart = jsonChart;\n        this._updateChart();\n        \n    }\n\n    buildLocalJsonChart() {\n        this.globalDataSource = DataSourceStore.activeDataSource;\n        let localDataSource = this.props.getLocalDataSource(this.globalDataSource);\n        if (!Helper.Common.objectIsNotEmpty(localDataSource))\n            localDataSource = __EmptyJsonChart;\n\n        let xValues = this.globalDataSource.x;\n        // console.log(`[[${this.props.name}]] localDataSource`); console.log(localDataSource);\n        // console.log(`[[${this.props.name}]] xValues`); console.log(xValues);\n\n        let rxBytes = localDataSource.rxBytes;\n        let txBytes = localDataSource.txBytes;\n        let rxPackets = localDataSource.rxPackets;\n        let txPackets = localDataSource.txPackets;\n        let jsonChart = {\n            // x: xValues,\n            // totals: localDataSource.totals,\n            rxBytes,\n            txBytes,\n            rxPackets,\n            txPackets,\n            \n        };\n\n        Helper.toConsole(`[[${this.props.name}]] jsonChart updated`, jsonChart);\n        return jsonChart;\n    }\n\n    componentDidMount() {\n\n        this.jsonChart = this.buildLocalJsonChart();\n        this._initChart();\n\n        this.timerId = setInterval(_ => {\n            // TODO: Update chart every second if web-socket is disconnected\n            // .... \n            // this.forceUpdate();\n        }, this.updateInterval);\n        \n        console.log(`NetDevChart::componentDidMount COMPLETED SUCCESSFULLY for ${this.props.name}`);\n    }\n\n    componentWillUnmount() {\n        DataSourceStore.removeListener('storeUpdated', this.updateGlobalDataSource);\n        \n        if (this.timerId)\n        {\n            clearInterval(this.timerId);\n            this.timerId = 0;\n        }\n        \n        let destroy = () => {\n            if (this.chart !== null) {\n                let c = this.chart;\n                this.chart = null;\n                c.destroy();\n                console.log(`chart #${this.domId} destroyed`);\n            }\n        };\n        \n        Helper.runInBackground(destroy);\n    }\n\n    _initChart()\n    {\n        var formatX = x => {\n            if (x === 0) return \"60\";\n            if (x === 60) return \"\";\n            return Math.round(60-x);\n        };\n\n        let jsonChart = this.jsonChart;\n        let {limitBytes, limitPackets} = this.computeAxisLimits(jsonChart);\n        this.prevLimits = {limitBytes, limitPackets};\n\n        let formatTransfer = num => (Math.round(num / 1024.0 * 100.0) / 100).toLocaleString(undefined, {useGrouping: true});\n        let formatPackets = num => Math.round(num).toLocaleString(undefined, {useGrouping: true});\n        \n\n        this.chart = c3.generate({\n            bindto: `#${this.domId}`,\n            data: {\n                // columns: columns,\n                json : this.jsonChart,\n                type: 'area-spline',\n                axes : {\n                    rxPackets : \"y2\",\n                    txPackets : \"y2\",\n                },\n                names : {\n                    rxPackets: \"RX:Packets\",\n                    txPackets: \"TX:Packets\",\n                    rxBytes: \"RX:KBytes\",\n                    txBytes: \"TX:KBytes\",\n                }\n\n            }, \n            tooltip: {\n                format: { title: Helper.Chart.tooltipTitleFormat(1) }\n            },\n            transition: {\n                duration: null\n            },\n            size: NetDevChart.ChartSize,\n            axis: {\n                x: {\n                    padding: 0,\n                    label: {\n                        text: '60 seconds',\n                        position: 'inner-left'\n                    },\n                    tick: {\n                        count: 7,\n                        format: formatX,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y: {\n                    min: 0,\n                    max: limitBytes,\n                    padding: 0,\n                    label: {\n                        text: 'Transfer, KB/s',\n                        position: 'outer-middle'\n                    },\n                    tick: {\n                        count: 5,\n                        format: formatTransfer,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y2 : {\n                    max: limitPackets,\n                    min: 0,\n                    padding: 0,\n                    show: true,\n                    tick: {\n                        count: 5,\n                        format: formatPackets,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    },\n                    label: {\n                        text: 'Packets / s',\n                        position: 'outer-middle'\n                    },\n\n                }\n\n            },\n            point: {\n                r: 1.5,\n                select: {r:8},\n                focus: {\n                    expand: {\n                        r: 4\n                    }\n                }\n            },\n\n            grid: {\n                y: {\n                    lines: [\n                        {value: limitBytes/2, text: '50%'},\n                        {value: limitBytes, text: '100%', class: 'label-200', position: 'middle'},\n                    ]\n                },\n                x : {\n                    lines: [\n                        {value: 60, text: ''},\n                    ]\n                }\n            },\n            // fix tick&labels withs for Y and Y2 axises\n            padding: {\n                left: NetDevChart.Padding,\n                right: NetDevChart.Padding,\n            },\n\n        });\n        \n    }\n\n    // PURE\n    getMaxOfArray(numArray) {\n        return Math.max.apply(null, numArray);\n    }\n\n    _updateChart() {\n        if (this.chart === null) return;\n\n        let jsonChart = this.jsonChart;\n\n        let [hasMessageId, messageId] = Helper.Common.tryGetProperty(DataSourceStore.getDataSource(), \"messageId\");\n        messageId = messageId || \"<unknown-message>\";\n\n        // limitBytes & limitPackets\n        let {limitBytes, limitPackets} = this.computeAxisLimits(jsonChart);\n        \n        let isSameLimits = this.prevLimits.limitBytes === limitBytes && this.prevLimits.limitPackets === limitPackets;\n        if (!isSameLimits) {\n            console.log(`NEW NET/DEV LIMITS for ${this.props.name} are Bytes: ${limitBytes}, Packets: ${limitPackets}`);\n            this.prevLimits = {limitBytes, limitPackets};\n            this.chart.axis.max({\n                y: limitBytes,\n                y2: limitPackets,\n            });\n\n            this.chart.ygrids([\n                {value: limitBytes / 2, text: '50%'},\n                {value: limitBytes, text: '100%', class: 'label-200', position: 'middle'},\n            ]);\n        }\n\n        this.chart.load({\n            json: this.jsonChart,\n            transition: {\n                duration: 0\n            },\n            done: () => {Helper.log(`NET-CHART::UPDATED ${messageId} @ ${this.props.name}`)}\n        });\n    }\n\n    computeAxisLimits(jsonChart) {\n        let maxBytes = Math.max(this.getMaxOfArray(jsonChart.rxBytes), this.getMaxOfArray(jsonChart.txBytes));\n        maxBytes = Math.floor((maxBytes + 1023) / 1024);\n        let maxPackets = Math.max(this.getMaxOfArray(jsonChart.rxPackets), this.getMaxOfArray(jsonChart.txPackets));\n        let limitBytes = findLimit(maxBytes);\n        let limitPackets = findLimit(maxPackets);\n        limitBytes = limitBytes * 1024;\n        return {limitBytes, limitPackets};\n    }\n\n    render () {\n        return <div id={this.domId} ref={this.refChart}/>\n    }\n}\n\nNetDevChart.propTypes = {\n    getLocalDataSource: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nextUniqueId from \"../NextUniqueId\"\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport { findLimit } from './LimitFinder'\nimport * as Helper from \"../Helper\";\nimport {NetDevChart} from \"./NetDevChart\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons'\nimport { faArrowAltCircleDown } from '@fortawesome/free-regular-svg-icons'\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons'\n\nconst iconSent = faArrowUp, iconReceived = faArrowDown;\n\nexport class NetDevChartHeader extends Component {\n    static displayName = NetDevChartHeader.name;\n    \n    constructor(props) {\n        super(props);\n        \n        this.updateGlobalDataSource = this.updateGlobalDataSource.bind(this);\n    }\n    \n    componentDidMount() {\n        let x = dataSourceStore.on('storeUpdated', this.updateGlobalDataSource);\n    }\n    \n    componentWillUnmount() {\n        dataSourceStore.removeListener('storeUpdated', this.updateGlobalDataSource);\n    }\n\n    updateGlobalDataSource()\n    {\n        this.forceUpdate();\n    }\n\n    dd = {\n        container: {\n            position: \"relative\",\n            width: NetDevChart.ChartSize.width,\n            // width: \"100%\",\n            marginBottom: 4,\n            marginTop: \"15px\",\n        },\n        center: {\n            paddingTop: 3,\n            fontSize: 16,\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"center\",\n            width: \"100%\",\n        },\n        left: {\n            paddingTop: 8,\n            fontSize: 12,\n            verticalAlign: \"bottom\",\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"left\",\n            width: \"100%\",\n            paddingLeft: NetDevChart.Padding - 4,\n            paddingRight: NetDevChart.Padding,\n        },\n        right: {\n            paddingTop: 8,\n            fontSize: 12,\n            verticalAlign: \"bottom\",\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"right\",\n            width: \"100%\",\n            paddingLeft: NetDevChart.Padding,\n            paddingRight: NetDevChart.Padding - 4,\n        },\n    };\n    \n    render() {\n\n        let totals;\n        try {\n            let glo = dataSourceStore.getDataSource();\n            totals = glo.net.interfaceTotals[this.props.name];\n        }\n        catch{\n            totals = {rxBytes: 0, txBytes: 0};\n        }\n        \n        if (!Helper.Common.objectIsNotEmpty(totals))\n            totals = {rxBytes: 0, txBytes: 0};\n            \n\n        let format = x => x > 0 ? Helper.Common.formatBytes(x) : \"\";\n        // totals = {rxBytes: 0, txBytes: 0};\n\n\n        return (\n            <div style={this.dd.container}>&nbsp;\n                <div style={this.dd.left}><span title={\"TOTAL RECEIVED\"}><FontAwesomeIcon icon={iconReceived} /> {format(totals.rxBytes)}</span></div>\n                <div style={this.dd.center}>interface <b>{this.props.name.toUpperCase()}</b></div>\n                <div style={this.dd.right}><span title={\"TOTAL SENT\"}>{format(totals.txBytes)} <FontAwesomeIcon icon={iconSent} /></span></div>\n            </div>\n        )\n    };\n\n}\n\nNetDevChartHeader.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { AnotherChart2 } from './AnotherChart2';\nimport { NetDevChart } from './NetDevChart';\nimport { NetDevChartHeader } from './NetDevChartHeader';\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport * as Helper from \"../Helper\";\n\nexport class NetChartContainer extends Component {\n    static displayName = NetChartContainer.name;\n\n    hasProperty = (obj, name) => typeof(obj) !== 'undefined'  && typeof(obj[name]) !== 'undefined';\n    \n    constructor(props) {\n        super(props);\n\n        this.getEns33 = this.getEns33.bind(this);\n        this.getLo = this.getLo.bind(this);\n        this.getNone = this.getNone.bind(this);\n    }\n    \n    getEns33(ds)\n    {\n        \n        try {\n            return Helper.NetDev.getOptionalInterfacesProperty(dataSourceStore.getDataSource()).ens33;\n        }\n        catch(err)\n        {\n            return {};\n        }\n    }\n\n    getNone()\n    {\n        return {};\n    }\n    \n    getLo(ds)\n    {\n\n        try {\n            return Helper.NetDev.getOptionalInterfacesProperty(dataSourceStore.getDataSource()).lo;\n        }\n        catch(err)\n        {\n            return {};\n        }\n    }\n\n\n    render () {\n        return (\n            <div>\n                <h2>Hardcoded interfaces (prototype with live data)</h2>\n                <table><tbody><tr><td style={{paddingRight: 40}}>\n                    <h4>ens33</h4>\n                    <NetDevChartHeader name={\"ens33\"}/>\n                    <NetDevChart\n                        name=\"ens33\"\n                        getLocalDataSource={ __ => this.getEns33() }\n                        description=\"192.168.42.42\"\n                    />\n                    <h4>lo</h4>\n                    <NetDevChartHeader name={\"lo\"}/>\n                    <NetDevChart\n                        name=\"lo\"\n                        getLocalDataSource={ __ => this.getLo() }\n                        description=\"192.168.42.42\"\n                    />\n                    <h4>none</h4>\n                    <NetDevChartHeader name={\"none\"}/>\n                    <NetDevChart\n                        name=\"none\"\n                        getLocalDataSource={ __ => this.getNone() }\n                        description=\"interface is absent\"\n                    />\n                </td><td>\n\n\n\n                </td></tr></tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n// import suggestions_v1 from \"./net-benchmark-suggestions\";\nimport * as Helper from \"../../Helper\";\n\nlet suggestions = [];\n\nfunction renderInputComponent(inputProps) {\n    const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputRef: node => {\n                    ref(node);\n                    inputRef(node);\n                },\n                classes: {\n                    input: classes.input,\n                },\n            }}\n            {...other}\n        />\n    );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n    const matches = match(suggestion.label, query);\n    const parts = parse(suggestion.label, matches);\n\n    return (\n        <MenuItem selected={isHighlighted} component=\"div\">\n            <div>\n                {parts.map((part, index) =>\n                        part.highlight ? (\n                            <span key={String(index)} style={{ fontWeight: 500 }}>{part.text}</span>\n                        ) : (\n                            <span key={String(index)}>{part.text}</span>\n                                \n                            \n                        ),\n                )}\n            </div>\n        </MenuItem>\n    );\n}\n\nfunction getSuggestions(value) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n        ? []\n        : suggestions.filter(suggestion => {\n            // const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n            const keep = count < 5 && \n                (\n                    inputValue.length >= 2 \n                        ? suggestion.label.toLowerCase().indexOf(inputValue) >= 0  \n                        : suggestion.label.slice(0, inputLength).toLowerCase() === inputValue\n                );\n            \n            const contains = suggestion.label.indexOf()\n                \n\n            if (keep) {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\nfunction getSuggestionValue(suggestion) {\n    return suggestion.label;\n}\n\nconst styles = theme => ({\n    root: {\n        height: 250,\n        flexGrow: 1,\n    },\n    container: {\n        position: 'relative',\n    },\n    suggestionsContainerOpen: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n    },\n    suggestion: {\n        display: 'block',\n    },\n    suggestionsList: {\n        margin: 0,\n        padding: 0,\n        listStyleType: 'none',\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n    state = {\n        single: '',\n        popper: '',\n        suggestions: [],\n    };\n    \n    componentDidMount() {\n        let apiUrl = 'assets/proof-of-concept-net-benchmark-suggestions.json';\n        try {\n            fetch(apiUrl)\n                .then(response => {\n                    Helper.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    Helper.log(response);\n                    return response.ok ? response.json() : {error: response.status, details: response.json()}\n                })\n                .then(suggestionsRecieved => {\n                    suggestions = suggestionsRecieved;\n                    Helper.toConsole(\"suggestionsDataSource\", suggestions);\n                    this.setState({suggestionsDataSource: suggestions});\n                    // Helper.toConsole(\"DISKS for benchmark\", disks);\n                })\n                .catch(error => Helper.log(error));\n        }\n        catch(err)\n        {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n\n    }\n\n    handleSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: getSuggestions(value),\n        });\n    };\n\n    handleSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: [],\n        });\n    };\n\n    handleChange = name => (event, { newValue }) => {\n        this.setState({\n            [name]: newValue,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const autosuggestProps = {\n            renderInputComponent,\n            suggestions: this.state.suggestions,\n            onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n            onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n            getSuggestionValue,\n            renderSuggestion,\n        };\n\n        return (\n            <div className={classes.root}>\n                <Autosuggest\n                    {...autosuggestProps}\n                    inputProps={{\n                        classes,\n                        placeholder: 'Search a country (start with a)',\n                        value: this.state.single,\n                        onChange: this.handleChange('single'),\n                    }}\n                    theme={{\n                        container: classes.container,\n                        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n                        suggestionsList: classes.suggestionsList,\n                        suggestion: classes.suggestion,\n                    }}\n                    renderSuggestionsContainer={options => (\n                        <Paper {...options.containerProps} square>\n                            {options.children}\n                        </Paper>\n                    )}\n                />\n                \n                <div className={classes.divider} />\n                \n                <Autosuggest\n                    {...autosuggestProps}\n                    inputProps={{\n                        classes,\n                        label: 'Label',\n                        placeholder: 'With Popper',\n                        value: this.state.popper,\n                        onChange: this.handleChange('popper'),\n                        inputRef: node => {\n                            this.popperNode = node;\n                        },\n                        InputLabelProps: {\n                            shrink: true,\n                        },\n                    }}\n                    theme={{\n                        suggestionsList: classes.suggestionsList,\n                        suggestion: classes.suggestion,\n                    }}\n                    renderSuggestionsContainer={options => (\n                        <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n                            <Paper\n                                square\n                                {...options.containerProps}\n                                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n                            >\n                                {options.children}\n                            </Paper>\n                        </Popper>\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nIntegrationAutosuggest.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n","import React, { Component } from 'react';\nimport { NetDevChart } from './NetDevChart';\nimport { NetDevChartHeader } from './NetDevChartHeader';\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport * as Helper from \"../Helper\";\nimport * as Enumerable from \"linq-es2015\";\n\nexport class NetChartContainer_V2 extends Component {\n    static displayName = NetChartContainer_V2.name;\n\n    hasProperty = (obj, name) => typeof obj != 'undefined'  && typeof obj[name] != 'undefined';\n    \n    timerId = null;\n    \n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV === \"test\") console.log(\"TEST: NetChartContainer_V2.constructor()\");\n        this.tryInitNetChartList = this.tryInitNetChartList.bind(this);\n        this.tryBuildNetChartList = this.tryBuildNetChartList.bind(this);\n        \n        this.state = {\n            visibleInterfaceNames: [],\n            netChartList: this.tryBuildNetChartList(),\n        };\n        \n    }\n    \n    componentDidMount() {\n        if (process.env.NODE_ENV === \"test\") console.log(\"TEST: NetChartContainer_V2.componentDidMount()\");\n        let isAlreadyBound = this.state.netChartList !== null; \n        if (!isAlreadyBound)\n            this.timerId = setInterval(this.waiterTick.bind(this), 100);\n    }\n\n    \n    componentWillUnmount() {\n        if (this.timerId !== null)\n            clearInterval(this.timerId);\n    }\n\n    waiterTick()\n    {\n        this.tryInitNetChartList();\n    }\n    \n    tryBuildNetChartList()\n    {\n        let globalDataSource = dataSourceStore.getDataSource();\n        let interfaces = Helper.NetDev.getOptionalInterfacesProperty(globalDataSource);\n        \n        // activeInterfaceNames.map(interfaceName => {return {}});\n        if (interfaces !== null) {\n            let activeInterfaceNames = Helper.NetDev.getActiveInterfaceList(globalDataSource);\n            // just simple map to this.jsonChart\n            let glo = dataSourceStore.getDataSource();\n            \n            let getTotals = name => {\n                try {\n                    let t = globalDataSource.net.interfaceTotals[name];\n                    return t.rxBytes + t.txBytes;\n                }\n                catch{\n                    console.warn(`globalDataSource missed .net.interfaceTotals['${name}']`);\n                }\n            };\n            \n            let sortedNames = Enumerable.asEnumerable(activeInterfaceNames)\n                .OrderByDescending(name => getTotals(name))\n                .ThenBy(name => name)\n                .ToArray();\n            \n            return sortedNames.map(interfaceName => {\n                return {\n                    name: interfaceName,\n                    description: `the ${interfaceName} description is not yet completed`,\n                    getLocalDataSource: () => {\n                        try {\n                            let glo = dataSourceStore.getDataSource();\n                            let ret = Helper.NetDev.getOptionalInterfacesProperty(glo)[interfaceName];\n                            // ret.totals = glo.net.interfaceTotals[interfaceName];\n                            return ret;\n                        } catch {\n                            return {};\n                        }\n                    },\n                }\n            });\n        }\n        \n        return null;\n    }\n\n    // used by timer callback\n    tryInitNetChartList()\n    {\n        if (this.state.netChartList === null)\n        {\n            let netChartList = this.tryBuildNetChartList();\n            if (netChartList !== null) {\n                this.setState({\n                    netChartList: netChartList,\n                });\n            }\n        }\n    }\n\n    renderLoading() {\n        let style = {textAlign: \"center\", paddingBottom: NetDevChart.ChartSize.height/2, paddingTop: NetDevChart.ChartSize.height/2, width: NetDevChart.ChartSize.width};\n        return (\n            <h6 id=\"NetCharts_is_Waiting_for_connection\" style={style}>\n                Waiting for curved lines\n            </h6>\n        )\n    }\n    \n    renderNormal() {\n        let chartCounter = 0; // for integration tests\n        return (\n            <div id=\"NetCharts\">\n                {this.state.netChartList.map(netChart =>\n                    <div className=\"CHART\" key={netChart.name}>\n                        <span id={`NET_NAME_${++chartCounter}`} style={{display:'none'}}>{netChart.name}</span>\n                        <NetDevChartHeader name={netChart.name}/>\n                        <NetDevChart\n                            name={netChart.name}\n                            getLocalDataSource={netChart.getLocalDataSource}\n                            description={netChart.description}\n                        />\n                    <br/>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <div id=\"NetChartContainer_V2\">\n                {this.state.netChartList === null ? this.renderLoading() : this.renderNormal()}\n            </div>\n        );\n    }\n}\n","import * as DomClass from \"dom-helpers/class\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nextUniqueId from \"../NextUniqueId\"\nimport DataSourceStore from \"../stores/DataSourceStore\";\nimport { findLimit } from './LimitFinder'\nimport * as Helper from \"../Helper\";\nimport {NetDevChart} from \"./NetDevChart\";\nimport MomentFormat from 'moment';\nlet c3 = require(\"c3\");\n\nconst __EmptyJsonChart = {\n    txBytes: [],\n    rxBytes: [],\n    txPackets: [],\n    rxPackets: [],\n};\n\n\nexport class BlockStatChart extends React.Component {\n    static displayName = BlockStatChart.name;\n\n    static ChartSize = {\n        width: 500,\n        height: 160,\n    };\n\n    static Padding = 70;\n\n    domId = nextUniqueId(\"chart_block_stat\");\n    chart = null;\n    pointLimit = 60;\n    updateInterval = 1000;\n    timerId = null;\n\n    prevLimits = {\n        limitBytes: -1,\n        limitPackets: -1\n    };\n\n    constructor (props) {\n        super(props);\n\n        this.refChart = React.createRef();\n        this.updateGlobalDataSource = this.updateGlobalDataSource.bind(this);\n        this._updateChart = this._updateChart.bind(this);\n        this._initChart = this._initChart.bind(this);\n        // this.buildLocalJsonChart = this.buildLocalJsonChart.bind(this);\n        let x = DataSourceStore.on('storeUpdated', this.updateGlobalDataSource);\n    }\n\n    componentDidMount() {\n\n        this.jsonChart = this.buildLocalJsonChart();\n        this._initChart();\n\n        this.timerId = setInterval(_ => {\n            // TODO: Update chart every second if web-socket is disconnected\n            // .... \n            // this.forceUpdate();\n        }, this.updateInterval);\n\n        console.log(`BlockStatChart::componentDidMount COMPLETED SUCCESSFULLY for ${this.props.name}`);\n    }\n    \n    componentWillUnmount() {\n        DataSourceStore.removeListener('storeUpdated', this.updateGlobalDataSource);\n\n        if (this.timerId)\n        {\n            clearInterval(this.timerId);\n            this.timerId = 0;\n        }\n\n        let destroy = () => {\n            if (this.chart !== null) {\n                let c = this.chart;\n                this.chart = null;\n                c.destroy();\n                console.log(`chart #${this.domId} destroyed`);\n            }\n        };\n\n        Helper.runInBackground(destroy);\n\n    }\n\n    buildLocalJsonChart() {\n        this.globalDataSource = DataSourceStore.activeDataSource;\n        let [hasBlock, block] = Helper.Common.tryGetProperty(this.globalDataSource, \"block\");\n        let localDataSource = __EmptyJsonChart;\n        if (hasBlock) localDataSource = block.blocks[this.props.name];\n\n        // let xValues = this.globalDataSource.x;\n        // console.log(`[[${this.props.name}]] localDataSource`); console.log(localDataSource);\n        // console.log(`[[${this.props.name}]] xValues`); console.log(xValues);\n\n        let rxBytes = localDataSource.readSectors;\n        let txBytes = localDataSource.writeSectors;\n        let rxPackets = localDataSource.readOperations;\n        let txPackets = localDataSource.writeOperations;\n        let jsonChart = {\n            // x: xValues,\n            // totals: localDataSource.totals,\n            rxBytes,\n            txBytes,\n            rxPackets,\n            txPackets,\n\n        };\n\n        Helper.toConsole(`BLOCK [[${this.props.name}]] jsonChart updated`, jsonChart);\n        return jsonChart;\n    }\n\n    // PURE\n    getMaxOfArray(numArray) {\n        return Math.max.apply(null, numArray);\n    }\n\n\n    _updateChart() {\n        if (this.chart === null) return;\n\n        let jsonChart = this.jsonChart;\n\n        let [hasMessageId, messageId] = Helper.Common.tryGetProperty(DataSourceStore.getDataSource(), \"messageId\");\n        messageId = messageId || \"<unknown-message>\";\n\n\n        // limitBytes & limitPackets\n        let {limitBytes, limitPackets} = this.computeAxisLimits(jsonChart);\n\n        let isSameLimits = this.prevLimits.limitBytes === limitBytes && this.prevLimits.limitPackets === limitPackets;\n        if (!isSameLimits) {\n            console.log(`NEW BLOCK LIMITS for ${this.props.name} are Bytes: ${limitBytes}, Operations: ${limitPackets}`);\n            this.prevLimits = {limitBytes, limitPackets};\n            this.chart.axis.max({\n                y: limitBytes,\n                y2: limitPackets,\n            });\n\n            this.chart.ygrids([\n                {value: limitBytes / 2, text: '50%'},\n                {value: limitBytes, text: '100%', class: 'label-200', position: 'middle'},\n            ]);\n        }\n\n        this.chart.load({\n            json: this.jsonChart,\n            transition: {\n                duration: 0\n            },\n            done: () => {Helper.log(`BLOCK-CHART::UPDATED ${messageId} @ ${this.props.name}`)}\n        });\n    }\n\n\n    _initChart()\n    {\n        var formatX = x => {\n            if (x === 0) return \"60\";\n            if (x === 60) return \"\";\n            return Math.round(60-x);\n        };\n        \n        let jsonChart = this.jsonChart;\n        let {limitBytes, limitPackets} = this.computeAxisLimits(jsonChart);\n        this.prevLimits = {limitBytes, limitPackets};\n\n        let formatTransfer = num => (Math.round(num / 1024.0 * 100.0) / 100).toLocaleString(undefined, {useGrouping: true});\n        let formatPackets = num => Math.round(num).toLocaleString(undefined, {useGrouping: true});\n\n        this.chart = c3.generate({\n            bindto: `#${this.domId}`,\n            data: {\n                // columns: columns,\n                json : this.jsonChart,\n                type: 'area-spline',\n                axes : {\n                    rxPackets : \"y2\",\n                    txPackets : \"y2\",\n                },\n                names : {\n                    rxPackets: \"Rd:Ops\",\n                    txPackets: \"Wr:Ops\",\n                    rxBytes: \"Rd:KB\",\n                    txBytes: \"Wr:KB\",\n                }\n\n            },\n            tooltip: {\n                format: { title: Helper.Chart.tooltipTitleFormat(1) }\n            },\n            transition: {\n                duration: null\n            },\n            size: NetDevChart.ChartSize,\n            axis: {\n                x: {\n                    padding: 0,\n                    label: {\n                        text: '60 seconds',\n                        position: 'inner-left'\n                    },\n                    tick: {\n                        count: 7,\n                        format: formatX,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y: {\n                    min: 0,\n                    max: limitBytes,\n                    padding: 0,\n                    label: {\n                        text: 'Transfer, KB/s',\n                        position: 'outer-middle'\n                    },\n                    tick: {\n                        count: 5,\n                        format: formatTransfer,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y2 : {\n                    max: limitPackets,\n                    min: 0,\n                    padding: 0,\n                    show: true,\n                    tick: {\n                        count: 5,\n                        format: formatPackets,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    },\n                    label: {\n                        text: 'Operations / s',\n                        position: 'outer-middle'\n                    },\n\n                }\n\n            },\n            point: {\n                r: 1.5,\n                select: {r:8},\n                focus: {\n                    expand: {\n                        r: 4\n                    }\n                }\n            },\n\n            grid: {\n                y: {\n                    lines: [\n                        {value: limitBytes/2, text: '50%'},\n                        {value: limitBytes, text: '100%', class: 'label-200', position: 'middle'},\n                    ]\n                },\n                x : {\n                    lines: [\n                        {value: 60, text: ''},\n                    ]\n                }\n            },\n            // fix tick&labels withs for Y and Y2 axises\n            padding: {\n                left: NetDevChart.Padding,\n                right: NetDevChart.Padding,\n            },\n\n        });\n\n    }\n\n    computeAxisLimits(jsonChart) {\n        let maxBytes = Math.max(this.getMaxOfArray(jsonChart.rxBytes), this.getMaxOfArray(jsonChart.txBytes));\n        maxBytes = Math.floor((maxBytes + 1023) / 1024);\n        let maxPackets = Math.max(this.getMaxOfArray(jsonChart.rxPackets), this.getMaxOfArray(jsonChart.txPackets));\n        let limitBytes = findLimit(maxBytes);\n        let limitPackets = findLimit(maxPackets);\n        limitBytes = limitBytes * 1024;\n        return {limitBytes, limitPackets};\n    }\n\n\n\n\n\n    updateGlobalDataSource() {\n        let inactiveChartClassName = \"inactive-chart\";\n        if (Helper.isDocumentHidden()) {\n            if (this.refChart.current) DomClass.addClass(this.refChart.current, inactiveChartClassName);\n            Helper.log(`chart ${this.domId} is on hidden page. chart update postponed ${new Date()}`)\n            return;\n        }\n        else{\n            // Helper.toConsole(\"this.refChart\", this.refChart);\n            if (this.refChart.current) DomClass.removeClass(this.refChart.current, inactiveChartClassName);\n        }\n\n        let jsonChart = this.buildLocalJsonChart();\n        this.jsonChart = jsonChart;\n        this._updateChart();\n    }\n    \n    renderStub()\n    {\n        let tempStyle = {\n            border: \"1px solid red\", \n            width: BlockStatChart.ChartSize.width - 70*2, \n            height: BlockStatChart.ChartSize.height,\n            paddingTop: BlockStatChart.ChartSize.height/3,\n            textAlign: \"center\",\n            marginLeft: \"70px\",\n            verticalAlign: \"middle\",\n            color: \"grey\",\n        };\n        return (\n            <div style={tempStyle} >\n                CHART placeholder for<br/>{this.props.name}\n            </div>\n        );\n    }\n\n    render () {\n        return <div id={this.domId} ref={this.refChart} />\n    }\n\n\n\n}\n\nBlockStatChart.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import * as DomClass from \"dom-helpers/class\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nextUniqueId from \"../NextUniqueId\"\nimport DataSourceStore from \"../stores/DataSourceStore\";\nimport { findLimit } from './LimitFinder'\nimport * as Helper from \"../Helper\";\nimport {NetDevChart} from \"./NetDevChart\";\nimport MomentFormat from 'moment';\nlet c3 = require(\"c3\");\n\nconst __EmptyJsonChart = {\n    queue: [],\n    busy: [],\n};\n\n// const __customColors = {queue: '#9467BD', busy: \"#8C564B\"};\n// const __customColors = {queue: '#17BECF', busy: \"#40A08782\"};\nconst __customColors = {queue: '#17BECF', busy: \"#E2A5D0\"};\n\n\n\nexport class BlockStatSecondChart extends React.Component {\n    static displayName = BlockStatSecondChart.name;\n\n    static ChartSize = {\n        width: 500,\n        height: 160,\n    };\n\n    static Padding = 70;\n\n    domId = nextUniqueId(\"chart_block_V2\");\n    chart = null;\n    pointLimit = 60;\n    updateInterval = 1000;\n    timerId = null;\n\n    prevLimits = {\n        limitQueue: -1,\n        limitBusy: -1\n    };\n\n    constructor (props) {\n        super(props);\n\n        this.refChart = React.createRef();\n        this.updateGlobalDataSource = this.updateGlobalDataSource.bind(this);\n        this._updateChart = this._updateChart.bind(this);\n        this._initChart = this._initChart.bind(this);\n        let x = DataSourceStore.on('storeUpdated', this.updateGlobalDataSource);\n    }\n\n    componentDidMount() {\n\n        this.jsonChart = this.buildLocalJsonChart();\n        this._initChart();\n\n        this.timerId = setInterval(_ => {\n            // TODO: Update chart every second if web-socket is disconnected\n            // .... \n            // this.forceUpdate();\n        }, this.updateInterval);\n\n        console.log(`BlockStatSecondChart::componentDidMount COMPLETED SUCCESSFULLY for ${this.props.name}`);\n    }\n\n    componentWillUnmount() {\n        DataSourceStore.removeListener('storeUpdated', this.updateGlobalDataSource);\n\n        if (this.timerId)\n        {\n            clearInterval(this.timerId);\n            this.timerId = 0;\n        }\n\n        let destroy = () => {\n            if (this.chart !== null) {\n                let c = this.chart;\n                this.chart = null;\n                c.destroy();\n                console.log(`chart #${this.domId} destroyed`);\n            }\n        };\n\n        Helper.runInBackground(destroy);\n    }\n\n    buildLocalJsonChart() {\n        this.globalDataSource = DataSourceStore.activeDataSource;\n        let [hasBlock, block] = Helper.Common.tryGetProperty(this.globalDataSource, \"block\");\n        let localDataSource = __EmptyJsonChart;\n        if (hasBlock) localDataSource = block.blocks[this.props.name];\n\n        let queue = localDataSource.inFlightRequests;\n        let busy = localDataSource.ioMilliseconds;\n        let jsonChart = {\n            queue,\n            busy,\n        };\n\n        Helper.toConsole(`BLOCK [[${this.props.name}]] jsonChart updated`, jsonChart);\n        return jsonChart;\n    }\n\n    // PURE\n    getMaxOfArray(numArray) {\n        return Math.max.apply(null, numArray);\n    }\n\n    _updateChart() {\n        if (this.chart === null) return;\n\n        let jsonChart = this.jsonChart;\n\n        let [hasMessageId, messageId] = Helper.Common.tryGetProperty(DataSourceStore.getDataSource(), \"messageId\");\n        messageId = messageId || \"<unknown-message>\";\n\n        // limitBytes & limitPackets\n        let {limitQueue, limitBusy} = this.computeAxisLimits(jsonChart);\n\n        let isSameLimits = this.prevLimits.limitBusy === limitBusy && this.prevLimits.limitQueue === limitQueue;\n        if (!isSameLimits) {\n            console.log(`NEW BLOCK-2nd LIMITS for ${this.props.name} are Queue: ${limitQueue}, Busy: ${limitBusy}`);\n            this.prevLimits = {limitQueue, limitBusy};\n            this.chart.axis.max({\n                y: limitQueue,\n                y2: limitBusy,\n            });\n\n            this.chart.ygrids([\n                {value: limitQueue / 2, text: '50%'},\n                {value: limitQueue, text: '100%', class: 'label-200', position: 'middle'},\n            ]);\n        }\n\n        this.chart.load({\n            json: this.jsonChart,\n            transition: {\n                duration: 0\n            },\n            done: () => {Helper.log(`BLOCK-2nd-CHART::UPDATED ${messageId} @ ${this.props.name}`)}\n        });\n    }\n\n    computeAxisLimits(jsonChart) {\n        let maxQueue = Math.max(this.getMaxOfArray(jsonChart.queue));\n        let limitQueue = findLimit(maxQueue);\n        return {limitQueue, limitBusy: 1000};\n    }\n\n    _initChart()\n    {\n        var formatX = x => {\n            if (x === 0) return \"60\";\n            if (x === 60) return \"\";\n            return Math.round(60-x);\n        };\n\n        let jsonChart = this.jsonChart;\n        let {limitQueue, limitBusy} = this.computeAxisLimits(jsonChart);\n        this.prevLimits = {limitQueue, limitBusy};\n\n        let formatQueue = num => Math.round(num).toLocaleString(undefined, {useGrouping: true});\n        let formatBusy = num => (Math.round(num) / 10).toLocaleString(undefined, {useGrouping: true});\n\n        this.chart = c3.generate({\n            bindto: `#${this.domId}`,\n            data: {\n                // columns: columns,\n                json : this.jsonChart,\n                type: 'area-spline',\n                colors: __customColors,\n                axes : {\n                    queue : \"y\",\n                    busy : \"y2\",\n                },\n                names : {\n                    queue: \"Queue\",\n                    busy: \"Busy\",\n                }\n\n            },\n            tooltip: {\n                format: { title: Helper.Chart.tooltipTitleFormat(1) }\n            },\n            transition: {\n                duration: null\n            },\n            size: NetDevChart.ChartSize,\n            axis: {\n                x: {\n                    padding: 0,\n                    label: {\n                        text: '60 seconds',\n                        position: 'inner-left'\n                    },\n                    tick: {\n                        count: 7,\n                        format: formatX,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y: {\n                    min: 0,\n                    max: limitQueue,\n                    padding: 0,\n                    label: {\n                        text: 'Queue',\n                        position: 'outer-middle'\n                    },\n                    tick: {\n                        count: 5,\n                        format: formatQueue,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    }\n                },\n                y2 : {\n                    max: limitBusy,\n                    min: 0,\n                    padding: 0,\n                    show: true,\n                    tick: {\n                        count: 5,\n                        format: formatBusy,\n                        // values: [1, 2, 4, 8, 16, 32]\n                    },\n                    label: {\n                        text: 'Busy, %%',\n                        position: 'outer-middle'\n                    },\n\n                }\n\n            },\n            point: {\n                r: 1.5,\n                select: {r:8},\n                focus: {\n                    expand: {\n                        r: 4\n                    }\n                }\n            },\n\n            grid: {\n                y: {\n                    lines: [\n                        {value: limitQueue/2, text: '50%'},\n                        {value: limitQueue, text: '100%', class: 'label-200', position: 'middle'},\n                    ]\n                },\n                x : {\n                    lines: [\n                        {value: 60, text: ''},\n                    ]\n                }\n            },\n            // fix tick&labels withs for Y and Y2 axises\n            padding: {\n                left: NetDevChart.Padding,\n                right: NetDevChart.Padding,\n            },\n\n        });\n\n    }\n\n    updateGlobalDataSource() {\n        let inactiveChartClassName = \"inactive-chart\";\n        if (Helper.isDocumentHidden()) {\n            if (this.refChart.current) DomClass.addClass(this.refChart.current, inactiveChartClassName);\n            Helper.log(`chart ${this.domId} is on hidden page. chart update postponed ${new Date()}`)\n            return;\n        }\n        else{\n            // Helper.toConsole(\"this.refChart\", this.refChart);\n            if (this.refChart.current) DomClass.removeClass(this.refChart.current, inactiveChartClassName);\n        }\n\n        let jsonChart = this.buildLocalJsonChart();\n        this.jsonChart = jsonChart;\n        this._updateChart();\n    }\n\n\n\n    render () {\n        return <div id={this.domId} ref={this.refChart} />\n    }\n\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nextUniqueId from \"../NextUniqueId\"\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport { findLimit } from './LimitFinder'\nimport * as Helper from \"../Helper\";\nimport {BlockDevChart} from \"./BlockStatChart\";\nimport {NetDevChart} from \"./NetDevChart\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons'\nimport { faArrowAltCircleDown } from '@fortawesome/free-regular-svg-icons'\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons'\n\nimport * as Enumerable from \"linq-es2015\";\n\nconst iconSent = faArrowUp, iconReceived = faArrowDown;\n\nexport class BlockStatDevChartHeader extends Component {\n    static displayName = BlockStatDevChartHeader.name;\n\n    constructor(props) {\n        super(props);\n\n        this.updateGlobalDataSource = this.updateGlobalDataSource.bind(this);\n    }\n\n    componentDidMount() {\n        let x = dataSourceStore.on('storeUpdated', this.updateGlobalDataSource);\n    }\n    \n    componentWillUnmount() {\n        dataSourceStore.removeListener('storeUpdated', this.updateGlobalDataSource);\n    }\n\n    updateGlobalDataSource()\n    {\n        this.forceUpdate();\n        // console.log(\"BlockStatDevChartHeader::updateGlobalDataSource\");\n        \n    }\n    \n\n    dd = {\n        container: {\n            position: \"relative\",\n            width: NetDevChart.ChartSize.width,\n            // width: \"100%\",\n            marginBottom: 4,\n            marginTop: \"20px\",\n            // border: \"1px solid green\",\n        },\n        container2: {\n            position: \"relative\",\n            width: NetDevChart.ChartSize.width,\n            // width: \"100%\",\n            marginBottom: 4,\n            marginTop: \"16px\",\n            // border: \"1px solid green\",\n        },\n        top: {\n            paddingTop: 3,\n            fontSize: 16,\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"left\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            width: NetDevChart.ChartSize.width - 2* NetDevChart.Padding,\n            // border: \"1px solid transparent\",\n            borderBottom: \"1px solid #DDD\",\n            marginLeft: NetDevChart.Padding,\n            marginRight: 0,\n        },\n        // BIG\n        // center: {\n        //     paddingTop: 3+16,\n        //     fontSize: 16,\n        //     position: \"absolute\",\n        //     left: 0, top: 0+16,\n        //     textAlign: \"center\",\n        //     width: \"100%\",\n        // },\n        // small\n        center: {\n            paddingTop: 0,\n            fontSize: 14,\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"center\",\n            width: \"100%\",\n        },\n        left: {\n            paddingTop: 0,\n            fontSize: 14,\n            verticalAlign: \"bottom\",\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"left\",\n            width: \"100%\",\n            paddingLeft: NetDevChart.Padding - 6, // depends on font size\n            paddingRight: NetDevChart.Padding,\n        },\n        right: {\n            paddingTop: 0,\n            fontSize: 14,\n            verticalAlign: \"bottom\",\n            position: \"absolute\",\n            left: 0, top: 0,\n            textAlign: \"right\",\n            width: \"100%\",\n            paddingLeft: NetDevChart.Padding,\n            paddingRight: NetDevChart.Padding - 6, // depends on font size\n        },\n    };\n    \n/*  EXAMPLES:\n    --------\n    / (the root),       9 GB    (btrfs)\n    /apps/rider,        554 MB  (squashfs, R/O)\n    /transient-builds,  97 GB   (ext4)\n*/\n    renderMountPathHeader()\n    {\n        // mounted volume\n        let globalDataSource = dataSourceStore.getDataSource();\n        let mounts = Helper.Disks.getOptionalMountsProperty(globalDataSource);\n        mounts = mounts == null ? [] : mounts;\n\n        let deviceCopy = \"/dev/\" + this.props.name;\n        let mountInfo = mounts.find(x => x && x.mountEntry && x.mountEntry.device === deviceCopy);\n        if (mountInfo === undefined) mountInfo = null;\n        let mountPath = mountInfo && mountInfo.mountEntry ? mountInfo.mountEntry.mountPath : null;\n        let fileSystem = mountInfo && mountInfo.mountEntry ? mountInfo.mountEntry.fileSystem : null;\n        let totalSize = mountInfo && mountInfo.totalSize && mountInfo.totalSize > 0 ? mountInfo.totalSize : null;\n        let isReadonly = mountInfo && (mountInfo.freeSpace === 0);\n        if (fileSystem === \"swap\") {\n            mountPath=\"swap\";\n            fileSystem = null;\n        }\n\n        let componentMountPath = mountPath === null ? null : (\n            <span><b>{mountPath}</b>{mountPath === \"/\" ? \" (the root)\" : \"\"}</span>\n        );\n\n        let componentTotalSize = !totalSize ? null : (\n            <span>,&nbsp;&nbsp;<small>{Helper.Common.formatBytes(totalSize,0)}</small></span>\n        );\n\n        let componentReadOnly = (<>, <small>R/O</small></>);\n        let componentFileSystem = fileSystem === null ? null : (\n            <span style={{color:\"grey\"}}>({fileSystem}{isReadonly ? componentReadOnly:null})</span>\n        );\n        \n        return (\n            <div style={this.dd.top}>{componentMountPath}{componentTotalSize}&nbsp;&nbsp;{componentFileSystem}</div>\n        );\n        \n    }\n\n    render() {\n\n        let totals;\n        try {\n            let glo = dataSourceStore.getDataSource();\n            // TODO: use associative array\n            let totalsRaw = Enumerable.asEnumerable(glo.block.blockTotals)\n                .FirstOrDefault(x => x.diskVolKey === this.props.name);\n            \n            totals = {rxBytes: totalsRaw.stat.readSectors*512, txBytes: totalsRaw.stat.writeSectors*512};  \n        }\n        catch{\n            totals = {rxBytes: 0, txBytes: 0};\n        }\n\n        if (!Helper.Common.objectIsNotEmpty(totals))\n            totals = {rxBytes: 0, txBytes: 0};\n\n        let format = x => x > 0 ? Helper.Common.formatBytes(x) : \"\";\n        // totals = {rxBytes: 0, txBytes: 0};\n\n        // <.container><.top><.left><.center><.right></.container>\n        return (<React.Fragment>\n            <div style={this.dd.container}>&nbsp;\n                {this.renderMountPathHeader()}\n            </div>\n            <div style={this.dd.container2}>&nbsp;\n                <div style={this.dd.left}><span title={\"TOTAL RECEIVED\"}><FontAwesomeIcon icon={iconSent} /> {format(totals.rxBytes)}</span></div>\n                <div style={this.dd.center}>{this.props.name.toUpperCase()}</div>\n                <div style={this.dd.right}><span title={\"TOTAL SENT\"}>{format(totals.txBytes)} <FontAwesomeIcon icon={iconReceived} /></span></div>\n            </div>\n        </React.Fragment>)\n    };\n\n}\n\n\nBlockStatDevChartHeader.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { BlockStatChart } from './BlockStatChart';\nimport { BlockStatSecondChart } from './BlockStatSecondChart';\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport * as Helper from \"../Helper\";\nimport * as Enumerable from \"linq-es2015\";\nimport {NetDevChart} from \"./NetDevChart\";\nimport {BlockStatDevChartHeader} from \"./BlockStatChartHeader\";\n\nexport class BlockChartContainer_V2 extends Component {\n    static displayName = BlockChartContainer_V2.name;\n\n    timerId = null;\n\n    constructor(props) {\n        super(props);\n\n        this.tryInitBlockChartList = this.tryInitBlockChartList.bind(this);\n        this.tryBuildBlockChartList = this.tryBuildBlockChartList.bind(this);\n\n        this.state = {\n            visibleDeviceNames: [],\n            blockChartList: this.tryBuildBlockChartList(),\n        };\n        \n        Helper.toConsole(`BlockChartContainer_V2::ctor. this.state.blockChartList`, this.state.blockChartList);\n    }\n\n    componentDidMount() {\n        let isAlreadyBound = this.state.blockChartList !== null;\n        if (!isAlreadyBound)\n            this.timerId = setInterval(this.waiterTick.bind(this), 100);\n    }\n\n    componentWillUnmount() {\n        if (this.timerId !== null)\n            clearInterval(this.timerId);\n    }\n\n    waiterTick()\n    {\n        this.tryInitBlockChartList();\n    }\n\n    // used by timer callback\n    tryInitBlockChartList()\n    {\n        if (this.state.blockChartList === null)\n        {\n            let blockChartList = this.tryBuildBlockChartList();\n            if (blockChartList !== null) {\n                this.setState({\n                    blockChartList: blockChartList,\n                });\n            }\n        }\n    }\n    \n    tryBuildBlockChartList()\n    {\n        let globalDataSource = dataSourceStore.getDataSource();\n        let [hasBlock, block] = Helper.Common.tryGetProperty(globalDataSource, \"block\");\n        if (hasBlock) {\n            let blockNames = globalDataSource.block.blockNames.map((x) => {\n                return {name: x};\n            });\n\n            return blockNames;\n        }\n        \n        return null;\n    }\n\n\n    renderLoading() {\n        let style = {textAlign: \"center\", paddingBottom: NetDevChart.ChartSize.height/2, paddingTop: NetDevChart.ChartSize.height/2, width: NetDevChart.ChartSize.width};\n        return (\n            <h6 id=\"BlockCharts_is_Waiting_for_connection\" style={style}>\n                Waiting for curved lines\n            </h6>\n        )\n    }\n\n    render () {\n        return (\n            <div id=\"BlockChartContainer_V2\">\n                {this.state.blockChartList === null ? this.renderLoading() : this.renderNormal()}\n            </div>\n        );\n    }\n\n    renderNormal() {\n        return (\n            <div id=\"BlockCharts\">\n                {this.state.blockChartList.map(netChart =>\n                    <div className=\"TheDiskLiveChart\" key={netChart.name}>\n                        <BlockStatDevChartHeader name={netChart.name}/>\n                        <BlockStatChart name={netChart.name} />\n                        <BlockStatSecondChart name={netChart.name} />\n                        <br/>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport dataSourceStore from \"../stores/DataSourceStore\";\nimport * as Helper from \"../Helper\";\nimport DataSourceStore from \"../stores/DataSourceStore\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faServer } from '@fortawesome/free-solid-svg-icons'\nimport { faNetworkWired } from '@fortawesome/free-solid-svg-icons'\nimport { faMemory } from '@fortawesome/free-solid-svg-icons'\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n\nconst iconStyle = {width:24, minWidth: 24, display: \"inline-block\", marginRight: 8};\nconst iconUnknown = <span style={iconStyle}>&nbsp;</span>;\nconst iconBlock = <FontAwesomeIcon style={iconStyle} icon={faServer}/>;\nconst iconRam = <FontAwesomeIcon style={iconStyle} icon={faMemory}/>;\nconst iconNet = <FontAwesomeIcon style={iconStyle} icon={faNetworkWired}/>;\nconst iconSwap = <FontAwesomeIcon style={iconStyle} icon={faFile}/>;\n\nexport class MountsList extends React.Component {\n    // static displayName = MountsList.name;\n\n    timerId = null;\n\n    constructor(props) {\n        super(props);\n\n        this.tryInitMountsSource = this.tryInitMountsSource.bind(this);\n        this.tryBuildMountsSource = this.tryBuildMountsSource.bind(this);\n\n        this.state = {\n            mounts: this.tryBuildMountsSource(),\n        };\n\n    }\n\n    componentDidMount() {\n        let isAlreadyBound = this.state.mounts !== null;\n        if (!isAlreadyBound)\n            this.timerId = setInterval(this.waiterTick.bind(this), 1000);\n\n        let x = DataSourceStore.on('storeUpdated', this.tryInitMountsSource);\n    }\n\n    componentWillUnmount() {\n        DataSourceStore.removeListener('storeUpdated', this.tryInitMountsSource);\n        \n        if (this.timerId !== null)\n            clearInterval(this.timerId);\n    }\n\n    waiterTick()\n    {\n        if (this.state.mounts === null)\n            this.tryInitMountsSource();\n    }\n\n    // used by timer callback\n    tryInitMountsSource()\n    {\n        if (this.state.mounts === null || true)\n        {\n            let mounts = this.tryBuildMountsSource();\n            if (mounts !== null) {\n                this.setState({\n                    mounts: mounts,\n                });\n            }\n        }\n    }\n\n    tryBuildMountsSource()\n    {\n        let globalDataSource = dataSourceStore.getDataSource();\n        let mounts = Helper.Disks.getOptionalMountsProperty(globalDataSource);\n        return mounts == null ? [] : mounts;\n    }\n\n    getTrProps = (state, rowInfo, instance) => {\n        // rowInfo.row - fields from RwactTable\n        // row.original - fields from data (dataSource)\n        let suffix = \"\";\n        if (rowInfo !== undefined && rowInfo.original !== undefined) {\n            if (rowInfo.original.isTmpFs) {\n                suffix = \"ram\";\n            } else if (rowInfo.original.isBlockDevice) {\n                suffix = \"block\";\n            } else if (rowInfo.original.isTmpFs) {\n                suffix = \"ram\";\n            } else if (rowInfo.original.isNetworkShare) {\n                suffix = \"network\";\n            } else if (rowInfo.original.isSwap) {\n                suffix = \"swap\";\n            }\n        }\n        return { className: `disk-kind-${suffix}`};\n    };\n\n    getNoDataProps()\n    {\n        return { className: \"disk-no-data\" };\n    }\n\n    \n    \n    mountPathCell(rowInfo){\n        let icon = iconUnknown;\n        if (rowInfo.original.isBlockDevice) {\n            icon = iconBlock; \n        } else if (rowInfo.original.isTmpFs) {\n            icon = iconRam;\n        } else if (rowInfo.original.isNetworkShare) {\n            icon = iconNet;\n        }else if (rowInfo.original.isSwap) {\n            icon = iconSwap;\n        }\n        \n        return <span>{icon}{rowInfo.original.mountEntry.mountPath}</span>;\n    }\n\n    renderNormal() {\n        let pageSize = this.state.mounts.length === 0 ? 6 : Math.max(this.state.mounts.length, 1);\n        let sizeCell = row => <span>{row.value ? Helper.Common.formatBytes(row.value) : \"\"}</span>;\n        let rightAlign = {textAlign: \"right\" };\n        let centerAlign = {textAlign: \"center\" };\n\n        let rows = this.state.mounts;\n        const getColumnWidth = (minWidth, accessor, headerText) => {\n            const maxWidth = 400;\n            const magicSpacing = 10;\n            const getValue = row => typeof accessor === \"function\" ? accessor(row) : row[accessor];\n            const cellLength = Math.max(\n                ...rows.map(row => (`${getValue(row)}` || '').length),\n                headerText.length,\n                minWidth / magicSpacing\n            );\n            return Math.min(maxWidth, cellLength * magicSpacing)\n        };\n        \n        return (\n            <div id=\"Mounts\" style={{marginTop: 12}}>\n                <ReactTable\n                    data={this.state.mounts}\n                    noDataText=\"Waiting for cells\"\n                    showPagination={false}\n                    defaultPageSize={pageSize}\n                    pageSizeOptions={[pageSize]}\n                    pageSize={pageSize}\n                    getTrProps={this.getTrProps}\n                    getNoDataProps={this.getNoDataProps}\n\n                    columns={[\n                        {\n                            id: \"mountPath\",\n                            Header: \"Mount Path\",\n                            accessor: x => x.mountEntry.mountPath,\n                            // minWidth: 256,\n                            Cell: this.mountPathCell,\n                            minWidth: getColumnWidth(80, x => x.mountEntry.mountPath, \"Mount Path a1a2a3a4a5\"),\n                        },\n                        {\n                            id: \"device\",\n                            Header: \"Device\",\n                            accessor: x => x.mountEntry.device,\n                            // minWidth: 256,\n                            minWidth: getColumnWidth(80,x => x.mountEntry.device, \"Device\"),\n                        },\n                        {\n                            id: \"fs\",\n                            Header: \"FS\",\n                            accessor: x => x.mountEntry.fileSystem,\n                            minWidth: 100,\n                        },\n                        {\n                            id: \"ro\",\n                            Header: \"R/O\",\n                            accessor: x => x.freeSpace > 0 ? \"\" : \"R/O\",\n                            style: centerAlign,\n                            width: 60,\n                        },\n                        {\n                            id: \"totalSize\",\n                            Header: \"Size\",\n                            accessor: \"totalSize\",\n                            style: rightAlign,\n                            Cell: sizeCell,\n                            // minWidth: 120,\n                            minWidth: getColumnWidth(80,\"totalSize\", \"Size\"),\n                        },\n                        {\n                            Header: \"Free\",\n                            accessor: \"freeSpace\",\n                            style: rightAlign,\n                            Cell: sizeCell,\n                            // minWidth: 120,\n                            minWidth: getColumnWidth(80,\"freeSpace\", \"Free\"),\n                        },\n\n                    ]}\n                    \n                    defaultSorted={[\n                        {\n                            id: \"mountPath\",\n                            desc: false\n                        }\n                    ]}\n                    defaultPageSize={pageSize}\n                    className=\"-highlight\"\n                />\n                \n                \n                <div className=\"disk-legend\">\n                    {/* Legend:&nbsp;&nbsp; */}\n                    <span className=\"disk-legend-item disk-kind-block\">{iconBlock}&nbsp;Block&nbsp;device</span>\n                    <span className=\"disk-legend-item disk-kind-network\">{iconNet}&nbsp;Network&nbsp;share</span>\n                    <span className=\"disk-legend-item disk-kind-ram\">{iconRam}&nbsp;RAM&nbsp;disk</span>\n                    <span className=\"disk-legend-item disk-kind-swap\">{iconSwap}&nbsp;SWAP&nbsp;disk</span>\n                </div>\n\n            </div>\n        );\n    }\n\n    render () {\n        if (process.env.NODE_ENV === \"test\") console.log(\"MountsList.render()\");\n        return this.renderNormal();\n    }\n\n}","import * as DataSourceActions from './DataSourceActions'\nimport * as signalR from '@microsoft/signalr'\nimport * as Helper from \"../Helper\";\nimport DataSourceStore from \"./DataSourceStore\";\n\nclass DataSourceListener {\n    \n    constructor()\n    {\n        this.watchdogTick = this.watchdogTick.bind(this);\n        this.markConnectionState = this.markConnectionState.bind(this);\n        this.tryToConnect = this.tryToConnect.bind(this);\n        this.applyDocumentTitle = this.applyDocumentTitle.bind(this);\n        \n        this.isConnected = false;\n        this.needConnection = false;\n        this.isConnecting = false;\n\n        let hub = new signalR.HubConnectionBuilder().withUrl(\"/api-hubs/dataSourceHub\");\n        // hub.build().state\n        this.connection = hub.build();\n        this.connection.on(\"ReceiveDataSource\", dataSource => {\n            Helper.notifyTrigger(\"MetricsArriving\", \"true\");\n\n            let [hasMessageId, messageId] = Helper.Common.tryGetProperty(dataSource, \"messageId\");\n            messageId = messageId || \"<unknown-message>\";\n\n            Helper.toConsole(`DataSource RECEIVED [${messageId}] at ` + (new Date().toLocaleTimeString()), dataSource);\n            try {\n                DataSourceActions.DataSourceUpdated(dataSource);\n                this.applyDocumentTitle(dataSource);\n                Helper.notifyTrigger(\"MetricsArrived\", \"true\");\n            } catch(err){\n                console.error(err);\n            }\n        });\n\n        this.connection.onclose(error => {\n            // 1006: server terminated\n            console.warn(\"SignalR connection closed\" + (error ? \" with error\" : \"\"));\n            this.markConnectionState(false);\n            this.isConnecting = false;\n            DataSourceActions.ConnectionStatusUpdated(false);\n        });\n\n        this.timerId = setInterval(this.watchdogTick, 1000);\n\n        let apiUrl = 'api/BriefInfo';\n        try {\n            fetch(apiUrl)\n                .then(response => {\n                    console.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    console.log(response);\n                    console.log(response.body);\n                    return response.ok ? response.json() : {error: response.status, details: response.json()}\n                })\n                .then(briefInfo => {\n                    this.applyDocumentTitle(briefInfo);\n                    DataSourceActions.BriefUpdated(briefInfo);\n                    Helper.notifyTrigger(\"BriefInfoArrived\", \"wow!\");\n                    Helper.toConsole(\"BRIEF INFO\", briefInfo);\n                })\n                .catch(error => console.log(error));\n        }\n        catch(err)\n        {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n\n\n    }\n    \n    first = true;\n    applyDocumentTitle(message)\n    {\n        if (this.first) {\n            try {\n                let hostname = Helper.System.getHostName(message);\n                if (hostname !== null) {\n                    document.title = `W3 Top (${hostname})`;\n                    this.first = false;\n                }\n            }catch{}\n        }\n    }\n\n    start() {\n        this.tryToConnect();\n        this.needConnection = true;\n    }\n\n    stop()\n    {\n        console.log(\"Closing SignalR connection\");\n        this.connection.stop();\n        this.needConnection = false;\n        DataSourceActions.ConnectionStatusUpdated(false);\n        // clearInterval(this.timerId);\n    }\n\n\n    // available for callbacks\n    markConnectionState(newIsConencted)\n    {\n        this.isConnected = newIsConencted;\n    }\n\n    // available for callbacks\n    tryToConnect()\n    {\n        // Helper.toConsole(\"tryToConnect()...\", \"sure\");\n        this.isConnecting = true;\n        this.connection.start().then(() => {\n            DataSourceActions.ConnectionStatusUpdated(true);\n            this.markConnectionState(true);\n            console.log(\"SignalR connection established\");\n        }).catch(err => {\n            this.isConnecting = false;\n            this.markConnectionState(false);\n            console.warn(\"SignalR connection error. \" + err.toString());\n            DataSourceActions.ConnectionStatusUpdated(false);\n        });\n    }\n\n    // available for callbacks\n    watchdogTick()\n    {\n        if (this.isConnected !== this.needConnection)\n            console.log(`%c[watchdog] isConnected: ${this.isConnected},\n           needConnection: ${this.needConnection},\n           isConnecting: ${this.isConnecting},\n           state: ${this.connection.state}`, 'color:#4615b2');\n        \n        if (this.needConnection) {\n            if (!this.isConnected && !this.isConnecting) {\n                if (this.connection.state === \"Disconnected\" || this.connection.state === 0) {\n                    this.tryToConnect();\n                }\n            }\n        }\n        else\n        {\n            if (this.isConnected) {\n                this.markConnectionState(false);\n                this.isConnecting = false;\n                this.connection.stop();\n            }\n        }\n    }\n    \n}\n\nconst dataSourceListener = new DataSourceListener();\nexport default dataSourceListener;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons'\n\nimport ErrorOutlinedIcon  from \"@material-ui/icons/ErrorOutlineOutlined\"\n\nconst iconStyle = {width:25, minWidth: 25, display: \"inline-block\", marginRight: 8, textAlign: \"center\", };\nconst iconUnknown = <span style={iconStyle}>&nbsp;</span>;\n// const iconPending = <span style={{color:\"#888\"}}><FontAwesomeIcon style={iconStyle} icon={faEllipsisH} /></span>;\nconst iconPending = <span style={{color:\"#555\"}}><span style={iconStyle}>&middot;&middot;&middot;</span></span>;   \nconst iconInProgress = <FontAwesomeIcon style={iconStyle} icon={faArrowAltCircleRight} />;\nconst iconComplete = <FontAwesomeIcon style={iconStyle} icon={faCheck} />;\nconst iconError = <span style={{...iconStyle, color: \"#FF0F17\" }}><ErrorOutlinedIcon/></span>;\nconst iconSkipped = <span style={{...iconStyle, color:\"#FF9B9F\"}}>?</span>;\n\n\nexport const BenchmarkStepStatusIcon = function(props) {\n    // for keys see enum ProgressStepState\n    const statuses = {Pending: iconPending, InProgress: iconInProgress, Completed: iconComplete, Error: iconError, Skipped: iconSkipped};\n    let icon = statuses[props.status];\n    if (!icon) icon = iconUnknown;\n    return icon;\n}\n","import * as Helper from \"../../Helper\";\nimport React from \"react\";\nimport {BenchmarkStepStatusIcon} from \"./BenchmarkStepStatusIcon\";\nimport {withStyles} from \"@material-ui/core\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst ProgressStyle = theme => ({\n    root: {\n        margin: theme.spacing.unit * 0,\n        // color: '#777',\n        animationDuration: \"1ms\",\n        height: \"1px\",\n    },\n    colorPrimary: {backgroundColor: '#EEE'},\n    barColorPrimary: {backgroundColor: '#888'}\n});\n\nconst LinearProgress2 = withStyles(ProgressStyle)(LinearProgress);\n\nconst BenchmarkProgressTable = function(props) {\n    const progress = props.progress;\n    const pro = progress ? progress : {isCompleted: false, steps: []};\n    const formatSpeed = (x) => {let ret = Helper.Common.formatBytes(x,1); return ret === null ? \"\" : `${ret}/s`};\n    const statuses = {Pending: \"⚪\", InProgress: \"⇢\", Completed: \"⚫\"};\n    const formatStepStatus = (status) => statuses[status];\n    const progressValue = step => step.perCents >= 0.99999 ? 99.999 : step.perCents * 100.0;\n    const hasMetrics = step => (step.seconds > 0 && step.avgBytesPerSecond > 0) || step.canHaveMetrics;\n    return (\n        <React.Fragment>\n            <center>\n                <table className=\"benchmark-progress\" border=\"0\" cellPadding={0} cellSpacing={0}><tbody>\n                {pro.steps.map((step, stepIndex) => (\n                    <React.Fragment key={`${stepIndex}:${step.name}`}>\n                        <tr>\n                            <td className=\"step-status\">\n                                <BenchmarkStepStatusIcon status={step.state}/>\n                                {/* formatStepStatus(step.state) */}\n                            </td>\n                            <td className=\"step-name\" colSpan={hasMetrics(step) ? 1 : 3}>\n                                {step.name}\n                            </td>\n                            {hasMetrics(step) ? ( <React.Fragment>\n                                <td className=\"step-duration\">{step.seconds > 0 ? `${step.duration}` : \"\\xA0\" }</td>\n                                <td className=\"step-speed\">{step.avgBytesPerSecond > 0 ? `${formatSpeed(step.avgBytesPerSecond)}` : \"\\xA0\"}</td>\n                            </React.Fragment>) : (\"\")}\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td colSpan=\"3\">\n                                <LinearProgress2 value={progressValue(step)} variant={\"determinate\"} className={\"step-progress\"}/>\n                            </td>\n                        </tr>\n                    </React.Fragment>\n                ))}\n                </tbody></table>\n            </center>\n        </React.Fragment>\n    )\n};\n\nexport default BenchmarkProgressTable;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faServer } from '@fortawesome/free-solid-svg-icons'\nimport { faNetworkWired } from '@fortawesome/free-solid-svg-icons'\nimport { faMemory } from '@fortawesome/free-solid-svg-icons'\nimport { faFile } from '@fortawesome/free-regular-svg-icons'\n// const iconStyle = {width:16, minWidth: 16, display: \"inline-block\", marginRight: 0, fontSize_ignore: 6};\nconst chipStyle = {};\n\nconst chipIcons = {\n    Unknown: <span style={chipStyle}>&nbsp;</span>,\n    Block: <FontAwesomeIcon style={chipStyle} icon={faServer}/>,\n    Ram: <FontAwesomeIcon style={chipStyle} icon={faMemory}/>,\n    Net: <FontAwesomeIcon style={chipStyle} icon={faNetworkWired}/>,\n    Swap: <FontAwesomeIcon style={chipStyle} icon={faFile}/>\n};\n\nexport default function DiskAvatarContent (props){\n    if (props.disk.isTmpFs) return chipIcons.Ram;\n    if (props.disk.isBlockDevice) return chipIcons.Block;\n    if (props.disk.isNetworkShare) return chipIcons.Net;\n    if (props.disk.isSwap) return chipIcons.Swap;\n    return chipIcons.Unknown;\n}\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"svgg\"\n}, React.createElement(\"path\", {\n  id: \"path0\",\n  d: \"M139.734 12.909 C 126.405 16.497,116.398 25.652,112.191 38.107 L 110.578 42.885 97.745 42.885 C 80.473 42.885,78.752 43.877,78.752 53.838 L 78.752 58.480 64.881 58.480 C 44.632 58.480,37.355 60.777,28.013 70.119 C 22.512 75.620,19.515 80.885,17.568 88.468 C 15.764 95.492,15.764 302.169,17.568 309.193 C 21.289 323.686,31.870 334.266,46.363 337.988 C 53.083 339.714,164.984 339.789,168.308 338.070 C 173.225 335.527,173.440 326.993,168.645 324.656 C 167.878 324.282,140.760 323.801,108.382 323.587 L 49.513 323.197 45.083 321.021 C 40.064 318.557,36.401 314.779,34.001 309.591 L 32.359 306.043 32.359 198.830 L 32.359 91.618 34.534 87.188 C 39.599 76.874,44.893 74.545,64.034 74.210 L 78.556 73.955 78.902 80.837 C 79.456 91.868,83.417 98.549,91.866 102.698 L 96.296 104.873 148.928 104.873 L 201.559 104.873 205.990 102.698 C 214.539 98.499,218.447 92.027,218.953 81.227 L 219.295 73.955 233.819 74.210 C 250.715 74.505,254.737 75.740,260.089 82.271 C 266.080 89.583,265.887 87.553,265.887 143.127 C 265.887 199.807,265.750 198.830,273.684 198.830 C 281.610 198.830,281.481 199.741,281.481 143.652 C 281.481 82.638,281.309 81.545,269.855 70.119 C 260.488 60.774,253.217 58.480,232.975 58.480 L 219.103 58.480 219.103 53.762 C 219.103 43.934,217.265 42.885,200.036 42.885 L 187.280 42.885 185.904 38.510 C 179.992 19.715,158.573 7.838,139.734 12.909 M159.450 29.983 C 166.415 33.391,172.320 42.338,172.320 49.484 C 172.320 57.230,174.914 58.480,190.994 58.480 L 203.509 58.480 203.509 71.423 L 203.509 84.366 200.858 87.018 L 198.207 89.669 149.321 89.669 C 88.635 89.669,94.347 91.617,94.347 70.918 L 94.347 58.480 106.786 58.480 C 122.537 58.480,125.536 57.137,125.536 50.083 C 125.536 33.485,144.109 22.478,159.450 29.983 M67.142 137.540 C 62.542 140.090,61.932 145.518,65.809 149.396 L 68.460 152.047 148.499 152.047 C 216.247 152.047,228.867 151.876,230.686 150.936 C 235.875 148.252,235.875 140.247,230.686 137.563 C 227.600 135.967,70.020 135.945,67.142 137.540 M67.142 184.324 C 62.542 186.874,61.932 192.302,65.809 196.179 L 68.460 198.830 148.499 198.830 C 216.247 198.830,228.867 198.660,230.686 197.719 C 235.875 195.036,235.875 187.030,230.686 184.347 C 227.600 182.751,70.020 182.729,67.142 184.324 M67.142 231.108 C 62.542 233.657,61.932 239.086,65.809 242.963 L 68.460 245.614 140.701 245.614 C 219.166 245.614,216.152 245.780,218.172 241.347 C 219.995 237.347,218.680 232.986,215.092 231.131 C 212.008 229.536,70.017 229.514,67.142 231.108 M276.413 231.260 C 253.738 236.331,235.912 252.490,227.993 275.155 L 226.227 280.206 222.081 281.242 C 176.809 292.545,177.439 359.611,222.907 369.249 C 229.412 370.628,338.688 370.881,346.979 369.537 C 382.152 363.832,401.313 322.960,383.871 290.838 C 376.805 277.824,362.155 266.680,349.442 264.647 C 346.552 264.185,345.852 263.610,342.992 259.355 C 328.274 237.456,300.714 225.826,276.413 231.260 M299.025 246.783 C 312.000 249.498,324.954 258.992,331.659 270.701 C 335.555 277.505,336.507 278.270,342.225 279.190 C 378.505 285.033,387.189 333.450,354.981 350.316 C 346.303 354.860,345.954 354.881,283.041 354.622 L 225.731 354.386 220.833 352.124 C 192.480 339.031,202.029 295.517,233.255 295.517 C 236.746 295.517,240.531 291.441,241.221 286.940 C 245.347 260.012,272.407 241.214,299.025 246.783 \",\n  fillRule: \"evenodd\"\n}));\n\nvar SvgCopy2CloudV2 = function SvgCopy2CloudV2(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    width: 400,\n    height: 379.7270955165692,\n    viewBox: \"0, 0, 400,379.7270955165692\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCopy2CloudV2, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/copy2cloud-v2.aa0b7278.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"svgg\"\n}, React.createElement(\"path\", {\n  id: \"path0\",\n  d: \"M305.176 19.639 C 268.209 24.752,244.120 58.517,249.275 97.995 L 249.689 101.166 229.814 112.535 C 180.338 140.835,130.628 169.081,129.611 169.471 C 128.998 169.706,126.392 168.185,123.821 166.091 C 87.564 136.559,31.021 154.987,18.503 200.414 C 16.403 208.033,16.415 227.651,18.524 235.197 C 31.243 280.711,87.548 299.065,123.821 269.520 C 126.392 267.426,129.014 265.910,129.646 266.153 C 130.740 266.573,187.334 298.730,229.814 323.069 L 249.689 334.457 249.275 337.622 C 239.059 415.705,342.174 448.505,374.663 377.507 C 403.727 313.994,325.237 254.900,271.614 299.924 C 268.025 302.938,265.223 304.703,264.480 304.418 C 263.808 304.160,253.869 298.591,242.395 292.042 C 230.920 285.494,206.625 271.658,188.406 261.296 C 170.186 250.934,153.185 241.198,150.625 239.660 L 145.971 236.864 147.179 232.096 C 147.892 229.285,148.387 223.422,148.387 217.805 C 148.387 212.189,147.892 206.326,147.179 203.514 L 145.971 198.747 150.625 195.952 C 153.185 194.415,171.491 183.933,191.304 172.659 C 211.118 161.385,235.407 147.551,245.280 141.917 C 255.153 136.282,263.788 131.459,264.467 131.198 C 265.227 130.907,267.982 132.637,271.614 135.687 C 305.425 164.075,356.300 152.627,374.663 112.497 C 396.147 65.548,356.483 12.544,305.176 19.639 \",\n  fillRule: \"evenodd\"\n}));\n\nvar SvgShareIcon = function SvgShareIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    width: 400,\n    height: 435.61076604554864,\n    viewBox: \"0, 0, 400,435.61076604554864\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgShareIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Share-Icon.320854e0.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"svgg22\"\n}, React.createElement(\"path\", {\n  id: \"path022\",\n  d: \"M257.571 54.050 C 236.531 58.827,221.549 72.869,216.176 92.846 C 213.747 101.877,214.488 116.398,217.757 123.842 C 218.126 124.682,210.225 129.663,174.733 150.966 L 131.256 177.062 127.972 173.966 C 90.666 138.793,29.618 172.238,39.930 222.199 C 48.592 264.168,101.012 279.099,129.844 247.808 C 135.107 242.096,132.440 241.680,150.967 251.102 C 211.859 282.069,216.881 284.707,216.554 285.561 C 210.062 302.478,218.270 328.683,233.974 341.180 C 268.942 369.005,319.678 344.787,319.592 300.313 C 319.500 252.503,262.403 229.857,229.069 264.410 L 224.701 268.938 199.382 256.042 C 185.456 248.949,167.031 239.536,158.438 235.124 C 140.536 225.934,142.336 228.123,143.739 217.246 C 144.645 210.219,144.031 203.691,141.781 196.405 C 140.526 192.342,140.522 192.201,141.651 191.456 C 142.290 191.035,161.775 179.294,184.951 165.365 L 227.090 140.040 231.826 144.551 C 264.670 175.836,319.504 151.712,319.592 105.938 C 319.655 73.006,288.580 47.009,257.571 54.050 M273.479 71.303 C 294.299 75.106,307.493 97.591,300.390 117.160 C 290.347 144.828,254.394 149.517,238.180 125.274 C 221.063 99.682,243.237 65.777,273.479 71.303 M100.259 178.111 C 126.590 184.846,135.369 217.442,116.008 236.581 C 96.512 255.853,64.300 246.901,57.503 220.323 C 50.970 194.782,74.523 171.529,100.259 178.111 M277.813 266.943 C 302.824 274.742,310.535 306.469,291.940 325.065 C 276.255 340.750,250.427 338.273,238.163 319.908 C 219.844 292.476,246.312 257.119,277.813 266.943 \",\n  fillRule: \"evenodd\"\n}));\n\nvar SvgShareOutlinedIcon = function SvgShareOutlinedIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"svg22\",\n    width: 400,\n    height: 400,\n    viewBox: \"0, 0, 400,400\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgShareOutlinedIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Share-Outlined-Icon.0e8e4ed7.svg\";\nexport { ForwardRef as ReactComponent };","// polyfill for TextDecoder/Encoder https://stackoverflow.com/a/11411402/864690\nimport base32Encode from \"base32-encode\"\nimport base32Decode from \"base32-decode\"\n// PREV\n// import {TextDecoder, TextEncoder} from \"text-encoding\"\nimport * as UTF8 from \"utf8\" \nconst queryString = require('query-string');\n\n/*\nwindow.location properties:\n    hostname: \"localhost\"\n    host: \"localhost:5010\"\n    search: \"?sdfsdfsdf\"\n    hash: \"#45646\"\n    href: \"http://localhost:5010/disk-benchmark?sdfsdfsdf#45646\"\n    origin: \"http://localhost:5010\"\n    pathname: \"/disk-benchmark\"\n    port: \"5010\"\n    protocol: \"http:\"\n */\n\nconst fakeDiskBenchmarkResult =\n    {\n        \"token\":\"88ffbad1-0f1a-4555-8285-d4bdd6790869\",\n        \"createdAt\":\"2021-06-14T16:42:14.7052295\",\n        \"mountPath\":\"/transient-builds\",\n        \"fileSystem\":\"ext4\",\n        \"engine\":\"libaio\",\n        \"engineVersion\":\"2.21\",\n        \"workingSetSize\":1048576,\n        \"o_Direct\":\"True\",\n        \"allocate\":382909138.9788223,\n        \"allocateCpuUsage\":{\n            \"user\":0.0,\n            \"kernel\":1.6096720548807608\n        },\n        \"seqRead\":1633664918.2644455,\n        \"seqReadCpuUsage\":{\n            \"user\":0.0,\n            \"kernel\":0.7140995472778577\n        },\n        \"seqWrite\":1999622948.9514863,\n        \"seqWriteCpuUsage\":{\n            \"user\":0.010899906593854099,\n            \"kernel\":0.7651999231575354\n        },\n        \"randomAccessBlockSize\":4096,\n        \"threadsNumber\":16,\n        \"randRead1T\":40894228.84416376,\n        \"randRead1TCpuUsage\":{\n            \"user\":0.0,\n            \"kernel\":0.6369994434977012\n        },\n        \"randWrite1T\":38587337.604287215,\n        \"randWrite1TCpuUsage\":{\n            \"user\":0.005999997772728099,\n            \"kernel\":0.646799346677102\n        },\n        \"randReadNT\":99194725.49338001,\n        \"randReadNTCpuUsage\":{\n            \"user\":0.010999746062534415,\n            \"kernel\":0.9659997313705755\n        },\n        \"randWriteNT\":97412166.35418832,\n        \"randWriteNTCpuUsage\":{\n            \"user\":0.0,\n            \"kernel\":0.9919996614756711\n        }\n    };\n\nexport class SharedDiskBenchmarkFlow\n{\n\n    // for local debug: &debug=fake-shared-benchmark\n    static isSharedBenchmarkResult() {\n        const loc = window && window.location ? window.location : null;\n        if (!loc) return false;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (loc.search && loc.search.indexOf(\"fake-shared-benchmark\") >= 0)\n                return true;\n        }\n\n        return loc.hostname === \"my-drive.github.io\";\n    }\n    \n    static tryParse()\n    {\n        const loc = window && window.location ? window.location : null;\n        if (!loc) return null;\n\n        const queryParameters = queryString.parse(loc.search);\n        const version = queryParameters.v;\n        const performance = queryParameters.performance;\n        if (version === \"2\" && performance) {\n            const base32encoded = performance;\n            try {\n                const bytes = base32Decode(base32encoded, 'RFC4648');\n                const jsonString = this.utf8Decode(bytes);\n                const ret = JSON.parse(jsonString);\n                return ret;\n            }\n            catch (e) {\n                return null;\n            }\n        }\n        // WORKS\n        // return fakeDiskBenchmarkResult;\n    }\n    \n    \n\n    // https://my-drive.github.io/?vn    static buildLink(selectedRow) {\n        const jsonString = JSON.stringify(selectedRow);\n        const uint8array = this.utf8Encode(jsonString);\n        const safeUrlEncoded = base32Encode(uint8array, 'RFC4648', { padding: false });\n        const ret = `https://my-drive.github.io/?v=2&performance=${safeUrlEncoded}`;\n        return ret;\n    }\n\n    // https://www.npmjs.com/package/utf8\n    static utf8Decode(argBytesArray) {\n        // PREV\n        // const jsonString = new TextDecoder().decode(bytes);\n        // NEXT\n        console.log('argBytesArray', argBytesArray);\n        let view = new Uint8Array(argBytesArray);\n        console.log('buffer view', view);\n        let bytesString = '';\n        for(let i=0, len=view.byteLength; i<len; i++)\n            bytesString += String.fromCharCode(view[i]);\n        \n        const ret = UTF8.decode(bytesString);\n        return ret;\n    }\n    \n    static utf8Encode(argString) {\n        // PREV\n        // var uint8array = new TextEncoder().encode(jsonString);\n        // NEXT. Tested for /weїrd, but gzýppéd (tmpfs) mount point\n        const bytesString = UTF8.encode(argString);\n        let uint8array = new Uint8Array(bytesString.length);\n        for(let i=0; i<bytesString.length; i++)\n            uint8array[i] = bytesString.charCodeAt(i);\n        \n        return uint8array;\n    }\n}\n\n/*\n# HOWTO: unicode mount path\npath=\"/weїrd, but gzýppéd\"\nsudo mkdir \"$path\"\nsudo mount -t tmpfs -o size=512m tmpfs /mnt/ramdisk\nsudo chown -R user:user \"$path\"\n*/","import React from 'react';\nimport MomentFormat from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck, faCheckDouble} from '@fortawesome/free-solid-svg-icons'\nimport * as Helper from \"../../Helper\";\nimport { ReactComponent as CopyToCloudIconSvg } from '../../icons/copy2cloud-v2.svg';\nimport { ReactComponent as ShareIconSvg } from '../../icons/Share-Icon.svg';\nimport { ReactComponent as ShareOutlinedIconSvg } from '../../icons/Share-Outlined-Icon.svg';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {SharedDiskBenchmarkFlow} from \"../../SharedDiskBenchmarkFlow\";\nimport {ReactComponent as MainIconSvg} from \"../../icons/w3top-3.svg\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport classNames from \"classnames\";\n\nconst CopyToCloudIcon = ({size=16,color='black'}) => (<CopyToCloudIconSvg style={{width: size,height:size,fill:color,strokeWidth:'3px',stroke:color }} />);\nconst ShareIconSize=18;\nconst ShareIcon = ({size=ShareIconSize,color='#BBB'}) => (<ShareOutlinedIconSvg style={{width: size, height: size, fill:color,strokeWidth:'1px',stroke:color }} />);\n\n\nfunction selectNodeText(containerid) {\n    if (document.selection) { // IE\n        var range = document.body.createTextRange();\n        range.moveToElementText(document.getElementById(containerid));\n        range.select();\n    } else if (window.getSelection) {\n        var range = document.createRange();\n        range.selectNode(document.getElementById(containerid));\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n    }\n}\n\nfunction canAccessClipboard() {\n    const loc = window && window.location ? window.location : null;\n    if (!loc) return false;\n    return loc.protocol === \"https:\" || loc.hostname === \"localhost\";\n}\n\nfunction fallbackCopyTextToClipboard(text) {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n\n    // Avoid scrolling to bottom\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    try {\n        var successful = document.execCommand('copy');\n        var msg = successful ? 'successful' : 'unsuccessful';\n        console.log('Fallback: Copying text command was ' + msg);\n    } catch (err) {\n        console.error('Fallback: Oops, unable to copy', err);\n    }\n\n    document.body.removeChild(textArea);\n}\n\nfunction copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text);\n        return;\n    }\n    navigator.clipboard.writeText(text).then(function() {\n        console.log('Async: Copying to clipboard was successful!');\n    }, function(err) {\n        console.error('Async: Could not copy text: ', err);\n    });\n}\n\nconst widths = {\n    iops: 88,     // right aligned\n    spaceIops: 4,\n    iopsScale: 24, // static label IOPS, left aligned, grey\n    bandwidth: 88, // right aligned\n    spaceBandwidth: 4, // bandwidth ]---[ bandwidth units \n    bandwidthUnits: 66, // grey, left aligned\n    operation: 22, // vertical\n};\nwidths.panel = Object.values(widths).reduce((sum, current) => sum + current);\nwidths.panelSpace = 10;\nwidths.parameters = 24;\n\nconst heights = {\n    panel: 72,\n    panelSpace: 18,\n    metrics: 38, \n    share: 20,\n};\n\nconst isSharedBenchmarkResult = SharedDiskBenchmarkFlow.isSharedBenchmarkResult();\n\nconst styles = {\n    main: {\n        width: widths.panel * 2 + widths.panelSpace + widths.parameters + 2, // +2 for IE\n        height: 4 * heights.panel + (3+1) * heights.panelSpace + heights.share - (isSharedBenchmarkResult ? 16 : 0),\n        position: \"relative\",\n        // border: \"1px solid green\",\n    },\n    panel: {\n        position: \"absolute\",\n        width: widths.panel,\n        height: heights.panel,\n        margin: 0,\n        padding: 0,\n        backgroundColor: \"#EBECEF\",\n        border: \"1px solid #B7B9BF\",\n        color: \"black\",\n    },\n    copyToCloud: {\n        position: \"absolute\",\n        width: 50,\n        height: 50,\n        margin: 0,\n        padding: 0,\n        fontSize: 11,\n        left: -15,\n        top: -12,\n        textAlign: \"left\",\n        zIndex: 99999,\n    },\n\n    shareIcon: {\n        position: \"absolute\",\n        width: ShareIconSize+1, height: ShareIconSize+1,\n        margin: 0,\n        padding: 0,\n        left: -5, \n        textAlign: \"left\",\n        fontSize: \"1px\",\n        top: (heights.panel + heights.panelSpace) * 4 + 1,\n        zIndex: 99999,\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        // border: \"1px solid blue\",\n        \n    },\n    shareBar: {\n        position: \"absolute\",\n        width: 2*widths.panel + widths.panelSpace,\n        height: heights.share,\n        margin: 0,\n        padding: 2,\n        fontSize: 10,\n        left: widths.parameters,\n        top: (heights.panel + heights.panelSpace) * 4,\n        textAlign: \"center\",\n        zIndex: 99999,\n        border: \"1px solid #B7B9BF\",\n        color: \"#666\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        cursor: \"pointer\",\n    },\n    poweredByBar: {\n        position: \"absolute\",\n        width: 2*widths.panel + widths.panelSpace,\n        height: /*heights.share*/ 16,\n        margin: 0,\n        padding: 2,\n        fontSize: 10,\n        left: widths.parameters,\n        top: (heights.panel + heights.panelSpace) * 4 - 6,\n        textAlign: \"center\",\n        zIndex: 99999,\n        color: \"#666\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n    },\n    details: {\n        position: \"absolute\",\n        width: widths.panel,\n        height: heights.panel,\n        margin: 0,\n        padding: 0,\n        fontSize: 11,\n        left: widths.parameters,\n        textAlign: \"left\",\n        // backgroundColor: \"#EBECEF\",\n        // border: \"1px solid #B7B9BF\",\n        // color: \"black\",\n    },\n    verticalAction: {\n        position: \"absolute\",\n        zIndex: 9999,\n        left: widths.panel - 47,\n        top: 24,\n        // paddingTop: \"-30px\",\n        transform: \"translate(0px, 0px) rotate(-90deg)\",\n        whiteSpace: \"nowrap\",\n        display: \"block\",\n        // bottom: 0px, \n        width: heights.panel,\n        height: widths.operation,\n        lineHeight: `${widths.operation + 2}px`,\n        verticalAlign: \"middle\",\n        border: \"none\",\n        textAlign: \"center\",\n        fontSize: \"11px\", fontWeight: 'bold', letterSpacing: \"0.5px\",\n        backgroundColor: \"#B7B9BF\",\n        color: \"white\",\n    },\n    verticalParameters: {\n        position: \"absolute\",\n        // zIndex: 9999,\n        transform: \"translate(0px, 0px) rotate(-90deg)\",\n        whiteSpace: \"nowrap\",\n        display: \"block\",\n        width: heights.panel,\n        height: widths.parameters,\n        lineHeight: `${widths.parameters}px`,\n        verticalAlign: \"bottom\",\n        border: \"none\",\n        textAlign: \"center\",\n        fontSize: \"13px\", fontWeight: 'bold', letterSpacing: \"0.5px\",\n        backgroundColor: \"#CDAFCE\", // #CDAFCE \n        color: \"black\",\n    },\n}\n\nfunction Details({row, allowShare}) {\n    const full = row ? row : {};\n    const theRootSpan = _ => (<span style={{opacity:0.55}}>&nbsp;(the root)</span>);\n    return <React.Fragment>\n\n        {allowShare === true && canAccessClipboard() && <div style={styles.copyToCloud}>\n            <IconButton id={\"COPY_TO_CLOUD_ICON\"}\n                        color=\"inherit\"\n                        aria-label=\"Copy to cloud\"\n                        onClick={() => copyTextToClipboard(SharedDiskBenchmarkFlow.buildLink(row))}\n            >\n                <CopyToCloudIcon />\n            </IconButton>\n        </div>}\n        \n        <div style={styles.details}>\n            <div>Disk Benchmark</div>\n            <div style={{fontSize: 16}}>\n                {full.mountPath}{full.mountPath === '/' ? theRootSpan() : \"\"}\n                {full.fileSystem ? `, ${full.fileSystem}` : \"\"}\n            </div>\n            <div>\n                <span className='nowrap'>engine: {full.engine ? full.engine : \"default\"}</span>,{' '}\n                {full.engineVersion && <><span className='nowrap'>{`fio: v${full.engineVersion}`},</span>{' '}</>}\n                <span className='nowrap'>file system: {full.fileSystem}</span>\n                , <span className='nowrap'>working set: {Helper.Common.formatAnything(full.workingSetSize, 0, ' ', 'B')}</span>\n                , <span className='nowrap'>{full.o_Direct === \"True\" ? \"direct access: present\" : \"missing direct access\"}</span>            \n            </div>\n        </div>\n    </React.Fragment>\n}\nfunction ParametersPanel(yPosition, parameters) {\n    const left = widths.parameters - 56;\n    const top = 24 + yPosition * (heights.panel + heights.panelSpace);\n    const panelStyles = {...styles.verticalParameters, left: left, top: top};\n    return (\n        <React.Fragment>\n            <div style={panelStyles}>{parameters}</div>\n        </React.Fragment>\n    );\n}\nfunction CpuUsagePanel(cpuUsage) {\n    let format = num => (Math.round(num * 1000) / 10).toLocaleString(undefined, {useGrouping: true});\n    const style={\n        position: \"absolute\",\n        left: 0, width: widths.panel - widths.operation, top: 3 + heights.metrics, height: heights.metrics,\n        textAlign: \"center\",\n        fontSize: 12,\n        // color: 'grey',\n        // border: \"1px solid darkgreen\",\n    };\n    const cpu = {fontWeight: 'bold', fontSize: 13, color: 'black'};\n    return <div style={style}>cpu: <span style={cpu}>{format(cpuUsage.user)}</span>% user + <span style={cpu}>{format(cpuUsage.kernel)}</span>% kernel</div>;\n}\n\nfunction Metrics(text, align, left, right, style) {\n    style={...style,\n        position: \"absolute\",\n        left: left, width: right-left+1, top: 0, height: heights.metrics, \n        verticalAlign: \"bottom\",\n        lineHeight: `${heights.metrics+6}px`,\n        textAlign: align,\n        // border: \"1px solid darkred\",\n    };\n    return <div style={style}>{text}</div>;\n}\nfunction ActionPanel(xPosition, yPosition, action, bandwidth, blockSize, cpuUsage) {\n    const left = widths.parameters + xPosition * (widths.panel + widths.panelSpace);\n    const top = yPosition * (heights.panel + heights.panelSpace);\n    const panelStyles = {...styles.panel, left: left, top: top};\n    const metricsStyle={fontSize:16, fontWeight:900};\n    const unitsStyle={fontSize:14, opacity:\"0.55\"};\n    const iopsRaw = blockSize ? bandwidth / blockSize : undefined;\n    let iops = Helper.Common.formatStructured(iopsRaw, 1, \"\");\n    let iopsUnits = iopsRaw ? `${iops.units} IOPS` : \"\";\n    iopsUnits = bandwidth && blockSize ? \"IOPS\" : \"\";\n    let iops2 = \"\";\n    let format = (num,tens) => (Math.round(num * tens) / tens).toLocaleString(undefined, {useGrouping: true});\n    if (iopsRaw > 0) iops2 = format(iopsRaw, 1);\n    if (iopsRaw > 0 && iopsRaw < 299) iops2 = format(iopsRaw, 10);\n    // iops2 = \"17,234,567\";\n    let bw = Helper.Common.formatStructured(bandwidth, 2, \"B/s\");\n    // if (bw.value) bw.value = \"1,567.99\";\n    return (\n        <React.Fragment>\n            <div style={panelStyles}>\n                {Metrics(bandwidth ? /*iops.value*/ iops2 : \"\", \"right\", 0, widths.iops, metricsStyle)}\n                {Metrics(iopsUnits, \"left\", 4 + widths.iops, 4 + widths.iops + 60, unitsStyle)}\n                {Metrics(bw.value, \"right\", widths.iops + widths.iopsScale, widths.iops + widths.iopsScale + widths.bandwidth, metricsStyle)}\n                {Metrics(bw.units, \"left\", 4 + widths.iops + widths.iopsScale + widths.bandwidth, widths.iops + widths.iopsScale + widths.bandwidth + widths.bandwidthUnits, unitsStyle)}\n                {cpuUsage && CpuUsagePanel(cpuUsage)}\n                <div style={styles.verticalAction}>\n                    {action}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport class DiskBenchmarkResult extends React.Component {\n    static displayName =  DiskBenchmarkResult.name;\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            opened: props.opened,\n            selectedRow: props.selectedRow,\n        };\n        \n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const isOpenedChanged = prevProps.opened !== this.props.opened;\n        const isRowChanged = (prevProps.selectedRow ? prevProps.selectedRow.token : '') !== (this.props.selectedRow ? this.props.selectedRow.token : '');   \n        if (isOpenedChanged || isRowChanged) {\n            this.setState({\n                opened: this.props.opened,\n                selectedRow: this.props.selectedRow,\n            });\n            if (this.props.selectedRow) {\n                const link = SharedDiskBenchmarkFlow.buildLink(this.props.selectedRow);\n                Helper.toConsole(\"shared link\", link);\n            }\n        }\n    }\n\n    handleClose() {\n        if (!this.props.forced) {\n            this.setState({opened: false});\n            // alert(\"CLOSED, opened: \" + this.state.opened);\n        }\n    }\n\n    render() {\n        \n        const onSharedLinkClick = () => {\n            selectNodeText('SHARED_DRIVE_BENCHMARK_BAR');\n        };\n        // Helper.toConsole(`[DiskBenchmarkResult::render] this.state.opened=${this.state.opened}`);\n        const full = this.state.selectedRow ? this.state.selectedRow : {};\n        const blockSize = full.randomAccessBlockSize;\n        let textBlockSize = `${blockSize / 1024}K`;\n        if (blockSize >= 512 * 1024) textBlockSize = `${blockSize / 1024.0 / 1024}M`;\n        return (\n            <Dialog open={this.state.opened} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\" fullWidth={false} maxWidth={\"md\"}>\n                <DialogContent style={{textAlign: \"center\"}} >\n                    <div style={styles.main}>\n                        {!this.props.forced && <div style={styles.shareIcon}><ShareIcon /></div>}\n                        <Details row={this.state.selectedRow} allowShare={!this.props.forced} />\n                        {ActionPanel(1, 0, \"Allocate\", full.allocate, null, full.allocateCpuUsage)}\n                        {ActionPanel(0, 1, \"Read\", full.seqRead, null, full.seqReadCpuUsage)}\n                        {ActionPanel(1, 1, \"Write\", full.seqWrite, null, full.seqWriteCpuUsage)}\n                        {ActionPanel(0, 2, `Read ${textBlockSize}`, full.randRead1T, blockSize, full.randRead1TCpuUsage)}\n                        {ActionPanel(1, 2, `Write ${textBlockSize}`, full.randWrite1T, blockSize, full.randWrite1TCpuUsage)}\n                        {ActionPanel(0, 3, `Read ${textBlockSize}`, full.randReadNT, blockSize, full.randReadNTCpuUsage)}\n                        {ActionPanel(1, 3, `Write ${textBlockSize}`, full.randWriteNT, blockSize, full.randWriteNTCpuUsage)}\n                        {ParametersPanel(1,\"SEQ\")}\n                        {ParametersPanel(2,<span>RND 1Q</span>)}\n                        {ParametersPanel(3,<span>RND {full.threadsNumber ? `${full.threadsNumber}Q` : \"\"}</span>)}\n\n                        {!this.props.forced && <div id=\"SHARED_DRIVE_BENCHMARK_BAR\" style={styles.shareBar} onClick={onSharedLinkClick} title=\"Click & Ctrl-C to share\">\n                            {/*https://stackoverflow.com/questions/1173194/select-all-div-text-with-single-mouse-click/1173319*/}\n                            {SharedDiskBenchmarkFlow.buildLink(full)}\n                        </div>}\n                        \n\n                        {this.props.forced && <div style={styles.poweredByBar}>\n                            powered by <a href=\"https://github.com/devizer/w3top-bin\">w3top</a>\n                        </div>}\n\n\n                    </div>\n{/*\n                    <div style={{wordBreak:\"break-all\", wordWrap: \"break-word\", display: \"none\"}}>\n                        {JSON.stringify(this.state.selectedRow)}\n                    </div>\n*/}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n\n}","import React from 'react';\nimport MomentFormat from 'moment';\n\nimport {faCheck, faCheckDouble} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport * as Helper from \"../../Helper\";\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport {DiskBenchmarkResult} from \"./DiskBenchmarkResult\";\n\nconst renderODirectIcon = o_Direct => {\n    if (o_Direct === \"True\") return <FontAwesomeIcon style={{color:\"#555\"}} icon={faCheckDouble} />;\n    if (o_Direct === \"False\") return <span style={{color:\"grey\"}}>&mdash;</span>;\n    return <span/>;\n};\n\nexport class DiskBenchmarkHistory extends React.Component {\n    static displayName =  DiskBenchmarkHistory.name;\n\n    prevTrigger = null;\n    \n    constructor(props) {\n        super(props);\n\n        this.tryBuildDiskHistorySource = this.tryBuildDiskHistorySource.bind(this);\n        \n        // on first render always null\n        const idSelected = props.selected;\n\n        this.state = {\n            history: this.tryBuildDiskHistorySource(),\n            selected: null, // token\n            selectedRow: null,\n        };\n    }\n    \n    componentDidMount() {\n        this.fetchDiskHistorySource();\n    }\n    \n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.selected !== this.props.selected) {\n            this.setState({selected:this.props.selected});\n        }\n    }\n\n    historyProjection(history) {\n        history.forEach(bechmark => {\n            let mo = MomentFormat(bechmark.createdAt);\n            bechmark.createdDate = mo.format(\"MMM DD, YYYY\");\n        })\n    }\n    \n    fetchDiskHistorySource() {\n        let apiUrl = 'api/benchmark/disk/get-disk-benchmark-history';\n        try {\n            fetch(apiUrl, {method: \"POST\"})\n                .then(response => {\n                    Helper.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    Helper.log(response);\n                    return response.ok ? response.json() : {error: response.status, details: response}\n                })\n                .then(history => {\n                    this.historyProjection(history);\n                    this.setState({history:history});\n                    Helper.toConsole(\"HISTORY for disk benchmark\", history);\n                })\n                .catch(error => Helper.log(error));\n        }\n        catch(err)\n        {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n    }\n\n    tryBuildDiskHistorySource() {\n        // return [{mountPath:\"/a\"},{mountPath:\"/b\"},{mountPath:\"/c\"},{mountPath:\"/d\"}];\n        const emptyRow = {mountPath:\"\\xA0\"};\n        return [emptyRow,emptyRow,emptyRow,emptyRow,emptyRow,emptyRow,];\n    }\n    \n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (this.prevTrigger != nextProps.trigger)\n        {\n            this.prevTrigger = nextProps.trigger;\n            this.fetchDiskHistorySource();\n        }\n\n        return true;\n    }\n\n    render() {\n        \n        let pageSize = this.state.history.length === 0 ? 6 : Math.max(this.state.history.length, 1);\n        pageSize = Math.max(this.state.history.length, 6);\n        let formatSpeed = field => row => {\n            let ret = Helper.Common.formatBytes(row[field],1); \n            return ret === null ? \"\" : `${ret}/s`\n        };\n\n        let cellMountPath = row => (<span><span style={{fontWeight:'bold'}}>{row.original.mountPath}{row.original.fileSystem ? <span style={{opacity:0.55,fontWeight:'normal'}}> ({row.original.fileSystem})</span> : \"\"}</span></span>);\n        let sizeCell = row => <React.Fragment>{row.value ? Helper.Common.formatBytes(row.value) : \"\"}</React.Fragment>;\n        let speedCell = row => <React.Fragment>{row.value ? `${Helper.Common.formatBytes(row.value, 2)}/s` : \"\"}</React.Fragment>;\n        const defaultGreyCell = <span style={{color:\"grey\"}}>default</span>;\n        let engineCell = row => row.original.fileSystem ? <React.Fragment>{row.original.engine ? <>{row.original.engine} <span style={{opacity:0.55}}>{row.original.engineVersion}</span></> : defaultGreyCell}</React.Fragment> : null;\n        let rightAlign = {textAlign: \"right\" };\n        let centerAlign = {textAlign: \"center\" };\n\n        // use token instead of index\n        const selectedRowHandler = (state, rowInfo, column) => {\n            if (rowInfo && rowInfo.row) {\n                const token = rowInfo && rowInfo.original ? rowInfo.original.token : null;\n                const isSelected = token === this.state.selected;  \n                return {\n                    onClick: (e) => {\n                        const selectedRow = rowInfo.original;\n                        this.setState({\n                            selected: token,\n                            selectedRow: selectedRow,\n                        });\n                        Helper.toConsole(\"Benchmark Selected\", selectedRow);\n                        if (this.props.onBenchmarkSelected)\n                            this.props.onBenchmarkSelected(selectedRow);\n                        \n                        \n                    },\n                    style: {\n                        background: token === this.state.selected ? '#ADDDFF' : '',\n                        color: token === this.state.selected ? '' : '',\n                        cursor: \"pointer\",\n                    }\n                }\n            } else {\n                return {}\n            }\n        }\n\n\n        return (\n            <div>\n                <ReactTable\n                    data={this.state.history}\n                    showPagination={false}\n                    defaultPageSize={pageSize}\n                    getTrProps={selectedRowHandler}\n                    pageSizeOptions={[pageSize]}\n                    pageSize={pageSize}\n                    noDataText=\"history is empty\"\n                    getNoDataProps={() => {return {style:{color:\"gray\", marginTop:30}}}}\n\n                    columns={\n                        [\n                            {\n                                \n                                Header: \"Disk Benchmark History\",\n                                columns: [\n                                    {\n                                        Header: \"Mount Path\",\n                                        accessor: \"mountPath\",\n                                        minWidth: 135,\n                                        Cell: cellMountPath,\n                                        // style: ,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Working Set\",\n                                        id: \"workingSetSize\",\n                                        Cell: sizeCell,\n                                        accessor: \"workingSetSize\",\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Engine\",\n                                        id: \"Engine\",\n                                        Cell: engineCell,\n                                        // accessor: x => x.o_Direct !== undefined ? x.o_Direct.toLowerCase() : \"\",\n                                        accessor: x => x.engine,\n                                        minWidth: 88,\n                                        // style: ,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"O_DIRECT\",\n                                        id: \"O_DIRECT\",\n                                        Cell: row => renderODirectIcon(row.value),\n                                        // accessor: x => x.o_Direct !== undefined ? x.o_Direct.toLowerCase() : \"\",\n                                        accessor: x => x.o_Direct,\n                                        minWidth: 65,\n                                        style: centerAlign,\n                                        aggregate: () => null,\n                                    },\n                                ]\n                            },\n                            {\n                                Header: \"Sequential Access\",\n                                columns: [\n                                    {\n                                        Header: \"Allocate\",\n                                        id: \"allocate\",\n                                        Cell: speedCell,\n                                        accessor: \"allocate\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Read\",\n                                        id: \"seqRead\",\n                                        Cell: speedCell,\n                                        accessor: \"seqRead\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Write\",\n                                        id: \"seqWrite\",\n                                        Cell: speedCell,\n                                        accessor: \"seqWrite\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                ]\n                            },\n                            {\n                                Header: \"Random Access (single & multi threaded)\",\n                                columns: [\n                                    {\n                                        Header: \"Block\",\n                                        accessor: \"randomAccessBlockSize\",\n                                        Cell: (row) => <span>{Helper.Common.formatBytes(row.value,0)}</span>,\n                                        minWidth: 65,\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Read\",\n                                        Cell: speedCell,\n                                        accessor: \"randRead1T\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Write\",\n                                        id: \"randWrite1T\",\n                                        Cell: speedCell,\n                                        accessor: \"randWrite1T\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: \"Threads\",\n                                        id: \"threadsNumber\",\n                                        // Cell: speedCell,\n                                        accessor: \"threadsNumber\",\n                                        style: centerAlign,\n                                        minWidth: 48, width: 48,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: () => <span>Read <sup>n</sup></span>,\n                                        id: \"randReadNT\",\n                                        Cell: speedCell,\n                                        accessor: \"randReadNT\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                    {\n                                        Header: () => <span>Write <sup>n</sup></span>,\n                                        id: \"randWriteNT\",\n                                        Cell: speedCell,\n                                        accessor: \"randWriteNT\",\n                                        style: rightAlign,\n                                        aggregate: () => null,\n                                    },\n                                ]\n                            }\n                        ]\n                    }\n                    className=\"-striped -highlight\"\n                />\n                <br />\n            <DiskBenchmarkResult\n                opened={this.state.selectedRow != null}\n                selectedRow={this.state.selectedRow}\n            />\n            </div>\n        );\n    }\n\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M68.644 62.242 C 58.219 73.551,57.128 71.872,108.333 123.293 C 164.523 179.719,159.082 175.996,170.181 165.614 C 182.395 154.190,184.134 156.915,130.252 103.058 C 76.852 49.684,78.943 51.069,68.644 62.242 M238.436 67.982 C 236.227 73.814,230.040 80.702,227.012 80.702 C 223.559 80.702,219.344 85.796,220.438 88.647 C 220.982 90.067,222.607 91.228,224.047 91.228 C 227.448 91.228,238.596 102.377,238.596 105.777 C 238.596 107.218,239.758 108.842,241.177 109.387 C 244.086 110.503,249.123 106.240,249.123 102.662 C 249.123 99.829,258.980 91.228,262.228 91.228 C 263.498 91.228,264.983 90.067,265.527 88.647 C 266.621 85.796,262.406 80.702,258.952 80.702 C 256.289 80.702,249.123 73.356,249.123 70.626 C 249.123 63.653,240.852 61.607,238.436 67.982 M112.702 99.544 C 146.393 133.200,147.599 134.765,142.869 138.690 C 138.258 142.517,70.878 74.245,74.891 69.811 C 78.932 65.346,76.753 63.632,112.702 99.544 M159.316 75.000 C 158.800 81.243,158.413 81.624,151.754 82.456 C 140.922 83.810,140.503 90.790,151.208 91.561 C 158.569 92.091,158.787 92.282,159.316 98.684 C 160.165 108.936,168.421 108.538,168.421 98.246 L 168.421 91.228 175.561 91.228 C 185.795 91.228,185.291 83.641,175.000 82.789 C 168.603 82.259,168.421 82.053,168.421 75.333 C 168.421 65.130,160.158 64.828,159.316 75.000 M246.221 89.773 C 243.477 92.804,243.084 92.824,240.052 90.080 C 237.020 87.337,237.001 86.943,239.744 83.912 C 242.488 80.880,242.881 80.860,245.913 83.604 C 248.945 86.347,248.964 86.741,246.221 89.773 M195.116 108.019 C 193.300 111.557,188.893 115.971,184.986 118.162 C 176.270 123.051,176.290 125.452,185.088 130.381 C 189.435 132.816,193.279 136.796,195.189 140.840 C 199.062 149.039,202.941 149.156,206.276 141.174 C 207.699 137.768,211.409 133.472,214.520 131.629 C 226.315 124.641,226.525 121.990,215.639 117.481 C 212.457 116.164,208.963 112.585,206.889 108.521 C 202.591 100.095,199.254 99.952,195.116 108.019 M204.830 121.321 C 207.289 123.781,204.588 129.825,201.030 129.825 C 196.804 129.825,193.994 124.938,196.491 121.930 C 199.104 118.781,202.074 118.565,204.830 121.321 M166.667 155.404 C 166.667 162.215,161.110 161.936,153.939 154.765 C 146.784 147.610,146.733 147.469,149.977 143.886 L 153.262 140.255 159.965 146.799 C 163.651 150.399,166.667 154.271,166.667 155.404 M144.346 183.185 C 120.975 185.538,120.720 185.727,121.401 200.178 L 121.930 211.404 137.520 211.125 L 153.110 210.847 151.906 232.178 C 151.244 243.910,149.592 266.535,148.234 282.456 C 144.969 320.729,144.659 331.326,146.742 333.408 C 147.826 334.493,168.430 334.966,201.868 334.675 L 255.263 334.211 255.807 325.645 C 256.107 320.933,255.133 302.775,253.643 285.294 C 252.153 267.812,250.411 243.905,249.773 232.166 L 248.613 210.823 263.076 211.814 C 274.379 212.589,277.878 212.269,279.093 210.350 C 281.078 207.215,281.121 191.097,279.152 187.991 C 275.241 181.820,188.588 178.731,144.346 183.185 M257.018 192.723 C 268.937 193.826,269.315 194.008,269.876 198.915 C 270.417 203.651,270.139 203.897,265.490 202.810 C 256.041 200.601,171.351 199.595,151.792 201.459 C 137.124 202.858,132.215 202.798,131.205 201.209 C 127.154 194.838,131.295 193.333,157.915 191.503 C 182.601 189.805,232.082 190.414,257.018 192.723 M237.504 210.600 C 238.025 211.122,238.681 215.070,238.962 219.372 L 239.474 227.193 201.878 227.667 C 180.495 227.937,163.583 227.442,162.660 226.520 C 159.576 223.436,163.061 210.813,167.242 209.926 C 172.496 208.812,236.332 209.423,237.504 210.600 M240.379 237.281 C 240.395 237.522,241.957 256.967,243.850 280.493 C 245.743 304.018,246.868 323.952,246.349 324.791 C 245.002 326.971,156.618 326.753,155.266 324.566 C 154.306 323.012,158.329 263.607,160.702 244.298 L 161.619 236.842 200.985 236.842 C 222.636 236.842,240.364 237.039,240.379 237.281 M171.930 255.263 C 171.930 260.397,179.547 261.681,181.397 256.859 C 182.917 252.898,181.166 250.877,176.212 250.877 C 172.814 250.877,171.930 251.783,171.930 255.263 M172.141 271.649 C 171.317 273.251,170.107 282.654,169.452 292.544 L 168.260 310.526 172.647 310.526 C 177.636 310.526,178.086 308.902,179.757 284.860 C 180.780 270.143,176.624 262.933,172.141 271.649 \"\n});\n\nvar SvgWizardIcon = function SvgWizardIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 400,\n    height: 414.03508771929825,\n    viewBox: \"0, 0, 400,414.03508771929825\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgWizardIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Wizard-Icon.eec34623.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Popper from '@material-ui/core/Popper';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { faServer } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport BenchmarkProgressTable from \"./BenchmarkProgressTable\";\nimport DiskAvatarContent from \"./DiskAvatarContent\"\n\nimport * as Enumerable from \"linq-es2015\";\nimport classNames from \"classnames\";\nimport * as queryString from 'query-string';\nimport * as DataSourceActions from \"../../stores/DataSourceActions\";\nimport { BenchmarkStepStatusIcon } from \"./BenchmarkStepStatusIcon\"\nimport * as Helper from \"../../Helper\";\nimport {DiskBenchmarkHistory} from \"./DiskBenchmarkHistory\";\n// import Paper from \"./Popper-Lab\";\n\nimport { ReactComponent as WizardIconSvg } from '../../icons/Wizard-Icon.svg';\n// import {IoEngineSelector} from \"./IoEngineSelector\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport {Help} from \"@material-ui/icons\";\nconst WizardIcon = (size=34,color='#333') => (<WizardIconSvg style={{width: size,height:size,fill:color,strokeWidth:'6px',stroke:color }} />);\n\nvar Color = require(\"color\");\n\nconst PROGRESS_TICK_INTERVAL = 499;\nconst EMPTY_PROGRESS_STEP = {state:\"Pending\", canHaveMetrics:true, name:\"\\xA0\".repeat(35)};\nconst EMPTY_PROGRESS_STEP2 = {state:\"Pending\", canHaveMetrics:false, name:\"\\xA0\".repeat(45)};\nconst EMPTY_PROGRESS = {isCompleted: false, steps: [EMPTY_PROGRESS_STEP,EMPTY_PROGRESS_STEP2,EMPTY_PROGRESS_STEP,EMPTY_PROGRESS_STEP2,EMPTY_PROGRESS_STEP]};\n\nconst mainColorReadWrite=\"#3182bd\";\nconst mainColorReadOnly= \"#de2d26\";\n// const mainColorUnselectedReadOnly= \"#DDAAB1\";\nconst mainColorUnselectedReadOnly = \"#E2DEDE\";\n\n\n// const getUnselectedColor = (c) => Color(c).lighten(0.8); \n// const getUnselectedColor = (c) => Color(c).whiten(3);\nconst getUnselectedColor = (c) => Color(c).desaturate(0.8).lighten(0.9);\n\nconst\n    themeReadWrite = createMuiTheme({ palette: { primary: { main: getUnselectedColor(mainColorReadWrite).hex(), } }, }),\n    themeReadWriteSelected = createMuiTheme({ palette: { primary: { main: mainColorReadWrite, } }, }),\n    themeReadOnly = createMuiTheme({palette: { primary: { main: mainColorUnselectedReadOnly, } }, }),\n    themeReadOnlySelected = createMuiTheme({ palette: { primary: { main: mainColorReadOnly, } }, });\n    \n\nconst styles = {\n    root: {\n        width: '99%',\n        paddingTop: 1,\n    },\n    wizardButton: {\n        marginLeft: 12,\n        marginRight: 12,\n        marginBottom: 8,\n    },\n    wizardReset: {\n        marginLeft: 12,\n        marginRight: 12,\n        marginBottom: 8,\n    },\n    instructions: {\n        marginTop: 8,\n        marginBottom: 8,\n    },\n    debug : {\n        green : { border : \"1px solid green\", },\n        red : { border : \"1px solid red\", },\n    },\n    actions: {\n        width: \"100%\",\n        textAlign: \"center\",\n    },\n    actionButtons: {\n        textAlign: \"center\",\n    },\n    diskChips : {\n        marginBottom: 8,\n        marginLeft: 2,\n        marginRight: 2,\n    }\n};\n\nconst optionStyles = {\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: 0,\n        marginRight: 24,\n        width: 201,\n    },\n    engineField: {\n        marginTop: 4,\n        marginLeft: 0,\n        marginRight: 24,\n        marginBottom: 8,\n        width: 201,\n        textAlign: \"left\"\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 160,\n    },\n};\n\nconst defaultOptions = {\n    workingSet: 1024,\n    randomAccessDuration: 30,\n    disableODirect: false,\n    blockSize: 4096,\n    threads: 16,\n    engine: \"auto\",\n    errors: {isValid: true},\n};\n\nconst validateOptions = (options) => {\n    options.errors = {isValid: true};\n    const numberFields = [\"workingSet\", \"randomAccessDuration\", \"blockSize\", \"threads\"];\n    numberFields.forEach(name => {\n        let errorText = Helper.Numbers.isInt(options[name]) && Helper.Numbers.greaterOrEqual(options[name],1)\n            ? null\n            : \"Should be a valid number\";\n        \n        options.errors[name] = errorText;\n        if (errorText) options.errors.isValid = false; \n    });\n\n    if (!options.errors.blockSize && Number(options.blockSize) % 512 != 0) {\n        options.errors.blockSize = \"Should be multiplier of 512\"; \n        options.errors.isValid = false;\n    }\n};\n\nlet timer = null; // for progress\nlet token = null; // for progress\n\nconst getNeedHideDialog = (props) => {\n    let needHideDialog = false;\n    // do we need to calc it on each render?\n    Helper.toConsole(`DiskBenchmarkDialog::props`, props);\n    let queryParams = queryString.parse(props.location ? props.location.search : \"\");\n    Helper.toConsole(`DiskBenchmarkDialog::query_string`, queryParams);\n    needHideDialog = queryParams['history'] !== undefined;\n    Helper.log(`DiskBenchmarkDialog::needHideDialog ${needHideDialog}`);\n    return needHideDialog;\n}\n\nfunction DiskBenchmarkDialog(props) {\n    const [open, setOpen] = React.useState(!getNeedHideDialog(props));\n    const [historySelectedToken, setHistorySelectedToken] = React.useState(null);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [disks, setDisks] = React.useState(null);\n    const [engines, setEngines] = React.useState(null);\n    const [selectedDisk, setSelectedDisk] = React.useState(null);\n    const [options, setOptions] = React.useState(defaultOptions);\n    const [progress, setProgress] = React.useState(null);\n    const [errorAnchor, setErrorAnchor] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    const [historyTrigger, setHistoryTrigger] = React.useState(null);\n    const errorElement = React.useRef(); // where is popper bound to?\n\n\n    React.useEffect(() => {\n        // on hide disks are nullified\n        if (disks === null) initDisksSource();\n    });\n\n    function getStepContent(stepIndex) {\n        let renderProgress = () => (<BenchmarkProgressTable progress={progress}/>);\n        switch (stepIndex) {\n            case 0:\n                return renderStepSelectDisk();\n            case 1:\n                return renderStepTuneOptions();\n            case 2:\n            case 3:\n                return renderProgress();\n            default:\n                return `Unknown stepIndex ${stepIndex}`;\n        }\n    }\n\n    const handleChangeOption = name => event => {\n        function kill_it() {\n            const replacer = (key, value) => {\n                if (key === 'FiberNode') return undefined;\n                return value;\n            };\n            // Helper.log(`INTUP EVENT ${JSON.stringify(event, replacer)}`);\n            Helper.log(`INPUT EVENT [${event.type}] [${JSON.stringify(event.target.id)}] [${JSON.stringify(event.target.value)}]`);\n            Helper.toConsole(`INPUT EVENT`, event);\n            const {type, nativeEvent} = event;\n        }\n        \n        let tempOptions = {...options};\n        tempOptions[name] = event.target.value;\n        validateOptions(tempOptions);\n        setOptions(tempOptions);\n    };\n    \n    \n    function renderStepTuneOptions() {\n        const errorText = value => value ? value : \" \";\n        const safeEngines = engines === null ? [] : engines;\n        const spanVersion = version => {\n            return version ? (<span style={{color:\"grey\", fontSize:\"85%\"}}>v{version}</span>) : \"\";\n            let ret = \"\";\n            [\"major\", \"minor\", \"build\", \"revision\"].forEach(part => {\n                if (version !== null && version !== undefined && version[part] !== null && version[part] !== undefined && version[part] !== -1) \n                    ret = ret + (ret.length === 0 ? \"\" : \".\") + version[part]; \n            });\n            return ret === \"\" ? ret : (<span style={{color:\"grey\", fontSize:\"85%\"}}>v{ret}</span>);\n        };\n        const spanEngine = engine => {\n            return <>\n                <span style={{width:112,minWidth:112}}>{engine.idEngine}&nbsp;&nbsp;</span>\n                <span style={{width:56,minWidth:56, textAlign: \"right\"}}>{spanVersion(engine.version)}</span>\n            </>;\n        };\n        return (\n            <form className={optionStyles.container} noValidate autoComplete=\"off\">\n                {/*<Typography>Benchmark options:</Typography>*/}\n\n                <FormControl className={classes.formControl} style={optionStyles.engineField}>\n                    <InputLabel htmlFor=\"engine-helper\">Engine</InputLabel>\n                    <Select\n                        value={options.engine}\n                        onChange={handleChangeOption('engine')}\n                        input={<Input name=\"benchmark-options-engine\" id=\"engine-helper\" />}\n                    >\n                        <MenuItem value=\"auto\">auto</MenuItem>\n                        {safeEngines.map((engine, engineIndex) => (\n                            <MenuItem value={engine.idEngine}>{spanEngine(engine)}</MenuItem>\n                        ))}\n                    </Select>\n                    <FormHelperText>libaio is preferred</FormHelperText>\n                </FormControl>\n                <span style={{fontSize:\"1px\"}}><br/></span>\n\n                <TextField\n                    id=\"benchmark-options-working-set\"\n                    label=\"Working Set (MB)\"\n                    style={optionStyles.textField}\n                    value={options.workingSet}\n                    onChange={handleChangeOption('workingSet')}\n                    margin=\"normal\"\n                    error={options.errors.workingSet}\n                    helperText={errorText(options.errors.workingSet)}\n                />\n\n                <TextField\n                    id=\"benchmark-options-block-size\"\n                    label=\"Block Size (bytes)\"\n                    style={optionStyles.textField}\n                    value={options.blockSize}\n                    onChange={handleChangeOption('blockSize')}\n                    margin=\"normal\"\n                    error={options.errors.blockSize}\n                    helperText={errorText(options.errors.blockSize)}\n                />\n\n                <TextField\n                    id=\"benchmark-options-threads\"\n                    label=\"Threads or IO Depth\"\n                    style={optionStyles.textField}\n                    value={options.threads}\n                    onChange={handleChangeOption('threads')}\n                    margin=\"normal\"\n                    error={options.errors.threads}\n                    helperText={errorText(options.errors.threads)}\n                />\n\n                <TextField\n                    id=\"benchmark-options-duration\"\n                    label=\"Duration (seconds)\"\n                    style={optionStyles.textField}\n                    value={options.randomAccessDuration}\n                    onChange={handleChangeOption('randomAccessDuration')}\n                    margin=\"normal\"\n                    error={options.errors.randomAccessDuration}\n                    helperText={errorText(options.errors.randomAccessDuration)}\n                />\n\n\n            </form>\n        )\n    }\n    \n    function initDisksSource() {\n        setSelectedDisk(null);\n        setDisks(null);\n        let apiUrl = 'api/benchmark/disk/get-disks';\n        try {\n            fetch(apiUrl)\n                .then(response => {\n                    Helper.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    Helper.log(response);\n                    return response.ok ? response.json() : {error: response.status, details: response.json()}\n                })\n                .then(disksAndEngines => {\n                    setDisks(disksAndEngines.disks);\n                    setEngines(disksAndEngines.engines);\n                    Helper.toConsole(\"DISKS for benchmark\", disksAndEngines.disks);\n                    Helper.toConsole(\"Engines for benchmark\", disksAndEngines.engines);\n                })\n                .catch(error => Helper.log(error));\n        }\n        catch(err)\n        {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n    }\n    \n    function renderStepSelectDisk() {\n        if (disks === null)\n            return (<div><i>waiting for actual disks info ...</i></div>);\n\n        const isReadOnly = (disk) => !(disk.freeSpace > 0);\n        const getColorOfSelectedDisk = (disk) => !isReadOnly(disk) ? \"primary\" : \"secondary\";\n        const getFsColor = (disk) => {\n            if (disk === selectedDisk) return isReadOnly(disk) ? \"#F2DCE4\" : \"#B9BECE\";\n            return \"#666\";\n        };\n\n        const getTheme = (disk) =>\n            (disk === selectedDisk)\n                ? (isReadOnly(disk) ? themeReadOnlySelected : themeReadWriteSelected)\n                : (isReadOnly(disk) ? themeReadOnly : themeReadWrite);\n        \n        return (\n            <React.Fragment>\n                {/* <Typography>Choose disk:</Typography> */}   \n                {disks.map((disk, diskIndex) => (\n                <React.Fragment key={disk.mountEntry.mountPath}>\n                    <MuiThemeProvider theme={getTheme(disk)}>\n                    <Chip id={`DISK_${diskIndex+1}`}\n                        avatar={<Avatar><DiskAvatarContent disk={disk}/></Avatar>}\n                        clickable\n                        label={(<span><b>{disk.mountEntry.mountPath}</b> <span style={{opacity:0.66}}>({disk.mountEntry.fileSystem})</span></span>)} \n                        style={styles.diskChips} \n                        /*color={disk === selectedDisk ? getColorOfSelectedDisk(disk) : \"default\"}*/\n                        color={\"primary\"}\n                        onClick={() => handleSelectDisk(disk)}\n                    />{' '}\n                    </MuiThemeProvider>\n                </React.Fragment>\n            ))}\n            </React.Fragment>\n        )\n    }\n\n    function handleClickOpen() {\n        setDisks(null);\n        setOptions(defaultOptions);\n        setSelectedDisk(null);\n        setActiveStep(0);\n        setProgress(EMPTY_PROGRESS);\n        setHistorySelectedToken(null);\n        setOpen(true);\n    }\n\n    function handleClose() {\n        setOpen(false);\n        //setDisks(null);\n        //setOptions(defaultOptions);\n        //setSelectedDisk(null);\n        //setActiveStep(0);\n    }\n    \n    function notifyCancelDiskBenchmark()\n    {\n        let apiUrl = `api/benchmark/disk/cancel-disk-benchmark-${token}`;\n        try {\n            fetch(apiUrl, {method: \"POST\"})\n                .then(response => {\n                    Helper.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    return response.ok ? response.json() : {error: response.status, details: response}\n                })\n                .then(data => {\n                    // nothing to do\n                })\n                .catch(error => Helper.log(error));\n        } catch (err) {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n    }\n\n    function handleCancel() {\n        setOpen(false);\n        if (token) notifyCancelDiskBenchmark();\n    }\n\n\n    const progressTick = () => {\n        const apiUrl = `api/benchmark/disk/get-disk-benchmark-progress-${token}`;\n        try {\n            fetch(apiUrl, {method: \"POST\"})\n                .then(response => {\n                    Helper.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    return response.ok ? response.json() : {error: response.status, details: response}\n                })\n                .then(benchInfo => {\n                    Helper.toConsole(\"Disk Benchmark Progress\", benchInfo);\n                    if (benchInfo.progress) {\n                        setProgress(benchInfo.progress);\n                        if (benchInfo.progress.isCompleted) {\n                            clearInterval(timer); timer = 0;\n                            token = null;\n                            setActiveStep(3);\n                            setHistoryTrigger(new Date());\n                        }\n                    }\n                    else {\n                        // benchmark failed.\n                        clearInterval(timer);timer = 0;\n                    }\n                })\n                .catch(error => Helper.toConsole(`FETCH for ${apiUrl} failed`, error));\n        }\n        catch(err)\n        {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n    };\n\n    const startBenchmark = () => {\n        const apiUrl = 'api/benchmark/disk/start-disk-benchmark';\n        try {\n            const payload = {...options, mountPath: selectedDisk.mountEntry.mountPath};\n            const post={\n                headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },\n                method: \"POST\",\n                body: JSON.stringify(payload)\n            };\n            \n            fetch(apiUrl, post)\n                .then(response => {\n                    Helper.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    return response.ok ? response.json() : {error: response.status, details: response}\n                })\n                .then(benchInfo => {\n                    Helper.toConsole(\"Disk Benchmark Info at start\", benchInfo);\n                    token = benchInfo.token;\n                    setProgress(benchInfo.progress);\n                    timer = setInterval(progressTick, PROGRESS_TICK_INTERVAL);\n                })\n                .catch(error => Helper.log(error));\n        }\n        catch(err)\n        {\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n    };\n    \n    const handleSelectDisk = (disk) => {\n        Helper.toConsole(\"DISK SELECTED\", disk);\n        setSelectedDisk(disk);\n    };\n    \n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n        if (activeStep === 1) // Perform\n        {\n            startBenchmark();\n        }\n    };\n    \n    const handleBack = () => setActiveStep(activeStep - 1);\n    const handleReset = () => { \n        setDisks(null);\n        setOptions(defaultOptions);\n        setSelectedDisk(null);\n        setActiveStep(0);\n        setProgress(EMPTY_PROGRESS);\n    };\n\n    const steps = ['Select', 'Configure', activeStep === 3 ?\"Done\" : \"Run\"];\n    const classes = styles;\n    const fakeContent = (<Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>);\n    const nextButtonNames = [\"Next »\", \"Start\", \"Waiting\", \"Done\", \"Done\"];\n    const closeButtonNames = [\"Cancel\", \"Cancel\", \"Abort\", \"Close\", \"Close\"];\n    const isBackAllowed = activeStep === 1;\n    const isNextDisabled = selectedDisk === null || (activeStep === 1 && !options.errors.isValid) || activeStep === 2;\n    const areNextBackButtonsVisible = activeStep <= 1;\n    const getColorOfSelectedDisk = (disk) => disk.freeSpace > 0 ? \"primary\" : \"secondary\";\n\n\n    const applyError = (text) => {\n        setError(text);\n        setErrorAnchor(text ? errorElement.current : null);\n    };\n    const errorOpened = Boolean(errorAnchor);\n    const errorId = errorOpened ? \"error-popper-next2\" : null;\n\n    React.useEffect(() => {\n        if (error === null) {\n            setTimeout(() => {\n                // applyError(\"NO ERROR YET\");\n                // console.log(\"POPPER ATCIVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATED\");\n            }, 2000);\n        }\n    });\n\n    let formatBytes = Helper.Common.formatBytes; \n    let renderDiskSize = () => selectedDisk.freeSpace ? `${formatBytes(selectedDisk.freeSpace)} of ${formatBytes(selectedDisk.totalSize)} free` : `${formatBytes(selectedDisk.totalSize)}`;\n    const renderDialogHeader = () =>\n        selectedDisk == null ? <span>Benchmark a local or network disk</span> : (\n            <span>\n                Benchmark <b className=\"nowrap\">{selectedDisk.mountEntry.mountPath}</b>{' '}\n                ({selectedDisk.mountEntry.fileSystem})\n                <span className={classNames(activeStep >= 2 && \"hidden\")}>\n                    {', '}\n                    <span className={classNames(\"nowrap\")}>{renderDiskSize()}</span>\n                </span>\n            </span>\n        );\n\n\n\n    const handleBenchmarkSelected = selectedObject => {\n        const token = selectedObject ? selectedObject.token : null;\n        Helper.toConsole('onBenchmarkSelected', token);\n        setHistorySelectedToken(token);\n    }\n    \n    return (\n        <div>\n            \n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen} className={classNames(open && \"hidden\")} style={{marginBottom:20}}>\n                {WizardIcon(34,'white')} Start disk benchmark\n            </Button>\n            \n            <DiskBenchmarkHistory \n                trigger={historyTrigger}\n                onBenchmarkSelected={handleBenchmarkSelected}\n                selected={historySelectedToken}\n            />\n\n            <Popper id={errorId} open={errorOpened} anchorEl={errorAnchor} placement=\"bottom\">\n                <React.Fragment>\n                    {Enumerable.Range(1,10).ToArray().map(i => (\n                        <React.Fragment key={i}>\n                        <br/>\n                        <Paper >\n                                <Typography style={{padding:16,color: \"darkred\"}}>{i}: The content of the Popper.</Typography>\n                        </Paper>\n                        </React.Fragment>\n                    ))}\n                </React.Fragment>\n            </Popper>\n            \n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={\"sm\"}>\n                <DialogTitle id=\"form-dialog-title\" style={{textAlign:\"center\"}}>\n                    <div style={{minHeight:50}} className=\"Aligner\">\n                        {renderDialogHeader()}\n                    </div>\n                </DialogTitle>\n                <DialogContent style={{textAlign: \"center\"}} >\n                    {/*<Button variant=\"contained\" ref={errorElement}>WTH</Button>*/}\n                    <Stepper activeStep={activeStep} alternativeLabel style={styles.root}  id=\"wizard\" ref={errorElement}>\n                        {steps.map(label => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel> \n                            </Step>\n                        ))}\n                    </Stepper>\n                    \n                    {/*<Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>*/}\n                    {getStepContent(activeStep)}\n                </DialogContent>\n                <DialogActions id=\"disk-benchmark-actions\" >\n                    <React.Fragment>\n                    {activeStep === steps.length ? (\n                        <div style={styles.actions}>\n                            <Button id={\"BTN_DISK_BENCHMARK_ANOTHER\"} onClick={handleReset} style={classes.wizardReset}>New Benchmark</Button>\n                        </div>\n                    ) : (\n                        <div style={ activeStep === 2 ? styles.actions : styles.actions}>\n                            \n                            <Button id={\"BTN_DISK_BENCHMARK_BACK\"}\n                                    variant=\"contained\"\n                                    disabled={!isBackAllowed}\n                                    onClick={handleBack}\n                                    style={classes.wizardButton}\n                                    className={classNames(!areNextBackButtonsVisible && \"hidden\")}\n                            >\n                                « Back\n                            </Button>\n                            \n                            <Button id={\"BTN_DISK_BENCHMARK_NEXT\"}\n                                    variant=\"contained\" \n                                    disabled={isNextDisabled}\n                                    color=\"primary\" \n                                    onClick={handleNext} \n                                    style={classes.wizardButton}\n                                    className={classNames(!areNextBackButtonsVisible && \"hidden\")}\n                            >\n                                {nextButtonNames[activeStep]}\n                            </Button>\n                            \n                            <Button id={\"BTN_DISK_BENCHMARK_CLOSE\"}\n                                    variant=\"contained\"\n                                    disabled={activeStep === 0 && false}\n                                    onClick={handleCancel}\n                                    style={classes.wizardButton}\n                            >\n                                {closeButtonNames[activeStep]}\n                            </Button>\n\n                            <Button id={\"BTN_DISK_BENCHMARK_BACKGROUND\"}\n                                    variant=\"contained\"\n                                    disabled={activeStep === 0 && false}\n                                    onClick={handleClose}\n                                    style={classes.wizardButton}\n                                    className={classNames(activeStep < 2 && \"hidden\")}\n                            >\n                                Background\n                            </Button>\n                        </div>\n                    )}\n                    </React.Fragment>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DiskBenchmarkDialog;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nfunction PopperLab(props) {\n    const [errorAnchor, setAnchorError] = React.useState(null);\n\n    function handleClick(event) {\n        // setAnchorEl(anchorEl ? null : event.currentTarget);\n    }\n\n    const errorElement = React.useRef();\n    React.useEffect(() => {\n        setTimeout(() => {\n            // setAnchorError(errorElement.current);\n            console.log(\"POPPER OPENED\");\n        }, 2000);\n    });\n\n    const errorOpened = Boolean(errorAnchor);\n    const errorId = errorOpened ? \"error-popper\" : null;\n\n    return (\n        <div>\n            <img src=\"https://via.placeholder.com/350x150\" />\n            <button\n                aria-describedby={errorId}\n                type=\"button\"\n                onClick={handleClick}\n                ref={errorElement}\n            >\n                Toggle Popper\n            </button>\n\n            <br/>\n            <Paper>\n                <Typography style={{padding:16}}>a paper. WTH</Typography>\n            </Paper>\n            <br/>\n            <Paper>\n                <Typography style={{padding:16}}>a paper. WTF</Typography>\n            </Paper>\n\n\n            <Popper id={errorId} open={errorOpened} anchorEl={errorAnchor} placement=\"top\">\n                <Paper >\n                    <Typography style={{padding:16,color: \"darkred\"}}>The content of the Popper.</Typography>\n                </Paper>\n            </Popper>\n        </div>\n    );\n}\n\nexport default PopperLab;\n\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n\n","import * as Enumerable from \"linq-es2015\"\nimport * as Helper from \"../../Helper\";\n\nclass ProcessColumnsDefinition {\n\n    static Headers = [\n        {\n            caption: \"Process\", id: \"Process\",\n            columns: [\n                { caption: \"PID\", field: \"pid\" },\n                { caption: \"Name\", field: \"name\" }, // calculated\n                { caption: \"User\", field: \"user\" }, // calculated: UID + Name\n                { caption: \"Kind\", field: \"kind\"}, // Undefined -> \"\"\n                { caption: \"Priority\", field: \"priority\" }, // priority // calculated\n                { caption: \"Threads\", field: \"numThreads\" },\n                { caption: \"Uptime\", field: \"uptime\" }\n            ]\n        },\n        {\n            caption: \"Memory\", id: \"Memory\",\n            columns: [\n                { caption: \"RSS\", field: \"rss\" },\n                { caption: \"Shared\", field: \"shared\" },\n                { caption: \"Swapped\", field: \"swapped\" }\n            ]\n        },\n        {\n            caption: \"CPU Usage\", id: \"CpuUsage\",\n            columns: [\n                { caption: \"User\",      field: \"userCpuUsage\" }, // double in seconds\n                { caption: \"User, %%\",  field: \"userCpuUsage_PerCents\" },\n                { caption: \"Kernel\",        field: \"kernelCpuUsage\" },\n                { caption: \"Kernel, %%\",    field: \"kernelCpuUsage_PerCents\" },\n                { caption: \"∑ = User+Kernel\",       field: \"totalCpuUsage\" }, // calculated\n                { caption: \"∑ = User+Kernel, %%\",   field: \"totalCpuUsage_PerCents\" },\n            ]\n        },\n        {\n            caption: \"Children CPU Usage\", id: \"ChildrenCpuUsage\",\n            columns: [\n                { caption: \"User\",      field: \"childrenUserCpuUsage\" }, // double in seconds\n                { caption: \"User, %%\",  field: \"childrenUserCpuUsage_PerCents\" },\n                { caption: \"Kernel\",        field: \"childrenKernelCpuUsage\" },\n                { caption: \"Kernel, %%\",    field: \"childrenKernelCpuUsage_PerCents\" },\n                { caption: \"∑ = User+Kernel\",       field: \"childrenTotalCpuUsage\" }, // calculated\n                { caption: \"∑ = User+Kernel, %%\",   field: \"childrenTotalCpuUsage_PerCents\" },\n            ]\n        },\n        {\n            caption: \"IO Time\", id: \"IoTime\",\n            columns: [\n                { caption: \"Total\", field: \"ioTime\" }, // hh:mm:ss, double in seconds\n                { caption: \"Current, %%\", field: \"ioTime_PerCents\" },\n            ]\n        },\n        {\n            // total: GB/s, current: MB/s\n            caption: \"IO Transfer\", id: \"IoTransfer\",\n            columns: [\n                { caption: \"Read (logical), total\",     field: \"readBytes\" },\n                { caption: \"Read (logical), current\",   field: \"readBytes_Current\" }, // todo\n                { caption: \"Write (logical), total\",    field: \"writeBytes\" },\n                { caption: \"Write (logical), current\",  field: \"writeBytes_Current\" }, // todo\n                { caption: \"Read (block level)\",            field: \"readBlockBackedBytes\" },\n                { caption: \"Read (block level), current\",   field: \"readBlockBackedBytes_Current\" },\n                { caption: \"Write (block level)\",           field: \"writeBlockBackedBytes\" },\n                { caption: \"Write (block level), current\",  field: \"writeBlockBackedBytes_Current\" },\n                { caption: \"Read Calls\",            field: \"readSysCalls\" },\n                { caption: \"Read Calls, current\",   field: \"readSysCalls_Current\" },\n                { caption: \"Write Calls\",           field: \"writeSysCalls\" },\n                { caption: \"Write Calls, current\",  field: \"writeSysCalls_Current\" },\n            ]\n        },\n        {\n            caption: \"Page Faults\", id: \"PageFaults\",\n            columns: [\n                { caption: \"Minor\",             field: \"minorPageFaults\" },\n                { caption: \"Minor, current\",    field: \"minorPageFaults_Current\" },\n                { caption: \"Swapins\",           field: \"majorPageFaults\" },\n                { caption: \"Swapins, current\",  field: \"majorPageFaults_Current\" },\n            ]\n        },\n        {\n            caption: \"Children Page Faults\", id: \"ChildrenPageFaults\",\n            columns: [\n                { caption: \"Minor\",             field: \"childrenMinorPageFaults\" },\n                { caption: \"Minor, current\",    field: \"childrenMinorPageFaults_Current\" },\n                { caption: \"Swapins\",           field: \"childrenMajorPageFaults\" },\n                { caption: \"Swapins, current\",  field: \"childrenMajorPageFaults_Current\" },\n            ]\n            // ChildrenMinorPageFaults\n        },\n        {\n            caption: \"Command Line\", id: \"CommandLine\",\n            columns: [\n                { caption:\"\", field: \"commandLine\" },\n            ]\n        }\n\n    ];\n    \n    static DefaultColumnKeys = [\n        \"Process.pid\",\n        \"Process.name\",\n        \"Process.kind\",\n        \"Process.priority\",\n        \"Process.uptime\",\n        \"Memory.rss\",\n        \"Memory.shared\",\n        \"Memory.swapped\",\n        \"IoTime.ioTime\",\n        \"IoTime.ioTime_PerCents\",\n        \"IoTransfer.readBytes\",\n        \"IoTransfer.readBytes_Current\",\n        \"IoTransfer.writeBytes\",\n        \"IoTransfer.writeBytes_Current\",\n        \"PageFaults.majorPageFaults_Current\",\n        \"CpuUsage.totalCpuUsage_PerCents\",\n        \"ChildrenCpuUsage.childrenTotalCpuUsage_PerCents\",\n        // \"CommandLine.CommandLine\",\n    ];\n    \n    static AllColumnKeys = []; // array of group.field\n    \n    static isValidColumnKey(columnKey) {\n        return ProcessColumnsDefinition.AllColumnKeys.indexOf(columnKey) >= 0;\n    }\n    \n}\n\nfunction fillAllColumnKeys() {\n    ProcessColumnsDefinition.Headers.forEach(header => {\n        header.columns.forEach(column => {\n            ProcessColumnsDefinition.AllColumnKeys.push(`${header.id}.${column.field}`);\n        });\n    });\n}\n\nfillAllColumnKeys();\n\nfunction validateDefaultColumnKeys() {\n    let all = ProcessColumnsDefinition.AllColumnKeys;\n    Helper.log(`ProcessColumnsDefinition.getAllColumnKeys(): ${all}`);\n    let errors = [];\n    ProcessColumnsDefinition.DefaultColumnKeys.forEach(columnKey => {\n        if (!Enumerable.AsEnumerable(all).Any(x => x === columnKey))\n            errors.push(columnKey);\n    });\n    \n    if (errors.length > 0)\n        throw `Wrong keys in ProcessColumnsDefinition.DefaultColumnKeys: ${errors}`;\n}\n\nvalidateDefaultColumnKeys();\nexport default ProcessColumnsDefinition;","\nexport class ProcessRowsFilters {\n    \n    // static PredefinedTop = [10, 30, 100, 0];\n    \n    TopFilter = 0; // all processes\n    NeedNoFilter = true;        // Any \n    NeedKernelThreads = false;  // Kernel\n    NeedServices = false;       // Services\n    NeedContainers = false;     // Containers\n    \n    static getDefault() {\n        const ret = new ProcessRowsFilters();\n        ret.TopFilter = 12;\n        return ret;\n    }\n}\n","// import {store} from \"store\"\nimport ProcessColumnsDefinition from \"../ProcessColumnsDefinition\";\nimport {ProcessRowsFilters} from \"../ProcessRowsFilters\";\n\n// session store with watch\nimport engine from 'store/src/store-engine';\nimport sessionStorage from 'store/storages/sessionStorage';\nimport cookieStorage from 'store/storages/cookieStorage';\nimport localStorage from 'store/storages/localStorage';\n\nimport defaultPlugin from 'store/plugins/defaults';\nimport expiredPlugin from 'store/plugins/expire';\nimport eventsPlugin from 'store/plugins/events';\n\nconst storages = [localStorage, sessionStorage, cookieStorage, ];\nconst plugins = [defaultPlugin, expiredPlugin, eventsPlugin];\nconst store = engine.createStore(storages, plugins);\n\nexport const StoreVersion = \"1.5\";\n\nconst GenericStore = (key, getDefault) => {\n    return {\n        set: (properties) => {\n            store.set(key, {ver: StoreVersion, properties});\n        },\n        get: () => {\n            const stored = store.get(key);\n            if (stored && stored.ver === StoreVersion && typeof stored.properties === \"object\") \n                return stored.properties;\n            else\n                return typeof getDefault === \"function\" ? getDefault() : getDefault; \n        }\n    }\n};\n\n\n// ┌───────────────────────────────────┐\n// │  --===## Three Storages ##===--   │\n// └───────────────────────────────────┘\nexport const SelectedColumns = GenericStore(\"processSelectedColumns\", () => ProcessColumnsDefinition.DefaultColumnKeys);\nexport const RowsFilters = GenericStore(\"processRowsFilters\", () => ProcessRowsFilters.getDefault());\n// const defaultSorting = [{ id: 'totalCpuUsage_PerCents', desc: true }]\nconst defaultSorting = [{ id: 'rss', desc: true }]\nexport const Sorting = GenericStore(\"processSorting\", () => defaultSorting);\n","import dispatcher from \"./ProcessListDispatcher\";\nimport * as ProcessListLocalStore from \"./ProcessListLocalStore\";\n\nexport const SELECTED_COLUMNS_UPDATED_ACTION = \"SELECTED_COLUMNS_UPDATED_ACTION\";\nexport const PROCESS_LIST_UPDATED_ACTION = \"PROCESS_LIST_UPDATED_ACTION\";\nexport const ROWS_FILTERS_UPDATED_ACTION = \"ROWS_FILTERS_UPDATED_ACTION\";\n\nexport function SelectedColumnsUpdated(selectedColumns) {\n    dispatcher.dispatch({\n        type: SELECTED_COLUMNS_UPDATED_ACTION,\n        value: selectedColumns\n    });\n    \n    ProcessListLocalStore.SelectedColumns.set(selectedColumns);\n}\n\nexport function ProcessListUpdated(processes) {\n    dispatcher.dispatch({\n        type: PROCESS_LIST_UPDATED_ACTION,\n        value: processes\n    })\n}\n\nexport function RowsFiltersUpdated(rowsFilters) {\n    dispatcher.dispatch({\n        type: ROWS_FILTERS_UPDATED_ACTION,\n        value: rowsFilters\n    });\n\n    ProcessListLocalStore.RowsFilters.set(rowsFilters);\n}\n","import dispatcher from \"./ProcessListDispatcher\";\nimport {EventEmitter} from \"events\";\nimport * as ProcessListActions from \"./ProcessListActions\";\nimport * as ProcessListLocalStore from \"./ProcessListLocalStore\";\nimport ProcessColumnsDefinition from \"../ProcessColumnsDefinition\";\n\nclass ProcessListStore extends EventEmitter {\n\n    constructor() {\n        super();\n        // local copy per message\n        // this.selectedColumns = ProcessColumnsDefinition.DefaultColumnKeys;\n        this.selectedColumns = ProcessListLocalStore.SelectedColumns.get();\n        this.rowsFilters = ProcessListLocalStore.RowsFilters.get();\n        this.processList = [];\n    }\n    \n/*\n    preloadSelectedColumns()\n    {\n        \n    }\n*/\n\n    // single handler for the app for each kind of message\n    handleActions(action) {\n        switch (action.type) {\n            // a cast per message\n            case ProcessListActions.SELECTED_COLUMNS_UPDATED_ACTION: {\n                this.selectedColumns = action.value;\n                this.emit(\"storeUpdated\");\n                break;\n            }\n            case ProcessListActions.PROCESS_LIST_UPDATED_ACTION: {\n                this.processList = action.value;\n                this.emit(\"storeUpdated\");\n                break;\n            }\n            case ProcessListActions.ROWS_FILTERS_UPDATED_ACTION: {\n                this.rowsFilters = action.value;\n                this.emit(\"storeUpdated\");\n                break;\n            }\n            default: {\n            }\n        }\n    }\n\n    // a method per message\n    getSelectedColumns() {\n        return this.selectedColumns;\n    }\n    \n    getProcessList() {\n        return this.processList;\n    }\n    \n    getRowsFilters() {\n        return this.rowsFilters;\n    }\n}\n\nconst processListStore = new ProcessListStore();\ndispatcher.register(processListStore.handleActions.bind(processListStore));\nexport default processListStore;\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport processListStore from \"./Store/ProcessListStore\";\nimport * as ProcessListActions from \"./Store/ProcessListActions\"\nimport Switch from '@material-ui/core/Switch';\nimport {Checkbox,FormControlLabel,FormControl} from '@material-ui/core';\nimport ProcessColumnsDefinition from \"./ProcessColumnsDefinition\";\n\nimport * as Helper from \"../../Helper\";\n\nfunction CustomCheckbox(props) {\n    return (\n        <Checkbox {...props}/>\n    );\n}\n\nclass FixedSpan extends React.Component {\n    render() {\n        return (<span style={{whiteSpace: \"nowrap\", display: \"inline-block\", width: this.props.width, minWidth: this.props.width}}>{this.props.children}</span>);\n    }\n}\n\nclass IoTransferLayout extends React.Component {\n    render() {\n        let x = this.props.x, y = this.props.y;\n        let widths = [115, 95, 115, 45, 120, 95, 115];\n        let height = 28;\n        let left = 0; for (let c = 0; c < x; c++) left += widths[c];\n        let top = y * height - 2;\n        return (\n            <div style={{position: \"absolute\", left, top, whiteSpace:\"nowrap\"}}>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n\nclass CpUsageLayout extends React.Component {\n    render() {\n        let x = this.props.x, y = this.props.y;\n        let widths = [328, 276, 302];\n        let height = 28;\n        let left = 0; for (let c = 0; c < x; c++) left += widths[c];\n        let top = y * height - 2;\n        return (\n            <div style={{position: \"absolute\", left, top, whiteSpace:\"nowrap\"}}>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n\nlet ABS=IoTransferLayout;\nlet ABS3=CpUsageLayout;\n\nlet firstRender = true; \n\nexport class ColumnChooserComponent extends Component {\n    static displayName = ColumnChooserComponent.name;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedColumns: processListStore.getSelectedColumns(),\n        };\n    }\n    \n    componentDidMount() {\n        firstRender = false;\n    }\n\n    render () {\n        let nowrap={whiteSpace:\"nowrap\"};\n        let space=(<>&nbsp;&nbsp;&nbsp;</>);\n        let chbox= (caption) => (\n            <><span style={nowrap}><CustomCheckbox color=\"primary\" onChange={() => {}} value={\"PID\"} />{caption}</span>{space}</>\n        );\n        \n        let checkOnChange = (caption, id) => {\n            return (event) => {\n                console.log(`${caption} (#${id}) CHANGED: ${event.target.checked}`);\n                let isChecked = event.target.checked;\n                let copy = [...this.state.selectedColumns];\n                if (isChecked) copy.push(id);\n                else {\n                    let filtered = copy.filter(x => x !== id); \n                    copy = filtered;\n                }\n                this.setState({selectedColumns:copy});\n                console.log(`NEW SELECTED Columns: ${copy}`);\n                Helper.runInBackground(() => {\n                    ProcessListActions.SelectedColumnsUpdated(copy);\n                });\n            };\n        };\n        \n        // let selectedColumns = processListStore.getSelectedColumns(); // array of group.field\n        let selectedColumns = this.state.selectedColumns;\n        chbox = (caption, id) => {\n            if (firstRender && ProcessColumnsDefinition.AllColumnKeys.indexOf(id) < 0)\n                throw `Wrong columns id [${id}] on the ${ColumnChooserComponent.name}`;\n            \n            // let isChecked = processListStore.getSelectedColumns().indexOf(id) >= 0;\n            let isChecked = this.state.selectedColumns.indexOf(id) >= 0;\n            return (\n                <>&nbsp;<input type=\"checkbox\" checked={isChecked} onChange={checkOnChange(caption, id)} />&nbsp;{caption}&nbsp;&nbsp;&nbsp;</>\n            )\n        };\n        \n        let tdSpace=(<><td style={{borderRight:\"1px solid grey\", width:8}}>&nbsp;</td><td style={{width: 16}}>&nbsp;</td></>)\n\n        let colMemory=88, colProcess=88;\n        let colA1=128, colA2=132;\n        \n        return (\n            <>\n\n                <div className=\"cs-group\">\n                    Process in general\n                </div>\n                <div className=\"cs-line\">\n                    <FixedSpan width={colProcess}>{chbox(\"PID\", \"Process.pid\")}</FixedSpan>\n                    <FixedSpan width={colProcess}>{chbox(\"Name\", \"Process.name\")}</FixedSpan>\n                    <FixedSpan width={colProcess}>{chbox(\"User\", \"Process.user\")}</FixedSpan>\n                    <FixedSpan width={colProcess}>{chbox(\"Kind\", \"Process.kind\")}</FixedSpan>\n                    <FixedSpan width={colProcess}>{chbox(\"Priority\", \"Process.priority\")}</FixedSpan>\n                    <FixedSpan width={colProcess}>{chbox(\"Threads\", \"Process.numThreads\")}</FixedSpan>\n                    <FixedSpan width={colProcess}>{chbox(\"Uptime\", \"Process.uptime\")}</FixedSpan>\n                    <FixedSpan width={colProcess+11}>{chbox(\"Command line\", \"CommandLine.commandLine\")}</FixedSpan>\n                </div>\n\n                <div className=\"cs-group\">\n                    Memory\n                </div>\n                <div className=\"cs-line\">\n                    <FixedSpan width={colMemory}>{chbox(\"RSS\", \"Memory.rss\")}</FixedSpan>\n                    <FixedSpan width={colMemory}>{chbox(\"Shared\", \"Memory.shared\")}</FixedSpan>\n                    <FixedSpan width={colProcess+11}>{chbox(\"Swapped\", \"Memory.swapped\")}</FixedSpan>\n                </div>\n\n                <div className=\"cs-group\">\n                    IO Time\n                </div>\n                <div className=\"cs-line\">\n                    <FixedSpan width={colMemory}>{chbox(\"Total\", \"IoTime.ioTime\")}</FixedSpan>\n                    {chbox(\"Current\", \"IoTime.ioTime_PerCents\")}\n                </div>\n\n                <div className=\"cs-group\">\n                    CPU Usage\n                </div>\n                <div style={{position:\"relative\", height: 55, border: \"\"}}>\n\n                    <ABS3 x={0} y={0}>\n                        <FixedSpan width={110}>User:</FixedSpan>\n                        {chbox(\"Total\", \"CpuUsage.userCpuUsage\")}\n                        {chbox(\"Current\", \"CpuUsage.userCpuUsage_PerCents\")}\n                    </ABS3>\n                    <ABS3 x={1} y={0}>\n                        <FixedSpan width={56}>Kernel:</FixedSpan>\n                        {chbox(\"Total\", \"CpuUsage.kernelCpuUsage\")}\n                        {chbox(\"Current\", \"CpuUsage.kernelCpuUsage_PerCents\")}\n                    </ABS3>\n                    <ABS3 x={2} y={0}>\n                        <FixedSpan width={43}>Sum:</FixedSpan>\n                        {chbox(\"Total\", \"CpuUsage.totalCpuUsage\")}\n                        {chbox(\"Current\", \"CpuUsage.totalCpuUsage_PerCents\")}\n                    </ABS3>\n\n                    <ABS3 x={0} y={1}>\n                        <FixedSpan width={110}>Children User:</FixedSpan>\n                        {chbox(\"Total\", \"ChildrenCpuUsage.childrenUserCpuUsage\")}\n                        {chbox(\"Current\", \"ChildrenCpuUsage.childrenUserCpuUsage_PerCents\")}\n                    </ABS3>\n                    <ABS3 x={1} y={1}>\n                        <FixedSpan width={56}>Kernel:</FixedSpan>\n                        {chbox(\"Total\", \"ChildrenCpuUsage.childrenKernelCpuUsage\")}\n                        {chbox(\"Current\", \"ChildrenCpuUsage.childrenKernelCpuUsage_PerCents\")}\n                    </ABS3>\n                    <ABS3 x={2} y={1}>\n                        <FixedSpan width={43}>Sum:</FixedSpan>\n                        {chbox(\"Total\", \"ChildrenCpuUsage.childrenTotalCpuUsage\")}\n                        {chbox(\"Current\", \"ChildrenCpuUsage.childrenTotalCpuUsage_PerCents\")}\n                    </ABS3>\n\n                </div>\n\n                <div className=\"cs-group\">\n                    IO Transfer\n                </div>\n                <div style={{position:\"relative\", height: 83, border: \"\"}}>\n\n                    <ABS x={0} y={0}>\n                        <FixedSpan width={colA1}>Logical Read:</FixedSpan> \n                        {chbox(\"Total\", \"IoTransfer.readBytes\")} \n                        {chbox(\"Current\", \"IoTransfer.readBytes_Current\")}\n                    </ABS>\n                    <ABS x={4} y={0}>\n                        <FixedSpan width={colA2}>Logical Write:</FixedSpan>\n                        {chbox(\"Total\", \"IoTransfer.writeBytes\")} \n                        {chbox(\"Current\", \"IoTransfer.writeBytes_Current\")}\n                    </ABS>\n\n                    <ABS x={0} y={1}>\n                        <FixedSpan width={colA1}>Block-level Read:</FixedSpan>\n                        {chbox(\"Total\", \"IoTransfer.readBlockBackedBytes\")} \n                        {chbox(\"Current\", \"IoTransfer.readBlockBackedBytes_Current\")}\n                    </ABS>\n                    <ABS x={4} y={1}>\n                        <FixedSpan width={colA2}>Block-level Write:</FixedSpan>\n                        {chbox(\"Total\", \"IoTransfer.writeBlockBackedBytes\")} \n                        {chbox(\"Current\", \"IoTransfer.writeBlockBackedBytes_Current\")}\n                    </ABS>\n\n                    <ABS x={0} y={2}>\n                        <FixedSpan width={colA1}>Read Calls:</FixedSpan>\n                        {chbox(\"Total\", \"IoTransfer.readSysCalls\")} \n                        {chbox(\"Current\", \"IoTransfer.readSysCalls_Current\")}\n                    </ABS>\n                    <ABS x={4} y={2}>\n                        <FixedSpan width={colA2}>Write Calls:</FixedSpan> \n                        {chbox(\"Total\", \"IoTransfer.writeSysCalls\")} \n                        {chbox(\"Current\", \"IoTransfer.writeSysCalls_Current\")}\n                    </ABS>\n\n                </div>\n\n                \n                <div className=\"cs-group\">\n                    Page Faults\n                </div>\n                <div style={{position:\"relative\", height: 58, border: \"\"}}>\n\n                    <ABS x={0} y={0}>\n                        <FixedSpan width={colA1}>Minor:</FixedSpan>\n                        {chbox(\"Total\", \"PageFaults.minorPageFaults\")}\n                        {chbox(\"Current\", \"PageFaults.minorPageFaults_Current\")}\n                    </ABS>\n                    <ABS x={4} y={0}>\n                        <FixedSpan width={colA2}>Swap-in:</FixedSpan>\n                        {chbox(\"Total\", \"PageFaults.majorPageFaults\")}\n                        {chbox(\"Current\", \"PageFaults.majorPageFaults_Current\")}\n                    </ABS>\n\n                    <ABS x={0} y={1}>\n                        <FixedSpan width={colA1}>Children Minor:</FixedSpan>\n                        {chbox(\"Total\", \"ChildrenPageFaults.childrenMinorPageFaults\")}\n                        {chbox(\"Current\", \"ChildrenPageFaults.childrenMinorPageFaults_Current\")}\n                    </ABS>\n                    <ABS x={4} y={1}>\n                        <FixedSpan width={colA2}>Children Swap-in:</FixedSpan>\n                        {chbox(\"Total\", \"ChildrenPageFaults.childrenMajorPageFaults\")}\n                        {chbox(\"Current\", \"ChildrenPageFaults.childrenMajorPageFaults_Current\")}\n                    </ABS>\n\n                </div>\n\n\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport processListStore from \"./Store/ProcessListStore\";\nimport * as ProcessListActions from \"./Store/ProcessListActions\"\nimport Switch from '@material-ui/core/Switch';\nimport {Checkbox, FormControlLabel, FormControl, TextField} from '@material-ui/core';\nimport ProcessColumnsDefinition from \"./ProcessColumnsDefinition\";\n\nimport * as Helper from \"../../Helper\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport {ProcessRowsFilters} from \"./ProcessRowsFilters\";\n\nclass NoWrap extends React.Component {\n    render() {\n        return (<span style={{whiteSpace: \"nowrap\", display: \"inline-block\"}}>{this.props.children}</span>);\n    }\n}\n\nexport class RowsFiltersComponent extends Component {\n    static displayName = RowsFiltersComponent.name;\n\n    constructor(props) {\n        super(props);\n\n        let rowsFilters = processListStore.getRowsFilters();\n        let topValue = rowsFilters.TopFilter, customTop = \"\";\n        if (topValue != 0 && topValue != 30 && topValue != 100)\n        {\n            customTop = topValue;\n            topValue = -1;\n        }\n        this.state = {\n            rowsFilters,\n            topValue,  // only for custom (-1). rest options is the copy of rowsFilters.TopFilter \n            customTop, // only for custom\n        };\n    }\n    \n    render() {\n        // validate only custom top \n        const getCustomTopError = (topValue, rawCustomTop) => {\n            let customTopError = null;\n            if (topValue === undefined) topValue = this.state.topValue; \n            if (`${topValue}` === \"-1\")\n            {\n                if (rawCustomTop === undefined) rawCustomTop = this.state.customTop;\n                const isPositiveNumber = Helper.Numbers.isInt(rawCustomTop) && Helper.Numbers.greaterOrEqual(rawCustomTop,1);\n                if (!isPositiveNumber) customTopError = \"Should be a positive number\";\n            }\n            return customTopError;\n        };\n        \n        const asyncRaiseUpdate = (rowsFilters) => {\n            Helper.runInBackground(() => {\n                ProcessListActions.RowsFiltersUpdated(rowsFilters);\n            });\n        } \n\n        // should be called on each onChange\n        const tryApplyRowsFilters = () => {\n            return;\n            if (getCustomTopError() == null)\n            {\n                const filters = new ProcessRowsFilters();\n                filters.TopFilter = parseInt(this.state.topValue);\n                if (filters.TopFilter === -1) filters.TopFilter = parseInt(this.state.customTop);\n                filters.NeedContainers = this.state.NeedContainers;\n                filters.NeedKernelThreads = this.state.NeedKernelThreads;\n                filters.NeedNoFilter = this.state.NeedNoFilter;\n                filters.NeedServices = this.state.NeedServices;\n                asyncRaiseUpdate(filters);\n            }\n        };\n\n        const onChangeTop = (event) => {\n            const newTopValue = event.target.value;\n            const st = this.state.rowsFilters;\n            if (`${newTopValue}` != \"-1\") // fuzzy comparision\n            {\n                st.TopFilter = newTopValue;\n                this.setState({rowsFilters: st, topValue: newTopValue});\n                asyncRaiseUpdate(st);\n            }\n            else {\n                if (getCustomTopError(newTopValue, this.state.customTop) === null) {\n                    st.TopFilter = parseInt(this.state.customTop);\n                    this.setState({rowsFilters: st, topValue: newTopValue});\n                    asyncRaiseUpdate(st);\n                }\n                else {\n                    this.setState({topValue: newTopValue});\n                }\n            }\n            Helper.log(`NEW TOP for RowsFilters: ${newTopValue}`);\n        };\n        \n        let customTopError = getCustomTopError();\n\n        const onChangeCustomTop = (event) => {\n            const newCustomTop = event.target.value;\n            if (getCustomTopError(-1, newCustomTop) === null)\n            {\n                const newTopValue = parseInt(newCustomTop);\n                const st = this.state.rowsFilters;\n                \n                st.TopFilter = newTopValue;\n                this.setState({rowsFilters: st, topValue: -1, customTop: newCustomTop});\n                asyncRaiseUpdate(st);\n            }\n            else {\n                this.setState({customTop: newCustomTop});\n            }\n        }\n        \n        const onCustomTopFocus = (event) => {\n            this.setState({topValue: -1});\n        }\n        \n        const isTopChecked = (val) => {\n            // does not work properly for custom\n            return `${this.state.topValue}` === `${val}`;\n        };\n        \n        const onChangedKind = (property) => (event) => {\n            const checked = event.target.checked;\n            const st = this.state.rowsFilters;\n            st[property] = checked;\n            if (property === \"NeedNoFilter\")\n            {\n                if (checked) {\n                    st.NeedKernelThreads = false;\n                    st.NeedServices = false;\n                    st.NeedContainers = false;\n                }\n                else {\n                    st.NeedKernelThreads = true;\n                    st.NeedServices = true;\n                    st.NeedContainers = true;\n                }\n            }\n            else {\n                if (checked) \n                    st.NeedNoFilter = false;\n                else {\n                    if (!st.NeedKernelThreads && !st.NeedServices && !st.NeedContainers)\n                        st.NeedNoFilter = true;\n                }\n            }\n            this.setState({rowsFilters: st});\n            asyncRaiseUpdate(st);\n        };\n        \n        return (\n            <div className=\"row-2\" style={{minWidth: 333}}>\n                <div className=\"column-2\">\n                    <div className=\"column-header\"><NoWrap>BY COUNT</NoWrap></div>\n                    <NoWrap><Radio color=\"primary\" value={0} onClick={onChangeTop} checked={isTopChecked(0)}/> ALL</NoWrap>\n                    <br/>\n                    <NoWrap><Radio color=\"primary\" value={30} onClick={onChangeTop}  checked={isTopChecked(30)}/> Top 30</NoWrap>\n                    <br/>\n                    <NoWrap><Radio color=\"primary\" value={100} onChange={onChangeTop} checked={isTopChecked(100)} /> Top 100</NoWrap>\n                    <br/>\n                    <NoWrap><Radio color=\"primary\" value={-1} onChange={onChangeTop} checked={isTopChecked(-1)} style={{paddingTop:15}}/>\n                    <TextField variant=\"outlined\" label=\"Custom N\" style={{width: 120}}\n                               value={this.state.customTop}\n                               onChange={onChangeCustomTop}\n                               error={customTopError}\n                               helperText={customTopError}\n                               onFocus={onCustomTopFocus}\n                    /></NoWrap>\n                </div>\n                <div className=\"column-2\">\n                    <div className=\"column-header\"><NoWrap>BY KIND</NoWrap></div>\n                    <NoWrap><Checkbox color=\"primary\" checked={this.state.rowsFilters.NeedNoFilter} onChange={onChangedKind(\"NeedNoFilter\")}/> Any Kind</NoWrap>\n                    <br/>\n                    <NoWrap><Checkbox color=\"primary\" checked={this.state.rowsFilters.NeedServices} onChange={onChangedKind(\"NeedServices\")} /> Services</NoWrap>\n                    <br/>\n                    <NoWrap><Checkbox color=\"primary\" checked={this.state.rowsFilters.NeedContainers} onChange={onChangedKind(\"NeedContainers\")} /> Containers</NoWrap>\n                    <br/>\n                    <NoWrap><Checkbox color=\"primary\" checked={this.state.rowsFilters.NeedKernelThreads} onChange={onChangedKind(\"NeedKernelThreads\")} /> Kernel Threads</NoWrap>\n                </div>\n            </div>\n\n        );\n    }\n}\n","// _________________________________________________\nimport React from \"react\";\nimport processListStore from \"./ProcessListStore\";\n\n// on fetch\nexport const fillCalculatedFields = (processList) =>\n{\n    const kinds = [\"\", \"Init\", \"Service\", \"Container\"];\n    processList.forEach(process => {\n\n        // rename mixedPriority --> priority? \n        process.priority = process.mixedPriority;\n\n        // convert numeric enum ProcessKind to string\n        if (process.rss === 0)\n            process.kind = \"Kernel\";\n        else if (process.kind && process.kind >= 1 && process.kind <=3)\n            process.kind = kinds[process.kind];\n        else\n            process.kind = \"\";\n\n    });\n}\n\nexport const filterByKind = (processList, rowsFilters) => {\n    if (rowsFilters.NeedNoFilter) return processList;\n    let ret = [];\n    processList.forEach(process => {\n        let isIt = false;\n        if (rowsFilters.NeedKernelThreads && process.kind === \"Kernel\") isIt = true;\n        else if (rowsFilters.NeedServices && process.kind === \"Service\") isIt = true;\n        else if (rowsFilters.NeedContainers && process.kind === \"Container\") isIt = true;\n        else if (process.kind === \"Init\") isIt = true;\n        if (isIt) ret.push(process);\n    });\n\n    return ret;\n}\n\n// for debugger only: slice long list \nexport const trimLongListInDebugger = (processes) => {\n    if (processes.length > 42 && process.env.NODE_ENV !== 'production' && processListStore.getRowsFilters().NeedNoFilter && processListStore.getRowsFilters().TopFilter === 0)\n        processes = processes.slice(0, 42);\n\n    return processes;\n}\n\n","import React from 'react';\nimport MomentFormat from 'moment';\n\nimport {faCheck, faCheckDouble} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport * as Helper from \"../../Helper\";\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport processListStore from \"./Store/ProcessListStore\";\nimport * as ProcessListLocalStore from \"./Store/ProcessListLocalStore\"\nimport ProcessColumnsDefinition from \"./ProcessColumnsDefinition\";\nimport * as ProcessListTransformations from \"./Store/ProcessListTransformations\"\n\n// require('typeface-noto-sans');\n\nlet defaultSorting = ProcessListLocalStore.Sorting.get();\n\nexport class ProcessListTable extends React.Component {\n    static displayName = ProcessListTable.name;\n\n    constructor(props) {\n        super(props);\n\n        this.updatedProcessList = this.updatedProcessList.bind(this);\n        this.state = {\n            processList: [],\n            sorting: defaultSorting,\n        };\n\n        processListStore.on('storeUpdated', this.updatedProcessList);\n   }\n\n    updatedProcessList() {\n        this.setState({\n            processList: processListStore.getProcessList()\n        });\n    }\n    \n    render() {\n        \n        let processListRaw = this.state.processList;\n        let rowsFilters = processListStore.getRowsFilters();\n        let selectedColumns = processListStore.getSelectedColumns();\n        let processList = ProcessListTransformations.filterByKind(processListRaw, rowsFilters);\n        // page size\n        let maxRows = processList.length;\n        let pageSize;\n        if (rowsFilters.TopFilter > 0) {\n            maxRows = Math.min(rowsFilters.TopFilter, processList.length);\n            pageSize = maxRows;\n            if (processListRaw.length === 0)\n                pageSize = 6;\n        }\n        else {\n            pageSize = Math.max(processList.length, 6);\n        }\n            \n        const noop = () => null;\n        const isColumnVisible = (columnKey) => selectedColumns.indexOf(columnKey) >= 0;\n\n        // fontFamily: \"Noto Sans\"\n        const tableFontSize = 14\n        let styleHeader1 = { fontSize: tableFontSize };\n        let styleHeader2 = { fontSize: tableFontSize };\n\n        styleHeader1 = {};\n        styleHeader2 = {};\n        \n        function cellPriority(row) {\n            const priority = row.value;\n            if (priority == 20) return (<span className=\"default-priority\">0 (default)</span>);\n            if (priority >= 0 && priority <= 19) return (<span className=\"bad-priority\">{(priority-20)} (nasty)</span>);\n            if (priority >= 21 && priority <= 39) return (<span className=\"nice-priority\">{(priority-20)} (nice)</span>);\n            if (priority >= -100 && priority <= -2) return (<span className=\"rt-priority\">RT {(-priority-1)}</span>);\n            return priority;\n        }\n        \n        function cellPercents(row) {\n            const perCents = row.value * 100;\n            if (perCents < 0.0001) return null;\n            return (<>{Math.round(perCents*10)/10}<small>%</small></>);\n        }\n        \n        function cellCurrent(row) {\n            const value = row.value;\n            if (value < 0.0001) return null;\n            return (<>{Helper.Common.formatAnything(value, 0, \"\",\"\")}<small><sup><b> -1</b></sup></small></>);\n        }\n\n        function cellKbTotal(row) {\n            const value = row.value;\n            if (value < 0.0001) return null;\n            return Helper.Common.formatAnything(value, 1, \" \",\"B\");\n        }\n\n        function cellMemory(row) {\n            const value = row.value;\n            if (value < 0.0001) return null;\n            return Helper.Common.formatAnything(value*1024, 1, \" \",\"B\");\n        }\n\n        function cellDuration(row) {\n            const value = row.value;\n            if (value < 0.0001) return null;\n            return Helper.Common.formatDuration(Math.round(value,1), {}, {color:\"grey\"});\n        }\n\n        function cellCounter(row) {\n            const value = row.value;\n            if (value < 0.0001) return null;\n            return Helper.Common.formatAnything(value, 0, \" \",\"\");\n        }\n\n\n        const cells = {\n            priority: cellPriority,\n            \n            rss: cellMemory,\n            shared: cellMemory,\n            swapped: cellMemory,\n\n            userCpuUsage_PerCents: cellPercents,\n            kernelCpuUsage_PerCents: cellPercents,\n            totalCpuUsage_PerCents: cellPercents,\n            childrenUserCpuUsage_PerCents: cellPercents,\n            childrenKernelCpuUsage_PerCents: cellPercents,\n            childrenTotalCpuUsage_PerCents: cellPercents,\n\n            uptime: cellDuration,\n            userCpuUsage: cellDuration,\n            kernelCpuUsage: cellDuration,\n            totalCpuUsage: cellDuration,\n            childrenUserCpuUsage: cellDuration,\n            childrenKernelCpuUsage: cellDuration,\n            childrenTotalCpuUsage: cellDuration,\n            \n            ioTime: cellDuration,\n            ioTime_PerCents: cellPercents,\n\n            readBytes: cellKbTotal,\n            writeBytes: cellKbTotal,\n            readBlockBackedBytes: cellKbTotal,\n            writeBlockBackedBytes: cellKbTotal,\n            readBlockBackedBytes_Current: cellCurrent,\n            writeBlockBackedBytes_Current: cellCurrent,\n            readSysCalls_Current: cellCurrent,\n            writeSysCalls_Current: cellCurrent,\n            readSysCalls: cellCounter,\n            writeSysCalls: cellCounter,\n            readBytes_Current: cellCurrent,\n            writeBytes_Current: cellCurrent,\n\n            minorPageFaults_Current: cellCurrent,\n            majorPageFaults_Current: cellCurrent,\n            childrenMinorPageFaults_Current: cellCurrent,\n            childrenMajorPageFaults_Current: cellCurrent,\n            minorPageFaults: cellCounter,\n            majorPageFaults: cellCounter,\n            childrenMinorPageFaults: cellCounter,\n            childrenMajorPageFaults: cellCounter,\n        };\n        \n        \n        const stylePercents = {textAlign:\"right\"};\n        const cellStyles = {\n            userCpuUsage_PerCents: stylePercents,\n            kernelCpuUsage_PerCents: stylePercents,\n            totalCpuUsage_PerCents: stylePercents,\n            childrenUserCpuUsage_PerCents: stylePercents,\n            childrenKernelCpuUsage_PerCents: stylePercents,\n            childrenTotalCpuUsage_PerCents: stylePercents,\n            ioTime_PerCents: stylePercents\n        }\n        \n        // should be cached by \n        let tableHeaders = [];\n        ProcessColumnsDefinition.Headers.forEach(header => {\n            let tableHeader = {\n                Header: header.caption,\n                // getHeaderProps: (state, rowInfo, column) => {return {style: styleHeader1}},\n                columns: []\n            };\n            \n            header.columns.forEach(column => {\n                if (isColumnVisible(`${header.id}.${column.field}`)) {\n                    const cell = cells[column.field];\n                    let cellStyle = cellStyles[column.field];\n                    if (header.caption !== \"Process\" || column.field === \"uptime\") cellStyle=stylePercents;\n                    \n                    // Column WIDTH definitions\n                    let minWidth = column.field.endsWith(\"_PerCents\") || column.field.endsWith(\"_Current\") ? 41 : 55;\n                    if (column.field === \"pid\") minWidth = 45;\n                    else if (column.field === \"name\") minWidth = 90;\n                    \n                    let tableColumn = {\n                        Header: column.caption,\n                        // getHeaderProps: (state, rowInfo, column) => {return {style: styleHeader2}},\n                        accessor: column.field,\n                        getProps: () => { return cellStyle ? {style:cellStyle} : {}},\n                        minWidth: minWidth,\n                        Cell: cell,\n                        // aggregate: noop,\n                    };\n                    tableHeader.columns.push(tableColumn);\n                }\n            });\n            \n            // skip Empty Groups\n            if (tableHeader.columns.length > 0)\n                tableHeaders.push(tableHeader);\n        });\n        \n        const onSortedChange = (newSorted, column, shiftKey) => {\n            // const defaultSorting = [{ id: 'totalCpuUsage_PerCents', desc: true }]\n            const id = newSorted[0].id;\n            const descDirection = id === \"name\" || id === \"pid\" ? false : true;\n            const newSorting = [{ id: id, desc: descDirection }];\n            ProcessListLocalStore.Sorting.set(newSorting);\n            this.setState({sorting:newSorting});\n        }; \n        \n        \n        return (\n\n            <ReactTable\n                data={processList}\n                showPagination={false}\n                defaultPageSize={pageSize}\n                pageSizeOptions={[pageSize]}\n                pageSize={pageSize}\n                noDataText=\"waiting for ...\"\n                getNoDataProps={() => {return {style:{fontSize: tableFontSize,width: 200,textAlign: \"center\", color:\"gray\", marginTop:30, border: \"1px solid #CCC\"}}}}\n                className={\"-striped -highlight\"}\n                columns={tableHeaders}\n                sorted={this.state.sorting}\n                onSortedChange={onSortedChange} // Called when a sortable column header is clicked with the column itself and if the shiftkey was held. If the column is a pivoted column, `column` will be an array of columns\n            />\n        );\n        \n    }\n}\n","import React, {Component} from \"react\";\nimport processListStore from \"./Store/ProcessListStore\";\nimport * as ProcessListActions from \"./Store/ProcessListActions\"\nimport Button from \"@material-ui/core/Button\";\nimport {Dialog, TextField} from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCog} from '@fortawesome/free-solid-svg-icons'\n\nimport \"./ProcessList.css\"\nimport {ColumnChooserComponent} from \"./ColumnChooserComponent\";\nimport {RowsFiltersComponent} from \"./RowsFiltersComponent\"\nimport {ProcessListTable} from \"./ProcessListTable\";\nimport * as ProcessListTransformations from \"./Store/ProcessListTransformations\"\nimport * as ProcessListLocalStorage from \"./Store/ProcessListLocalStore\";\nimport * as DataSourceActions from \"../../stores/DataSourceActions\";\nimport * as Helper from \"../../Helper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport class ProcessListContainerV1 extends Component {\n    static displayName = ProcessListContainerV1.name;\n\n    timerId = null;\n    isRunning = false;\n\n    constructor(props) {\n        super(props);\n\n        this.updatedSelectedColumns = this.updatedSelectedColumns.bind(this);\n        this.refreshProcessList = this.refreshProcessList.bind(this);\n        this.requestProcessListUpdate = this.requestProcessListUpdate.bind(this);\n        \n        this.state = {\n            openedColumnsChooser: false,\n            openedRowsFilters: false\n        };\n\n        processListStore.on('storeUpdated', this.updatedSelectedColumns);\n    }\n    \n    componentDidMount() {\n        // do nothing\n        this.timerId = setInterval(this.waiterTick.bind(this), 1000);\n        // it works well on slow connections\n        this.isRunning = true;\n        this.requestProcessListUpdate();\n    }\n\n    componentWillUnmount() {\n        this.isRunning = false;\n        if (this.timerId !== null) clearInterval(this.timerId);\n        processListStore.removeListener('storeUpdated', this.updatedSelectedColumns);\n    }\n    \n    updatedSelectedColumns() {\n        this.setState({selectedColumns: processListStore.getSelectedColumns()})\n    }\n\n    waiterTick()\n    {\n        // setTimeout\n        // this.refreshProcessList();\n    }\n\n    refreshProcessList() {\n\n        let apiUrl = 'api/ProcessList';\n        try {\n            fetch(apiUrl, {method: \"POST\"})\n                .then(response => {\n                    Helper.toConsole(`Response.Status for ${apiUrl} obtained: ${response.status}`);\n                    // Helper.toConsole(response);\n                    // Helper.toConsole(response.body);\n                    return response.ok ? response.json() : {error: response.status, details: response.json()}\n                })\n                .then(processes => {\n                    if (processes.length > 42 && process.env.NODE_ENV !== 'production' && processListStore.getRowsFilters().NeedNoFilter && processListStore.getRowsFilters().TopFilter === 0)\n                        processes = processes.slice(0,42);\n\n                    ProcessListTransformations.fillCalculatedFields(processes);\n                    ProcessListActions.ProcessListUpdated(processes);\n                    Helper.notifyTrigger(\"ProcessListArrived\", \"wow!\");\n                    Helper.toConsole(\"ProcessList\", processes);\n                    this.requestProcessListUpdate();\n                })\n                .catch(error => { \n                    console.log(error);\n                    this.requestProcessListUpdate();\n                });\n        }\n        catch(err)\n        {\n            this.requestProcessListUpdate();\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\n        }\n    }\n    \n    active = true;\n    requestProcessListUpdate() {\n        if (this.isRunning) {\n            if (Helper.isDocumentHidden()) {\n                const needUpdate = this.active === true;\n                this.active = false;\n                setTimeout(this.requestProcessListUpdate, 100);\n                if (needUpdate) this.setState({active: false});\n            } else {\n                const needForce = this.active === false; \n                this.active = true;\n                setTimeout(this.refreshProcessList, needForce ? 1 : 1000);\n            }\n        }\n    }\n    \n    render() {\n        // TODO: columns chooser button and list of processes\n        let handleOpenColumnsChooser =  _ => this.setState({openedColumnsChooser: true});\n        let handleCloseColumnsChooser = _ => this.setState({openedColumnsChooser: false});\n        let handleOpenRowsFilters =     _ => this.setState({openedRowsFilters: true});\n        let handleCloseRowsFilters =    _ => {\n            this.setState({openedRowsFilters: false}); \n        }\n\n        function ColumnChooserButtonText() {\n            let numberOfColumns = processListStore.getSelectedColumns().length;\n            let columnsCounter = null;\n            if (numberOfColumns > 1) columnsCounter = (<>{numberOfColumns} columns</>);\n            else if (numberOfColumns === 1) columnsCounter = (<>One column</>);\n            else columnsCounter = (<>No columns?</>);\n            return columnsCounter;\n        }\n        \n        return (\n            <div>\n                <div style={{textAlign: \"right\"}}>\n                    {this.active}\n                    <Button variant=\"text\" color=\"default\" onClick={handleOpenRowsFilters}>\n                        Filter rows&nbsp;&nbsp;<FontAwesomeIcon style={{}} icon={faCog}/>\n                    </Button>\n                    &nbsp;&nbsp;&nbsp;\n                    <Button variant=\"text\" color=\"default\" onClick={handleOpenColumnsChooser}>\n                        <ColumnChooserButtonText/>&nbsp;&nbsp;<FontAwesomeIcon style={{}} icon={faCog}/>\n                    </Button>\n                </div>\n                \n                <div style={{height: 8, fontSize: 8}}>&nbsp;</div>\n\n                <div style={{padding: 0, margin: 0, opacity: (this.active ? 1.0 : 0.5)}}>\n                    <ProcessListTable />\n                </div>\n\n                <Dialog open={this.state.openedColumnsChooser} onClose={handleCloseColumnsChooser}\n                        aria-labelledby=\"columns-chooser-title\" fullWidth={true} maxWidth={\"md\"}>\n                    <DialogTitle id=\"columns-chooser-title\" style={{textAlign:\"center\"}}>\n                        <Button variant=\"text\" onClick={handleCloseColumnsChooser}>\n                            Selected Columns\n                        </Button>\n                    </DialogTitle>\n                    <DialogContent style={{textAlign_ignore: \"center\"}} id=\"columns-chooser-content\">\n                        <ColumnChooserComponent />\n                    </DialogContent>\n                </Dialog>\n                \n                <Dialog open={this.state.openedRowsFilters} onClose={handleCloseRowsFilters}\n                        aria-labelledby=\"rows-chooser-title\" fullWidth={true} maxWidth={\"sm\"}>\n                    <DialogTitle id=\"rows-chooser-title\" style={{textAlign:\"center\", borderBottom: \"1px solid #AAA\"}}>\n                        <Button variant=\"text\" onClick={handleCloseRowsFilters}>\n                            Process Filters\n                        </Button>\n                    </DialogTitle>\n                    <DialogContent style={{textAlign_ignore: \"center\"}} id=\"columns-chooser-content\">\n                        <RowsFiltersComponent />\n                    </DialogContent>\n                </Dialog>\n\n            </div>\n        )\n    }\n}\n\n","import \"c3/c3.css\"\nimport \"./App.css\"\nimport AppGitInfo from './AppGitInfo'\n\nimport 'babel-polyfill';\nimport React, { Component } from 'react';\nimport { Route, Switch, Router } from 'react-router';\nimport { Layout } from './components/Layout';\nimport { Poc1Chart } from './components/Poc1Chart';\nimport { Poc2Chart } from './components/Poc2Chart';\nimport MNav from \"./components/MaterialNav\"\nimport { NetChartContainer } from './components/NetChartContainer';\nimport NetBenchmarkV1 from './components/NetBenchmark/NetBenchmarkV1';\n\nimport { NetChartContainer_V2 } from './components/NetChartContainer_V2';\nimport { BlockChartContainer_V2 } from './components/BlockStatChartContainer_V2';\nimport { MountsList } from './components/MountsList';\nimport dataSourceListener from './stores/DataSourceListener';\nimport \"./components/MyC3.css\"\nimport DiskBenchmarkDialog from \"./components/DiskBenchmark/DiskBenchmarkDialog\";\nimport PopperLab from \"./components/Popper-Lab\"\n\nimport { ProcessListContainerV1 } from \"./components/ProcessList/ProcessListContainerV1\"\nimport {RowsFiltersComponent} from \"./components/ProcessList/RowsFiltersComponent\";\nimport {ColumnChooserComponent} from \"./components/ProcessList/ColumnChooserComponent\";\nimport {DiskBenchmarkResult} from \"./components/DiskBenchmark/DiskBenchmarkResult\";\nimport {SharedDiskBenchmarkFlow} from \"./SharedDiskBenchmarkFlow\";\nimport * as Helper from \"./Helper\";\n\nrequire('typeface-roboto')\n\n// fetch for IE11\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\n\nexport default class App extends Component {\n    static displayName = App.name;\n\n    constructor (props) {\n        super(props);\n\n        this.logVersionInfo();\n        Helper.toConsole(`window.jQuery is [${typeof window.$}]`)\n    }\n    \n    logVersionInfo()\n    {\n        AppGitInfo.CommitAt = new Date(AppGitInfo.CommitDate*1000).toLocaleString();\n        AppGitInfo.BuildAt = new Date(AppGitInfo.BuildDate*1000).toLocaleString();\n        Helper.toConsole(\"W3Top build info\", AppGitInfo, {force: true});\n    }\n    \n    componentDidMount() {\n        if (!SharedDiskBenchmarkFlow.isSharedBenchmarkResult())\n            dataSourceListener.start();\n    }\n    \n    componentWillUnmount() {\n        dataSourceListener.stop();\n    }\n    \n    static _404 = () => (\n        <h6 style={{textAlign: \"center\"}}>\n            <img src=\"https://cdnjs.cloudflare.com/ajax/libs/emojione/2.2.7/assets/png/2611.png\" width={24}/>&nbsp;\n            Oops! 404\n        </h6>\n    );\n    \n    static GetMenuComponents = () => {\n        App._404.displayName = \"Page_404\";\n        PopperLab.displayName = \"PopperLab\";\n        DiskBenchmarkDialog.displayName = \"DiskBenchmarkDialog\";\n        \n        return [\n            DiskBenchmarkResult,\n            NetChartContainer_V2,\n            BlockChartContainer_V2,\n            MNav,\n            Poc1Chart,\n            Poc2Chart,\n            NetChartContainer,\n            NetChartContainer_V2,\n            MountsList,\n            DiskBenchmarkDialog,\n            NetBenchmarkV1,\n            PopperLab,\n            App._404,\n            ProcessListContainerV1,\n            RowsFiltersComponent,\n            ColumnChooserComponent,\n        ];\n    };\n    \n    render () {\n        if (SharedDiskBenchmarkFlow.isSharedBenchmarkResult()) {\n            if (typeof document === \"object\") document.title = \"Drive Benchmark by W3Top\";\n            const benchmarkResult = SharedDiskBenchmarkFlow.tryParse();\n            if (benchmarkResult) {\n                return <DiskBenchmarkResult opened={true} selectedRow={benchmarkResult} forced={true}/>;\n            }\n            else {\n                return <h4 style={{}}>broken url</h4>\n            }\n        }\n        \n        return (\n            <Layout>\n                    <Switch>\n                        {/*<Route exact path='/' component={NetChartContainer_V2} />*/}\n                        <Route exact path='/' component={ProcessListContainerV1} />\n                        <Route exact path='/disks' component={BlockChartContainer_V2} />\n                        <Route exact path='/processes' component={ProcessListContainerV1} />\n                        <Route exact path='/material-nav' component={MNav} />\n                        <Route exact path='/1-axis' component={Poc1Chart} />\n                        <Route exact path='/2-axis' component={Poc2Chart} />\n                        <Route exact path='/net-v1' component={NetChartContainer} />\n                        <Route exact path='/net-v2' component={NetChartContainer_V2} />\n                        <Route exact path='/mounts' component={MountsList} />\n                        <Route exact path='/disk-benchmark' component={DiskBenchmarkDialog} />\n                        <Route exact path='/net-benchmark-pre1' component={NetBenchmarkV1} />\n                        <Route exact path='/popper-lab' component={PopperLab} />\n                        <Route path=\"*\" component={App._404} />\n                    </Switch>\n            </Layout>\n        );\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n"],"sourceRoot":""}